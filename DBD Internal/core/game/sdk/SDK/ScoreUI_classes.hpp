#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoreUI

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "ScoreRuntime_structs.hpp"


namespace SDK
{

// Class ScoreUI.ScoreWidgetBase
// 0x0008 (0x0320 - 0x0318)
class UScoreWidgetBase : public ULTMWidgetBase
{
public:
	class AFortAthenaMutator_Score*               CachedScoreMutator;                                // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BindToMutator_BP();
	void HandleAircraftPhase_BP();
	void OnScoreThresholdMet();
	void OnScoreThresholdMet_BP();
	void OnTeamScoredPoints(const struct FScoreLTMTeamDataEntry& TeamData);
	void UnbindFromMutator_BP();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoreWidgetBase">();
	}
	static class UScoreWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreWidgetBase>();
	}
};
static_assert(alignof(UScoreWidgetBase) == 0x000008, "Wrong alignment on UScoreWidgetBase");
static_assert(sizeof(UScoreWidgetBase) == 0x000320, "Wrong size on UScoreWidgetBase");
static_assert(offsetof(UScoreWidgetBase, CachedScoreMutator) == 0x000318, "Member 'UScoreWidgetBase::CachedScoreMutator' has a wrong offset!");

// Class ScoreUI.ScoreBonusWindowWidget
// 0x0000 (0x0320 - 0x0320)
class UScoreBonusWindowWidget final : public UScoreWidgetBase
{
public:
	void OnBonusWindowEnded_BP();
	void OnBonusWindowPreviewStarted_BP(EScoreLTMBonusWindowCategory BonusCategory, const class FText& BonusCategoryText, float ServerPreviewEndTime);
	void OnBonusWindowStarted_BP(EScoreLTMBonusWindowCategory BonusCategory, const class FText& BonusCategoryText, float Multiplier, float ServerEndTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoreBonusWindowWidget">();
	}
	static class UScoreBonusWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreBonusWindowWidget>();
	}
};
static_assert(alignof(UScoreBonusWindowWidget) == 0x000008, "Wrong alignment on UScoreBonusWindowWidget");
static_assert(sizeof(UScoreBonusWindowWidget) == 0x000320, "Wrong size on UScoreBonusWindowWidget");

// Class ScoreUI.ScoreTeammateStatusNotificationWidget
// 0x0010 (0x0330 - 0x0320)
class UScoreTeammateStatusNotificationWidget final : public UScoreWidgetBase
{
public:
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTeammateScoredPoints_BP(int32 PointsScored, const class FText& ScoreTypeText, bool bWasBonus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoreTeammateStatusNotificationWidget">();
	}
	static class UScoreTeammateStatusNotificationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreTeammateStatusNotificationWidget>();
	}
};
static_assert(alignof(UScoreTeammateStatusNotificationWidget) == 0x000008, "Wrong alignment on UScoreTeammateStatusNotificationWidget");
static_assert(sizeof(UScoreTeammateStatusNotificationWidget) == 0x000330, "Wrong size on UScoreTeammateStatusNotificationWidget");

// Class ScoreUI.ScoreTeamNotificationWidget
// 0x0000 (0x0320 - 0x0320)
class UScoreTeamNotificationWidget final : public UScoreWidgetBase
{
public:
	void OnOwningTeamScoredPoints_BP(bool bWasOwningPlayer, int32 PointsScored, const class FText& ScoreTypeText, int32 BigScoreThreshold, bool bWasBonus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoreTeamNotificationWidget">();
	}
	static class UScoreTeamNotificationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreTeamNotificationWidget>();
	}
};
static_assert(alignof(UScoreTeamNotificationWidget) == 0x000008, "Wrong alignment on UScoreTeamNotificationWidget");
static_assert(sizeof(UScoreTeamNotificationWidget) == 0x000320, "Wrong size on UScoreTeamNotificationWidget");

}

