#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StormShieldModifierRuntime

#include "Basic.hpp"

#include "StormShieldModifierRuntime_classes.hpp"
#include "StormShieldModifierRuntime_parameters.hpp"


namespace SDK
{

// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.OnRep_CurrentProxyCircle
// (Final, Native, Private)

void AFortAthenaMutator_SplitStorm::OnRep_CurrentProxyCircle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_CurrentProxyCircle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.OnSafeZoneIndicatorSpawned
// (Final, Native, Private)
// Parameters:
// class AFortSafeZoneIndicator*           SafeZoneIndicator                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_SplitStorm::OnSafeZoneIndicatorSpawned(class AFortSafeZoneIndicator* SafeZoneIndicator)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSafeZoneIndicatorSpawned");

	Params::FortAthenaMutator_SplitStorm_OnSafeZoneIndicatorSpawned Parms{};

	Parms.SafeZoneIndicator = SafeZoneIndicator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.OnSafeZonePhaseChanged
// (Final, Native, Private)

void AFortAthenaMutator_SplitStorm::OnSafeZonePhaseChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSafeZonePhaseChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.SetProxyCenter
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          NewCenter                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_SplitStorm::SetProxyCenter(const struct FVector& NewCenter)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProxyCenter");

	Params::FortAthenaMutator_SplitStorm_SetProxyCenter Parms{};

	Parms.NewCenter = std::move(NewCenter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.SetProxyRadius
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewRadius                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_SplitStorm::SetProxyRadius(const float NewRadius)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProxyRadius");

	Params::FortAthenaMutator_SplitStorm_SetProxyRadius Parms{};

	Parms.NewRadius = NewRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.SetSafeZoneProxyPhase
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESplitStormProxyPhase                   NewPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_SplitStorm::SetSafeZoneProxyPhase(ESplitStormProxyPhase NewPhase)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSafeZoneProxyPhase");

	Params::FortAthenaMutator_SplitStorm_SetSafeZoneProxyPhase Parms{};

	Parms.NewPhase = NewPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.StartProxyUpdateTimer
// (Final, Native, Private)

void AFortAthenaMutator_SplitStorm::StartProxyUpdateTimer()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartProxyUpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StormShieldModifierRuntime.FortAthenaMutator_SplitStorm.UpdateProxyCenterAndRadius
// (Final, Native, Private)

void AFortAthenaMutator_SplitStorm::UpdateProxyCenterAndRadius()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateProxyCenterAndRadius");

	UObject::ProcessEvent(Func, nullptr);
}

}

