#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownEventTileInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ShowdownEventTileInfo.ShowdownEventTileInfo_C
// 0x0100 (0x07B8 - 0x06B8)
class UShowdownEventTileInfo_C final : public UFortShowdownDetailView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FocusPin;                                          // 0x06C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideSocketShadow_Past;                             // 0x06C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideSocketShadow;                                  // 0x06D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Focus;                                             // 0x06D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Focus_Ended;                                       // 0x06E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionSize;                                    // 0x06E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_Date;                                 // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_Score;                                // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_pts;                               // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_EventPinState;                // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_TimeFormat;                   // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_TimeFormatTitle;              // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Content_Score;                                     // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DateText;                                          // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Lock;                                        // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Socket;                                      // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxPin;                                       // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ScoreValue;                                        // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownPin_C*                         ShowdownPin;                                       // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  Switcher_EventWindowUnlockState;                   // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TimeDescriptionText;                               // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TimeDescriptionTextRelative;                       // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(EFortShowdownEventState EventState)> SetEventState;                // 0x0770(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          isEnded;                                           // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isPin;                                             // 0x0781(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FFortTournamentDisplayInfo& DisplayInfo)> SetDisplayInfo; // 0x0788(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInstanceDynamic*               TextFontMaterial;                                  // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PointFontMaterial;                                 // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              MultiRoundSession;                                 // 0x07A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_ShowdownEventTileInfo(int32 EntryPoint);
	void EventColorize();
	void Construct();
	void EventAnimHover(bool In);
	void EventStyleSocket();
	void EventAnimFocus(bool In);
	void RefreshDataBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShowdownEventTileInfo_C">();
	}
	static class UShowdownEventTileInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowdownEventTileInfo_C>();
	}
};
static_assert(alignof(UShowdownEventTileInfo_C) == 0x000008, "Wrong alignment on UShowdownEventTileInfo_C");
static_assert(sizeof(UShowdownEventTileInfo_C) == 0x0007B8, "Wrong size on UShowdownEventTileInfo_C");
static_assert(offsetof(UShowdownEventTileInfo_C, UberGraphFrame) == 0x0006B8, "Member 'UShowdownEventTileInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, FocusPin) == 0x0006C0, "Member 'UShowdownEventTileInfo_C::FocusPin' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, HideSocketShadow_Past) == 0x0006C8, "Member 'UShowdownEventTileInfo_C::HideSocketShadow_Past' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, HideSocketShadow) == 0x0006D0, "Member 'UShowdownEventTileInfo_C::HideSocketShadow' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Focus) == 0x0006D8, "Member 'UShowdownEventTileInfo_C::Focus' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Focus_Ended) == 0x0006E0, "Member 'UShowdownEventTileInfo_C::Focus_Ended' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, TransitionSize) == 0x0006E8, "Member 'UShowdownEventTileInfo_C::TransitionSize' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonBorder_Date) == 0x0006F0, "Member 'UShowdownEventTileInfo_C::CommonBorder_Date' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonBorder_Score) == 0x0006F8, "Member 'UShowdownEventTileInfo_C::CommonBorder_Score' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonTextBlock_pts) == 0x000700, "Member 'UShowdownEventTileInfo_C::CommonTextBlock_pts' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonWidgetSwitcher_EventPinState) == 0x000708, "Member 'UShowdownEventTileInfo_C::CommonWidgetSwitcher_EventPinState' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonWidgetSwitcher_TimeFormat) == 0x000710, "Member 'UShowdownEventTileInfo_C::CommonWidgetSwitcher_TimeFormat' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, CommonWidgetSwitcher_TimeFormatTitle) == 0x000718, "Member 'UShowdownEventTileInfo_C::CommonWidgetSwitcher_TimeFormatTitle' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Content_Score) == 0x000720, "Member 'UShowdownEventTileInfo_C::Content_Score' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, DateText) == 0x000728, "Member 'UShowdownEventTileInfo_C::DateText' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Image_Lock) == 0x000730, "Member 'UShowdownEventTileInfo_C::Image_Lock' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Image_Socket) == 0x000738, "Member 'UShowdownEventTileInfo_C::Image_Socket' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, ScaleBoxPin) == 0x000740, "Member 'UShowdownEventTileInfo_C::ScaleBoxPin' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, ScoreValue) == 0x000748, "Member 'UShowdownEventTileInfo_C::ScoreValue' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, ShowdownPin) == 0x000750, "Member 'UShowdownEventTileInfo_C::ShowdownPin' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, Switcher_EventWindowUnlockState) == 0x000758, "Member 'UShowdownEventTileInfo_C::Switcher_EventWindowUnlockState' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, TimeDescriptionText) == 0x000760, "Member 'UShowdownEventTileInfo_C::TimeDescriptionText' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, TimeDescriptionTextRelative) == 0x000768, "Member 'UShowdownEventTileInfo_C::TimeDescriptionTextRelative' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, SetEventState) == 0x000770, "Member 'UShowdownEventTileInfo_C::SetEventState' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, isEnded) == 0x000780, "Member 'UShowdownEventTileInfo_C::isEnded' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, isPin) == 0x000781, "Member 'UShowdownEventTileInfo_C::isPin' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, SetDisplayInfo) == 0x000788, "Member 'UShowdownEventTileInfo_C::SetDisplayInfo' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, TextFontMaterial) == 0x000798, "Member 'UShowdownEventTileInfo_C::TextFontMaterial' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, PointFontMaterial) == 0x0007A0, "Member 'UShowdownEventTileInfo_C::PointFontMaterial' has a wrong offset!");
static_assert(offsetof(UShowdownEventTileInfo_C, MultiRoundSession) == 0x0007A8, "Member 'UShowdownEventTileInfo_C::MultiRoundSession' has a wrong offset!");

}

