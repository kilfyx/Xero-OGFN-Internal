#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortSelectableRadialEntry

#include "Basic.hpp"

#include "FortSelectableRadialEntry_classes.hpp"
#include "FortSelectableRadialEntry_parameters.hpp"


namespace SDK
{

// Function FortSelectableRadialEntry.FortSelectableRadialEntry_C.BP_UpdateSelectionColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortSelectableRadialEntry_C::BP_UpdateSelectionColor(bool Selected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSelectableRadialEntry_C", "BP_UpdateSelectionColor");

	Params::FortSelectableRadialEntry_C_BP_UpdateSelectionColor Parms{};

	Parms.Selected_0 = Selected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortSelectableRadialEntry.FortSelectableRadialEntry_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UFortSelectableRadialEntry_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSelectableRadialEntry_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortSelectableRadialEntry.FortSelectableRadialEntry_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UFortSelectableRadialEntry_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSelectableRadialEntry_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortSelectableRadialEntry.FortSelectableRadialEntry_C.OnAvailabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsAvailable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortSelectableRadialEntry_C::OnAvailabilityChanged(bool bIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSelectableRadialEntry_C", "OnAvailabilityChanged");

	Params::FortSelectableRadialEntry_C_OnAvailabilityChanged Parms{};

	Parms.bIsAvailable = bIsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortSelectableRadialEntry.FortSelectableRadialEntry_C.ExecuteUbergraph_FortSelectableRadialEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortSelectableRadialEntry_C::ExecuteUbergraph_FortSelectableRadialEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSelectableRadialEntry_C", "ExecuteUbergraph_FortSelectableRadialEntry");

	Params::FortSelectableRadialEntry_C_ExecuteUbergraph_FortSelectableRadialEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

