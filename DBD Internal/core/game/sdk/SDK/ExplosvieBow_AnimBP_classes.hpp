#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosvieBow_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ExplosvieBow_AnimBP.ExplosvieBow_AnimBP_C
// 0x1200 (0x15C0 - 0x03C0)
class UExplosvieBow_AnimBP_C final : public UFortBowWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimInstanceSubsystemData             AnimBlueprintClassSubsystem_PropertyAccess;        // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03D0(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0400(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0498(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x04C0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x04E0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0500(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0608(0x0108)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0710(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x07F0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x08A0(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0918(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x09C8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A90(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B08(0x0078)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0B80(0x0188)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0D08(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0DD0(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0EB0(0x00E0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0F90(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1058(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1088(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x10A0(0x00A0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1140(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1208(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x12E8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1360(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1390(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1440(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1500(0x0078)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1578(0x0048)()

public:
	void ExecuteUbergraph_ExplosvieBow_AnimBP(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExplosvieBow_AnimBP_AnimGraphNode_ModifyBone_0E1011B841DA7A109A69F18ED59C9A93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExplosvieBow_AnimBP_AnimGraphNode_ModifyBone_D0BC44E84FB0F05DC49A24B18D5B2D51();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ExplosvieBow_AnimBP_C">();
	}
	static class UExplosvieBow_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExplosvieBow_AnimBP_C>();
	}
};
static_assert(alignof(UExplosvieBow_AnimBP_C) == 0x000010, "Wrong alignment on UExplosvieBow_AnimBP_C");
static_assert(sizeof(UExplosvieBow_AnimBP_C) == 0x0015C0, "Wrong size on UExplosvieBow_AnimBP_C");
static_assert(offsetof(UExplosvieBow_AnimBP_C, UberGraphFrame) == 0x0003C0, "Member 'UExplosvieBow_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimBlueprintClassSubsystem_PropertyAccess) == 0x0003C8, "Member 'UExplosvieBow_AnimBP_C::AnimBlueprintClassSubsystem_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_Root) == 0x0003D0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_Slot_1) == 0x000400, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000448, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000470, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000498, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0004C0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0004E0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x000500, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ModifyBone) == 0x000608, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000710, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendListByEnum_1) == 0x0007F0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0008A0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x000918, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ApplyAdditive_2) == 0x0009C8, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000A90, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000B08, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000B80, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_TwoWayBlend) == 0x000D08, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000DD0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000EB0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x000F90, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001058, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_LocalRefPose) == 0x001088, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x0010A0, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x001140, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001208, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0012E8, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_StateResult) == 0x001360, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_StateMachine) == 0x001390, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x001440, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001500, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UExplosvieBow_AnimBP_C, AnimGraphNode_Slot) == 0x001578, "Member 'UExplosvieBow_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");

}

