#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicHUDTestUI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// Class DynamicHUDTestUI.DynamicHUDTestUIDirector
// 0x0028 (0x0248 - 0x0220)
class ADynamicHUDTestUIDirector : public AActor
{
public:
	TArray<class UDynamicHUDScene*>               Scenes;                                            // 0x0220(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDynamicHUDWidgetCatalog*               WidgetCatalog;                                     // 0x0230(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_238[0x10];                                     // 0x0238(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddScene(const class UDynamicHUDScene* Scene);
	void RemoveScene(const class UDynamicHUDScene* Scene);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicHUDTestUIDirector">();
	}
	static class ADynamicHUDTestUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADynamicHUDTestUIDirector>();
	}
};
static_assert(alignof(ADynamicHUDTestUIDirector) == 0x000008, "Wrong alignment on ADynamicHUDTestUIDirector");
static_assert(sizeof(ADynamicHUDTestUIDirector) == 0x000248, "Wrong size on ADynamicHUDTestUIDirector");
static_assert(offsetof(ADynamicHUDTestUIDirector, Scenes) == 0x000220, "Member 'ADynamicHUDTestUIDirector::Scenes' has a wrong offset!");
static_assert(offsetof(ADynamicHUDTestUIDirector, WidgetCatalog) == 0x000230, "Member 'ADynamicHUDTestUIDirector::WidgetCatalog' has a wrong offset!");

// Class DynamicHUDTestUI.DynamicHUDTestWidget
// 0x0000 (0x02C8 - 0x02C8)
class UDynamicHUDTestWidget final : public UFortHUDElementWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicHUDTestWidget">();
	}
	static class UDynamicHUDTestWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicHUDTestWidget>();
	}
};
static_assert(alignof(UDynamicHUDTestWidget) == 0x000008, "Wrong alignment on UDynamicHUDTestWidget");
static_assert(sizeof(UDynamicHUDTestWidget) == 0x0002C8, "Wrong size on UDynamicHUDTestWidget");

// Class DynamicHUDTestUI.DynamicHUDUIManager
// 0x0050 (0x0080 - 0x0030)
class UDynamicHUDUIManager final : public UWorldSubsystem
{
public:
	TMap<class UWorld*, class ADynamicHUDTestUIDirector*> WorldToUIDirectorMap;                      // 0x0030(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicHUDUIManager">();
	}
	static class UDynamicHUDUIManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicHUDUIManager>();
	}
};
static_assert(alignof(UDynamicHUDUIManager) == 0x000008, "Wrong alignment on UDynamicHUDUIManager");
static_assert(sizeof(UDynamicHUDUIManager) == 0x000080, "Wrong size on UDynamicHUDUIManager");
static_assert(offsetof(UDynamicHUDUIManager, WorldToUIDirectorMap) == 0x000030, "Member 'UDynamicHUDUIManager::WorldToUIDirectorMap' has a wrong offset!");

// Class DynamicHUDTestUI.DynamicHUDUIWidget
// 0x0000 (0x02C8 - 0x02C8)
class UDynamicHUDUIWidget final : public UFortHUDElementWidget
{
public:
	void OnUpdateMessage(const class FString& NewMessage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicHUDUIWidget">();
	}
	static class UDynamicHUDUIWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicHUDUIWidget>();
	}
};
static_assert(alignof(UDynamicHUDUIWidget) == 0x000008, "Wrong alignment on UDynamicHUDUIWidget");
static_assert(sizeof(UDynamicHUDUIWidget) == 0x0002C8, "Wrong size on UDynamicHUDUIWidget");

}

