#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SaveTheWorldUI

#include "Basic.hpp"

#include "SaveTheWorldUI_classes.hpp"
#include "SaveTheWorldUI_parameters.hpp"


namespace SDK
{

// Function SaveTheWorldUI.FortQuestMapViewer.HandleLayoutOutroAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer::HandleLayoutOutroAnimationFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLayoutOutroAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapViewer.OnPlayLayoutFadeInAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapViewer::OnPlayLayoutFadeInAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayLayoutFadeInAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapViewer.OnPlayLayoutOutroAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// EViewerNavigationDirection              TravelDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapViewer::OnPlayLayoutOutroAnimation(EViewerNavigationDirection TravelDirection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayLayoutOutroAnimation");

	Params::FortQuestMapViewer_OnPlayLayoutOutroAnimation Parms{};

	Parms.TravelDirection = TravelDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapViewer.OnTryUpdateUserWidgetColor
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateColor                      OverrideColor                                          (Parm, NativeAccessSpecifierPublic)

void UFortQuestMapViewer::OnTryUpdateUserWidgetColor(class UUserWidget* Widget, const struct FSlateColor& OverrideColor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTryUpdateUserWidgetColor");

	Params::FortQuestMapViewer_OnTryUpdateUserWidgetColor Parms{};

	Parms.Widget = Widget;
	Parms.OverrideColor = std::move(OverrideColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapViewer.UpdateViewerData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer::UpdateViewerData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateViewerData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortArmoryScreen.PushHeroLoadoutScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortArmoryScreen::PushHeroLoadoutScreen(class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PushHeroLoadoutScreen");

	Params::FortArmoryScreen_PushHeroLoadoutScreen Parms{};

	Parms.HeroLoadout = HeroLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortArmoryScreen.PushItemInspectionScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemInspectionMode                 Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemTileView*                CycleTileView                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReadOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFavoriting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTemporaryItem                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRarityUpgrading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortArmoryScreen::PushItemInspectionScreen(class UFortItem* ItemToInspect, EFortItemInspectionMode Mode, class UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PushItemInspectionScreen");

	Params::FortArmoryScreen_PushItemInspectionScreen Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.Mode = Mode;
	Parms.CycleTileView = CycleTileView;
	Parms.bReadOnly = bReadOnly;
	Parms.bAllowFavoriting = bAllowFavoriting;
	Parms.bIsTemporaryItem = bIsTemporaryItem;
	Parms.bAllowRarityUpgrading = bAllowRarityUpgrading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortArmoryScreen.PushItemManagementScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            ItemManagementFilter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ItemToSelect                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowAutoMulch                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortArmoryScreen::PushItemManagementScreen(EFortFrontendInventoryFilter ItemManagementFilter, class UFortItem* ItemToSelect, bool bShowAutoMulch)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PushItemManagementScreen");

	Params::FortArmoryScreen_PushItemManagementScreen Parms{};

	Parms.ItemManagementFilter = ItemManagementFilter;
	Parms.ItemToSelect = ItemToSelect;
	Parms.bShowAutoMulch = bShowAutoMulch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCommandScreen.HandleShowAllStats
// (Event, Protected, BlueprintEvent)

void UFortCommandScreen::HandleShowAllStats()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowAllStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCommandScreen.HandleUpgradeInspectHero
// (Event, Protected, BlueprintEvent)

void UFortCommandScreen::HandleUpgradeInspectHero()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleUpgradeInspectHero");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCommandScreen.PushHeroLoadoutScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCommandScreen::PushHeroLoadoutScreen(class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PushHeroLoadoutScreen");

	Params::FortCommandScreen_PushHeroLoadoutScreen Parms{};

	Parms.HeroLoadout = HeroLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCommandScreen.PushItemInspectionScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemInspectionMode                 Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemTileView*                CycleTileView                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReadOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFavoriting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTemporaryItem                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRarityUpgrading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCommandScreen::PushItemInspectionScreen(class UFortItem* ItemToInspect, EFortItemInspectionMode Mode, class UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PushItemInspectionScreen");

	Params::FortCommandScreen_PushItemInspectionScreen Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.Mode = Mode;
	Parms.CycleTileView = CycleTileView;
	Parms.bReadOnly = bReadOnly;
	Parms.bAllowFavoriting = bAllowFavoriting;
	Parms.bIsTemporaryItem = bIsTemporaryItem;
	Parms.bAllowRarityUpgrading = bAllowRarityUpgrading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.ClearRewards
// (Native, Public, BlueprintCallable)

void UFortCollectionBookGenericRewardWidget::ClearRewards()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.OnRewardStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ECollectionBookRewardStatus             NewStatus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::OnRewardStatusChanged(ECollectionBookRewardStatus NewStatus)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardStatusChanged");

	Params::FortCollectionBookGenericRewardWidget_OnRewardStatusChanged Parms{};

	Parms.NewStatus = NewStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.SetCurrentItemToDisplay
// (Native, Protected)
// Parameters:
// class UFortItem*                        ItemToDisplay                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetCurrentItemToDisplay(class UFortItem* ItemToDisplay)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentItemToDisplay");

	Params::FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay Parms{};

	Parms.ItemToDisplay = ItemToDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.SetRewards
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  Rewards                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetRewards(const struct FFortRewardInfo& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRewards");

	Params::FortCollectionBookGenericRewardWidget_SetRewards Parms{};

	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.SetRewardStatus
// (Native, Public, BlueprintCallable)
// Parameters:
// ECollectionBookRewardStatus             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetRewardStatus(ECollectionBookRewardStatus Status)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRewardStatus");

	Params::FortCollectionBookGenericRewardWidget_SetRewardStatus Parms{};

	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.GetRewardStatus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECollectionBookRewardStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECollectionBookRewardStatus UFortCollectionBookGenericRewardWidget::GetRewardStatus() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRewardStatus");

	Params::FortCollectionBookGenericRewardWidget_GetRewardStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookGenericRewardWidget.HasRewards
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookGenericRewardWidget::HasRewards() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasRewards");

	Params::FortCollectionBookGenericRewardWidget_HasRewards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookItemPopupMenu.CanItemBePurchased
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookItemPopupMenu::CanItemBePurchased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanItemBePurchased");

	Params::FortCollectionBookItemPopupMenu_CanItemBePurchased Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookItemPopupMenu.CanItemBeUnslotted
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookItemPopupMenu::CanItemBeUnslotted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanItemBeUnslotted");

	Params::FortCollectionBookItemPopupMenu_CanItemBeUnslotted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookItemPopupMenu.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookItemPopupMenu::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemChanged");

	Params::FortCollectionBookItemPopupMenu_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookItemPopupMenu.HandleItemUpdated
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookItemPopupMenu::HandleItemUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookItemPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCollectionBookSlotButton*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCollectionBookSlotButton* UFortCollectionBookItemPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHostButton");

	Params::FortCollectionBookItemPopupMenu_GetHostButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookOverviewWidget.HandlePagesChanged
// (Final, Native, Private)
// Parameters:
// class UFortCollectionBookManager*       CBManager                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookOverviewWidget::HandlePagesChanged(class UFortCollectionBookManager* CBManager)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePagesChanged");

	Params::FortCollectionBookOverviewWidget_HandlePagesChanged Parms{};

	Parms.CBManager = CBManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookOverviewWidget.OnActivated
// (Native, Event, Public, BlueprintEvent)

void UFortCollectionBookOverviewWidget::OnActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookOverviewWidget.OnDeactivated
// (Native, Event, Public, BlueprintEvent)

void UFortCollectionBookOverviewWidget::OnDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPageDetailsWidget.HandleRewardDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanelLegacy*    DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::HandleRewardDetailsModalWidgetDeactivated(class UCommonActivatablePanelLegacy* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRewardDetailsModalWidgetDeactivated");

	Params::FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageDetailsWidget.OnDetailsPageChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          InNewDetailsPage                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnDetailsPageChanged(const class UFortCollectionBookPage* InNewDetailsPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDetailsPageChanged");

	Params::FortCollectionBookPageDetailsWidget_OnDetailsPageChanged Parms{};

	Parms.InNewDetailsPage = InNewDetailsPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageDetailsWidget.OnPageProgressionUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TotalFilledSlots                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnPageProgressionUpdated(int32 TotalFilledSlots, int32 TotalSlots, EFortCollectionBookState State)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPageProgressionUpdated");

	Params::FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated Parms{};

	Parms.TotalFilledSlots = TotalFilledSlots;
	Parms.TotalSlots = TotalSlots;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageDetailsWidget.OnSlotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotItemComplete");

	Params::FortCollectionBookPageDetailsWidget_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageDetailsWidget.OnUnslotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnUnslotItemComplete(const class UFortAccountItem* SlottedItem, const class UFortAccountItem* OldItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUnslotItemComplete");

	Params::FortCollectionBookPageDetailsWidget_OnUnslotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.OldItem = OldItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageListWidget.OnCategoryDetailsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AvailableSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FilledSlots                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnCategoryDetailsUpdated(int32 AvailableSlots, int32 FilledSlots, int32 TotalSlots)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCategoryDetailsUpdated");

	Params::FortCollectionBookPageListWidget_OnCategoryDetailsUpdated Parms{};

	Parms.AvailableSlots = AvailableSlots;
	Parms.FilledSlots = FilledSlots;
	Parms.TotalSlots = TotalSlots;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageListWidget.OnPageDetailsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AvailableSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FilledSlots                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnPageDetailsUpdated(int32 AvailableSlots, int32 FilledSlots, int32 TotalSlots, EFortCollectionBookState State)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPageDetailsUpdated");

	Params::FortCollectionBookPageListWidget_OnPageDetailsUpdated Parms{};

	Parms.AvailableSlots = AvailableSlots;
	Parms.FilledSlots = FilledSlots;
	Parms.TotalSlots = TotalSlots;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageListWidget.OnSlottedItemOperationComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnSlottedItemOperationComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlottedItemOperationComplete");

	Params::FortCollectionBookPageListWidget_OnSlottedItemOperationComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageListWidget.SetupAsCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookCategory*      category                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::SetupAsCategory(class UFortCollectionBookCategory* category)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsCategory");

	Params::FortCollectionBookPageListWidget_SetupAsCategory Parms{};

	Parms.category = category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPageListWidget.SetupAsPage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          Page                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::SetupAsPage(class UFortCollectionBookPage* Page)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsPage");

	Params::FortCollectionBookPageListWidget_SetupAsPage Parms{};

	Parms.Page = Page;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.HideMulchConfirmationModal
// (Native, Protected, BlueprintCallable)

void UFortCollectionBookPicker::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortCollectionBookPicker::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortCollectionBookPicker::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.OnCollectComplete
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookPicker::OnCollectComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.ShowMulchConfirmationModal
// (Native, Protected, BlueprintCallable)

void UFortCollectionBookPicker::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookPicker.ShowMulchDialogForItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToMulch                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPicker::ShowMulchDialogForItem(class UFortItem* ItemToMulch)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchDialogForItem");

	Params::FortCollectionBookPicker_ShowMulchDialogForItem Parms{};

	Parms.ItemToMulch = ItemToMulch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnBackActionExecuted
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnBackActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBackActionExecuted");

	Params::FortCollectionBookPrimaryPanel_OnBackActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageClicked
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          ClickedPage                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookPageClicked(const class UFortCollectionBookPage* ClickedPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPageClicked");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked Parms{};

	Parms.ClickedPage = ClickedPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageSelected
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPageSelected");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnCollectionBookSectionClicked
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       ClickedSection                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookSectionClicked(const class UFortCollectionBookSection* ClickedSection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookSectionClicked");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked Parms{};

	Parms.ClickedSection = ClickedSection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputMethodChanged");

	Params::FortCollectionBookPrimaryPanel_OnInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookPrimaryPanel.OnSummonInfoPanelExecuted
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnSummonInfoPanelExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSummonInfoPanelExecuted");

	Params::FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardDetailInspectWidget.OnXPRequiredChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewXPRequired                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardDetailInspectWidget::OnXPRequiredChanged(int32 NewXPRequired)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnXPRequiredChanged");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_OnXPRequiredChanged Parms{};

	Parms.NewXPRequired = NewXPRequired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardDetailInspectWidget.SetAssociatedLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardDetailInspectWidget::SetAssociatedLevel(int32 Level)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAssociatedLevel");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardDetailInspectWidget.GetXPRequired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookProgressionRewardDetailInspectWidget::GetXPRequired() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetXPRequired");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_GetXPRequired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardsModalWidget.InspectItemBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::InspectItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InspectItemBP");

	Params::FortCollectionBookProgressionRewardsModalWidget_InspectItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardsModalWidget.OnLevelProgressionSet
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NextLvlPct                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxAchievedLevel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::OnLevelProgressionSet(int32 CurrentLevel, float NextLvlPct, int32 MaxAchievedLevel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLevelProgressionSet");

	Params::FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.NextLvlPct = NextLvlPct;
	Parms.MaxAchievedLevel = MaxAchievedLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardsModalWidget.OnSelectedButtonChanged
// (Final, Native, Protected)
// Parameters:
// class UCommonButtonLegacy*              SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::OnSelectedButtonChanged(class UCommonButtonLegacy* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSelectedButtonChanged");

	Params::FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressionRewardWidget.SetAssociatedLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardWidget::SetAssociatedLevel(int32 Level)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAssociatedLevel");

	Params::FortCollectionBookProgressionRewardWidget_SetAssociatedLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.HandleDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanelLegacy*    DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::HandleDetailsModalWidgetDeactivated(class UCommonActivatablePanelLegacy* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDetailsModalWidgetDeactivated");

	Params::FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnCollectionBookLevelChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookLevelChanged(int32 NewLevel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookLevelChanged");

	Params::FortCollectionBookProgressWidget_OnCollectionBookLevelChanged Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnCollectionBookLevelProgressionChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewCompletionPct                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookLevelProgressionChanged(float NewCompletionPct)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookLevelProgressionChanged");

	Params::FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged Parms{};

	Parms.NewCompletionPct = NewCompletionPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnCollectionBookPageSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPageSelected");

	Params::FortCollectionBookProgressWidget_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnCollectionBookPreviewXPChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   PreviewCompletionPct                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookPreviewXPChange(float PreviewCompletionPct)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPreviewXPChange");

	Params::FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange Parms{};

	Parms.PreviewCompletionPct = PreviewCompletionPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnInventoryUpdated
// (Final, Native, Protected)

void UFortCollectionBookProgressWidget::OnInventoryUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInventoryUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookProgressWidget.OnSlottedItemOperationComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemSlotted                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnSlottedItemOperationComplete(const class UFortAccountItem* ItemSlotted, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlottedItemOperationComplete");

	Params::FortCollectionBookProgressWidget_OnSlottedItemOperationComplete Parms{};

	Parms.ItemSlotted = ItemSlotted;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookRecycleSlotResultsWidget.SetCurrentItemToRecycle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 InItemToRecycle                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookRecycleSlotResultsWidget::SetCurrentItemToRecycle(class UFortAccountItem* InItemToRecycle)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentItemToRecycle");

	Params::FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle Parms{};

	Parms.InItemToRecycle = InItemToRecycle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookRewardCardWidget.ClearRewards
// (Native, Public, BlueprintCallable)

void UFortCollectionBookRewardCardWidget::ClearRewards()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookRewardCardWidget.SetRewards
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  Rewards                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCollectionBookRewardCardWidget::SetRewards(const struct FFortRewardInfo& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRewards");

	Params::FortCollectionBookRewardCardWidget_SetRewards Parms{};

	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookRewardCardWidget.HasRewards
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookRewardCardWidget::HasRewards() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasRewards");

	Params::FortCollectionBookRewardCardWidget_HasRewards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSectionCompletionRewardWidget.HandleRewardDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanelLegacy*    DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionCompletionRewardWidget::HandleRewardDetailsModalWidgetDeactivated(class UCommonActivatablePanelLegacy* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRewardDetailsModalWidgetDeactivated");

	Params::FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnBackActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnBackActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBackActionExecuted");

	Params::FortCollectionBookSectionPanel_OnBackActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnInspectActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnInspectActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInspectActionExecuted");

	Params::FortCollectionBookSectionPanel_OnInspectActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnLogAllowedItemsActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnLogAllowedItemsActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLogAllowedItemsActionExecuted");

	Params::FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnOpenPickerActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnOpenPickerActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnOpenPickerActionExecuted");

	Params::FortCollectionBookSectionPanel_OnOpenPickerActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnPurchaseItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnPurchaseItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnPurchaseItemActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnResearchItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 NewItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnResearchItemOperationComplete(const class UFortAccountItem* NewItem, const class FString& TemplateId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnResearchItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnResearchItemOperationComplete Parms{};

	Parms.NewItem = NewItem;
	Parms.TemplateId = std::move(TemplateId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSectionChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       Section                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSectionChanged(const class UFortCollectionBookSection* Section)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSectionChanged");

	Params::FortCollectionBookSectionPanel_OnSectionChanged Parms{};

	Parms.Section = Section;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSlotButtonContextAction
// (Final, Native, Protected)
// Parameters:
// EFortCollectionBookPopupButtonType      ContextAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonContextAction(EFortCollectionBookPopupButtonType ContextAction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotButtonContextAction");

	Params::FortCollectionBookSectionPanel_OnSlotButtonContextAction Parms{};

	Parms.ContextAction = ContextAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSlotButtonHovered
// (Final, Native, Protected)
// Parameters:
// int32                                   ButtonIx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonHovered(int32 ButtonIx)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotButtonHovered");

	Params::FortCollectionBookSectionPanel_OnSlotButtonHovered Parms{};

	Parms.ButtonIx = ButtonIx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSlotButtonSelected
// (Final, Native, Protected)
// Parameters:
// class UFortCollectionBookSlotButton*    SlotButton                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonSelected(const class UFortCollectionBookSlotButton* SlotButton)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotButtonSelected");

	Params::FortCollectionBookSectionPanel_OnSlotButtonSelected Parms{};

	Parms.SlotButton = SlotButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSlotItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnSlotItemActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnSlottedItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlottedItemOperationComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlottedItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnSlottedItemOperationComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnUnslotItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUnslotItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnUnslotItemActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnUnslotItemComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        UnslottedItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemComplete(const class UFortItem* UnslottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUnslotItemComplete");

	Params::FortCollectionBookSectionPanel_OnUnslotItemComplete Parms{};

	Parms.UnslottedItem = UnslottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionPanel.OnUnslotItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 UnslottedItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldSlottedItem                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemOperationComplete(const class UFortAccountItem* UnslottedItem, const class UFortAccountItem* OldSlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUnslotItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnUnslotItemOperationComplete Parms{};

	Parms.UnslottedItem = UnslottedItem;
	Parms.OldSlottedItem = OldSlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionTileWidget.OnItemSlotted
// (Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemSlotted                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnItemSlotted(const class UFortAccountItem* ItemSlotted, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemSlotted");

	Params::FortCollectionBookSectionTileWidget_OnItemSlotted Parms{};

	Parms.ItemSlotted = ItemSlotted;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionTileWidget.OnItemUnslotted
// (Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemUnslotted                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldSlottedItem                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnItemUnslotted(const class UFortAccountItem* ItemUnslotted, const class UFortAccountItem* OldSlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemUnslotted");

	Params::FortCollectionBookSectionTileWidget_OnItemUnslotted Parms{};

	Parms.ItemUnslotted = ItemUnslotted;
	Parms.OldSlottedItem = OldSlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSectionTileWidget.OnSectionSlotUpdate
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumFilledSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSlots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                SectionState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnSectionSlotUpdate(int32 NumFilledSlots, int32 NumSlots, EFortCollectionBookState SectionState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSectionSlotUpdate");

	Params::FortCollectionBookSectionTileWidget_OnSectionSlotUpdate Parms{};

	Parms.NumFilledSlots = NumFilledSlots;
	Parms.NumSlots = NumSlots;
	Parms.SectionState = SectionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortCollectionBookSlotButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPopupMenu");

	Params::FortCollectionBookSlotButton_GetPopupMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSlotButton.OnSlottedItemUpdated
// (Final, Native, Private)

void UFortCollectionBookSlotButton::OnSlottedItemUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlottedItemUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookSlotButton.PopupMenuClosedWithAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCollectionBookPopupButtonType      Selection                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotButton::PopupMenuClosedWithAction(EFortCollectionBookPopupButtonType Selection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PopupMenuClosedWithAction");

	Params::FortCollectionBookSlotButton_PopupMenuClosedWithAction Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotConfirmationModal.HandleSlotItemComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotConfirmationModal::HandleSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSlotItemComplete");

	Params::FortCollectionBookSlotConfirmationModal_HandleSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotConfirmationModal.OnSlotItemRequested
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookSlotConfirmationModal::OnSlotItemRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotItemRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookSlotConfirmationModal.OnSlotItemRequestedComplete
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookSlotConfirmationModal::OnSlotItemRequestedComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotItemRequestedComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookSlotView.OnSelectedSlotButtonChanged
// (Native, Protected)
// Parameters:
// class UCommonButtonLegacy*              SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSelectedSlotButtonChanged(class UCommonButtonLegacy* SelectedButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSelectedSlotButtonChanged");

	Params::FortCollectionBookSlotView_OnSelectedSlotButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIdx = ButtonIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotView.OnSlotButtonClicked
// (Native, Protected)
// Parameters:
// class UCommonButtonLegacy*              ClickedButton                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSlotButtonClicked(class UCommonButtonLegacy* ClickedButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotButtonClicked");

	Params::FortCollectionBookSlotView_OnSlotButtonClicked Parms{};

	Parms.ClickedButton = ClickedButton;
	Parms.ButtonIdx = ButtonIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotView.OnSlotButtonHovered
// (Native, Protected)
// Parameters:
// class UCommonButtonLegacy*              HoveredButton                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSlotButtonHovered(class UCommonButtonLegacy* HoveredButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotButtonHovered");

	Params::FortCollectionBookSlotView_OnSlotButtonHovered Parms{};

	Parms.HoveredButton = HoveredButton;
	Parms.ButtonIdx = ButtonIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.HandleResearchItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 ResearchedItem                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SlotId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotWidget::HandleResearchItemComplete(const class UFortAccountItem* ResearchedItem, const class FString& SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleResearchItemComplete");

	Params::FortCollectionBookSlotWidget_HandleResearchItemComplete Parms{};

	Parms.ResearchedItem = ResearchedItem;
	Parms.SlotId = std::move(SlotId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.HandleSlottedItemOperationComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 NewItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TemplateId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotWidget::HandleSlottedItemOperationComplete(const class UFortAccountItem* NewItem, class FName TemplateId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSlottedItemOperationComplete");

	Params::FortCollectionBookSlotWidget_HandleSlottedItemOperationComplete Parms{};

	Parms.NewItem = NewItem;
	Parms.TemplateId = TemplateId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.HandleUnslotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 UnslottedItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotWidget::HandleUnslotItemComplete(const class UFortAccountItem* UnslottedItem, const class UFortAccountItem* OldItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleUnslotItemComplete");

	Params::FortCollectionBookSlotWidget_HandleUnslotItemComplete Parms{};

	Parms.UnslottedItem = UnslottedItem;
	Parms.OldItem = OldItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.OnItemCardUpdated
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookSlotWidget::OnItemCardUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemCardUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.OnItemDestroyed
// (Final, Native, Private)

void UFortCollectionBookSlotWidget::OnItemDestroyed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.GetNumItemsToSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookSlotWidget::GetNumItemsToSlot() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumItemsToSlot");

	Params::FortCollectionBookSlotWidget_GetNumItemsToSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.GetSlotRowName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UFortCollectionBookSlotWidget::GetSlotRowName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlotRowName");

	Params::FortCollectionBookSlotWidget_GetSlotRowName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.GetSlottedItemRepresentation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortCollectionBookSlotWidget::GetSlottedItemRepresentation() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlottedItemRepresentation");

	Params::FortCollectionBookSlotWidget_GetSlottedItemRepresentation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.HasItemsToSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookSlotWidget::HasItemsToSlot() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasItemsToSlot");

	Params::FortCollectionBookSlotWidget_HasItemsToSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookSlotWidget.IsItemSlotted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookSlotWidget::IsItemSlotted() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsItemSlotted");

	Params::FortCollectionBookSlotWidget_IsItemSlotted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCollectionBookWidget.OnCollectionBookPageClicked
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          ClickedPage                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookPageClicked(const class UFortCollectionBookPage* ClickedPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPageClicked");

	Params::FortCollectionBookWidget_OnCollectionBookPageClicked Parms{};

	Parms.ClickedPage = ClickedPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookWidget.OnCollectionBookPageSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookPageSelected");

	Params::FortCollectionBookWidget_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookWidget.OnCollectionBookSectionClicked
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       ClickedSection                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookSectionClicked(const class UFortCollectionBookSection* ClickedSection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookSectionClicked");

	Params::FortCollectionBookWidget_OnCollectionBookSectionClicked Parms{};

	Parms.ClickedSection = ClickedSection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookWidget.OnCollectionBookSectionCloseRequest
// (Final, Native, Protected)

void UFortCollectionBookWidget::OnCollectionBookSectionCloseRequest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectionBookSectionCloseRequest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCollectionBookWidget.OnPreviewXPChangeRequest
// (Final, Native, Protected)
// Parameters:
// int32                                   XPChange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnPreviewXPChangeRequest(int32 XPChange)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewXPChangeRequest");

	Params::FortCollectionBookWidget_OnPreviewXPChangeRequest Parms{};

	Parms.XPChange = XPChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCollectionBookWidget.RequestToClose
// (Final, Native, Protected, BlueprintCallable)

void UFortCollectionBookWidget::RequestToClose()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestToClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAbilitySystemContext.RegisterForAttributeChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          ASC                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilitySystemContext::RegisterForAttributeChanged(class UWidget* Widget, class UAbilitySystemComponent* ASC, const struct FGameplayAttribute& Attribute, TDelegate<void()> Callback)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RegisterForAttributeChanged");

	Params::FortAbilitySystemContext_RegisterForAttributeChanged Parms{};

	Parms.Widget = Widget;
	Parms.ASC = ASC;
	Parms.Attribute = std::move(Attribute);
	Parms.Callback = Callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAbilitySystemContext.RemoveDelegatesFromWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilitySystemContext::RemoveDelegatesFromWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveDelegatesFromWidget");

	Params::FortAbilitySystemContext_RemoveDelegatesFromWidget Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAbilitySystemContext.HasMatchingGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     TagToCheck                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemContext::HasMatchingGameplayTag(const struct FGameplayTag& TagToCheck) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasMatchingGameplayTag");

	Params::FortAbilitySystemContext_HasMatchingGameplayTag Parms{};

	Parms.TagToCheck = std::move(TagToCheck);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.HandleAffiliateButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UFortDirectAcquisitionWidgetBase::HandleAffiliateButtonClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAffiliateButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.IsTabsLayout
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShouldDisplayTabs                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionWidgetBase::IsTabsLayout(bool bShouldDisplayTabs)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsTabsLayout");

	Params::FortDirectAcquisitionWidgetBase_IsTabsLayout Parms{};

	Parms.bShouldDisplayTabs = bShouldDisplayTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.OnDisplayToast
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDisplayToast                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionWidgetBase::OnDisplayToast(const bool bDisplayToast)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDisplayToast");

	Params::FortDirectAcquisitionWidgetBase_OnDisplayToast Parms{};

	Parms.bDisplayToast = bDisplayToast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.GetDailyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetDailyStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDailyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.GetSeasonStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetSeasonStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSeasonStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.GetStoreCurrencies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAccountItemDefinition*> UFortDirectAcquisitionWidgetBase::GetStoreCurrencies() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStoreCurrencies");

	Params::FortDirectAcquisitionWidgetBase_GetStoreCurrencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase.GetWeeklyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetWeeklyStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWeeklyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.HandleAffiliateButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UFortDirectAcquisitionWidgetBase_Legacy::HandleAffiliateButtonClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAffiliateButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.IsTabsLayout
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShouldDisplayTabs                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionWidgetBase_Legacy::IsTabsLayout(bool bShouldDisplayTabs)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsTabsLayout");

	Params::FortDirectAcquisitionWidgetBase_Legacy_IsTabsLayout Parms{};

	Parms.bShouldDisplayTabs = bShouldDisplayTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.OnDisplayToast
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDisplayToast                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionWidgetBase_Legacy::OnDisplayToast(const bool bDisplayToast)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDisplayToast");

	Params::FortDirectAcquisitionWidgetBase_Legacy_OnDisplayToast Parms{};

	Parms.bDisplayToast = bDisplayToast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.GetDailyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase_Legacy::GetDailyStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDailyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_Legacy_GetDailyStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.GetSeasonStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase_Legacy::GetSeasonStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSeasonStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_Legacy_GetSeasonStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.GetStoreCurrencies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAccountItemDefinition*> UFortDirectAcquisitionWidgetBase_Legacy::GetStoreCurrencies() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStoreCurrencies");

	Params::FortDirectAcquisitionWidgetBase_Legacy_GetStoreCurrencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDirectAcquisitionWidgetBase_Legacy.GetWeeklyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase_Legacy::GetWeeklyStoreEndDate() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWeeklyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_Legacy_GetWeeklyStoreEndDate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.ClearTemporaryExpeditionSquadState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreviewOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::ClearTemporaryExpeditionSquadState(bool bPreviewOnly)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearTemporaryExpeditionSquadState");

	Params::FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState Parms{};

	Parms.bPreviewOnly = bPreviewOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.HandleDifferentSquadSlotSelected
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::HandleDifferentSquadSlotSelected(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSlotSelected");

	Params::FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.HandleRequestStartExpedition
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::HandleRequestStartExpedition(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRequestStartExpedition");

	Params::FortExpeditionBuildSquadWidget_HandleRequestStartExpedition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.IsExpeditionValidToStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionBuildSquadWidget::IsExpeditionValidToStart()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsExpeditionValidToStart");

	Params::FortExpeditionBuildSquadWidget_IsExpeditionValidToStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.OnRefreshBuildSquadWidget
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionBuildSquadWidget::OnRefreshBuildSquadWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRefreshBuildSquadWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.OnRequestClosePicker
// (Event, Public, BlueprintEvent)

void UFortExpeditionBuildSquadWidget::OnRequestClosePicker()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRequestClosePicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.SetCurrentSquadId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::SetCurrentSquadId(class FName SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentSquadId");

	Params::FortExpeditionBuildSquadWidget_SetCurrentSquadId Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortExpeditionBuildSquadWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionBuildSquadWidget.IsSquadSlotLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionBuildSquadWidget::IsSquadSlotLocked(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLocked");

	Params::FortExpeditionBuildSquadWidget_IsSquadSlotLocked Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionDetailsWidget.HandleAbandonExpeditionCompleted
// (Final, Native, Private)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::HandleAbandonExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSuccess)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAbandonExpeditionCompleted");

	Params::FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionDetailsWidget.RequestAbandonExpedition
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionDetailsWidget::RequestAbandonExpedition()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestAbandonExpedition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionDetailsWidget.SetCurrentSquadId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::SetCurrentSquadId(class FName SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentSquadId");

	Params::FortExpeditionDetailsWidget_SetCurrentSquadId Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionDetailsWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortExpeditionDetailsWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionExpiresWidget.OnExpeditionExpirationUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionExpiresWidget::OnExpeditionExpirationUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExpeditionExpirationUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionExpiresWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionExpiresWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortExpeditionExpiresWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionListItemWidget.OnItemChanged
// (Event, Protected, BlueprintEvent)

void UFortExpeditionListItemWidget::OnItemChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionListViewWidget.SetExpeditionListSortType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortExpeditionListSort                 InSortType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionListViewWidget::SetExpeditionListSortType(EFortExpeditionListSort InSortType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetExpeditionListSortType");

	Params::FortExpeditionListViewWidget_SetExpeditionListSortType Parms{};

	Parms.InSortType = InSortType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionListViewWidget.GetExpeditionListSortName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortExpeditionListViewWidget::GetExpeditionListSortName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetExpeditionListSortName");

	Params::FortExpeditionListViewWidget_GetExpeditionListSortName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionOverviewWidget.HandleExpeditionTabButtonCreated
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButtonBase*                TabButton                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::HandleExpeditionTabButtonCreated(class FName TabNameID, class UCommonButtonBase* TabButton)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleExpeditionTabButtonCreated");

	Params::FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionOverviewWidget.HandleExpeditionTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::HandleExpeditionTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleExpeditionTabSelected");

	Params::FortExpeditionOverviewWidget_HandleExpeditionTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionOverviewWidget.OnExpeditionOverviewRefresh
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionOverviewWidget::OnExpeditionOverviewRefresh()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExpeditionOverviewRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionOverviewWidget.OnExpeditionTabSelected
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::OnExpeditionTabSelected(const class FName& TabNameID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExpeditionTabSelected");

	Params::FortExpeditionOverviewWidget_OnExpeditionTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionOverviewWidget.UpdateExpeditionTabs
// (Final, Native, Protected, BlueprintCallable)

void UFortExpeditionOverviewWidget::UpdateExpeditionTabs()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateExpeditionTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionPickVehicleWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionPickVehicleWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortExpeditionPickVehicleWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionReturnsWidget.OnExpeditionInProgressUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionReturnsWidget::OnExpeditionInProgressUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExpeditionInProgressUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionReturnsWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionReturnsWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortExpeditionReturnsWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionRewardsWidget.HandleCollectionExpeditionCompleted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bMcpSuccess                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpeditionSuccess                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortExpeditionRewardsWidget::HandleCollectionExpeditionCompleted(bool bMcpSuccess, const class UFortExpeditionItem* Expedition, bool bExpeditionSuccess, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCollectionExpeditionCompleted");

	Params::FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted Parms{};

	Parms.bMcpSuccess = bMcpSuccess;
	Parms.Expedition = Expedition;
	Parms.bExpeditionSuccess = bExpeditionSuccess;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionRewardsWidget.ProcessNextReward
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionRewardsWidget::ProcessNextReward()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ProcessNextReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionRewardsWidget.RefreshRewardsUI
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpeditionSucceeded                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortExpeditionRewardsWidget::RefreshRewardsUI(const class UFortExpeditionItem* Expedition, bool bExpeditionSucceeded, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshRewardsUI");

	Params::FortExpeditionRewardsWidget_RefreshRewardsUI Parms{};

	Parms.Expedition = Expedition;
	Parms.bExpeditionSucceeded = bExpeditionSucceeded;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortExpeditionSummaryWidget.BindInventoryDelegates
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionSummaryWidget::BindInventoryDelegates()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BindInventoryDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionSummaryWidget.OnRefreshSummaryWidget
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionSummaryWidget::OnRefreshSummaryWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRefreshSummaryWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionSummaryWidget.UnbindInventoryDelegates
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionSummaryWidget::UnbindInventoryDelegates()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UnbindInventoryDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortExpeditionUtilities.AreAnyExpeditionsComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::AreAnyExpeditionsComplete(const class UWidget* Widget)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("AreAnyExpeditionsComplete");

	Params::FortExpeditionUtilities_AreAnyExpeditionsComplete Parms{};

	Parms.Widget = Widget;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.AreExpeditionsUnlocked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::AreExpeditionsUnlocked(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("AreExpeditionsUnlocked");

	Params::FortExpeditionUtilities_AreExpeditionsUnlocked Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UniqueId = std::move(UniqueId);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.CalculateExpeditionPercentageChanceForSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalPower                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::CalculateExpeditionPercentageChanceForSuccess(const class UFortExpeditionItem* Expedition, const float TotalPower)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("CalculateExpeditionPercentageChanceForSuccess");

	Params::FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess Parms{};

	Parms.Expedition = Expedition;
	Parms.TotalPower = TotalPower;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.CalculateGlobalAndItemRatingModValuesBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   GlobalPowerMod                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           SlottedItemMods                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::CalculateGlobalAndItemRatingModValuesBP(const class UFortExpeditionItem* Expedition, const TArray<class UFortItem*>& SlottedItems, float* GlobalPowerMod, TArray<float>* SlottedItemMods)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("CalculateGlobalAndItemRatingModValuesBP");

	Params::FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP Parms{};

	Parms.Expedition = Expedition;
	Parms.SlottedItems = std::move(SlottedItems);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (GlobalPowerMod != nullptr)
		*GlobalPowerMod = Parms.GlobalPowerMod;

	if (SlottedItemMods != nullptr)
		*SlottedItemMods = std::move(Parms.SlottedItemMods);
}


// Function SaveTheWorldUI.FortExpeditionUtilities.CalculateTotalPower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::CalculateTotalPower(class AFortPlayerController* FortPC, const class UFortExpeditionItem* Expedition, const class FName& SquadId, const TArray<class UFortItem*>& SlottedItems)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("CalculateTotalPower");

	Params::FortExpeditionUtilities_CalculateTotalPower Parms{};

	Parms.FortPC = FortPC;
	Parms.Expedition = Expedition;
	Parms.SquadId = SquadId;
	Parms.SlottedItems = std::move(SlottedItems);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetAllExpeditionSquadIds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutExpeditionSquadIds                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetAllExpeditionSquadIds(TArray<class FName>* OutExpeditionSquadIds)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetAllExpeditionSquadIds");

	Params::FortExpeditionUtilities_GetAllExpeditionSquadIds Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutExpeditionSquadIds != nullptr)
		*OutExpeditionSquadIds = std::move(Parms.OutExpeditionSquadIds);
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetExpeditionSquadPower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::GetExpeditionSquadPower(class AFortPlayerController* FortPC, const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetExpeditionSquadPower");

	Params::FortExpeditionUtilities_GetExpeditionSquadPower Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadId = SquadId;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetExpeditionSquadsThatMatchRequirements
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            RequirementTags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutExpeditionSquadIds                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::GetExpeditionSquadsThatMatchRequirements(const struct FGameplayTagContainer& RequirementTags, class AFortPlayerController* FortPC, TArray<class FName>* OutExpeditionSquadIds)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetExpeditionSquadsThatMatchRequirements");

	Params::FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements Parms{};

	Parms.RequirementTags = std::move(RequirementTags);
	Parms.FortPC = FortPC;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutExpeditionSquadIds != nullptr)
		*OutExpeditionSquadIds = std::move(Parms.OutExpeditionSquadIds);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetMatchedCriteriaTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>             OutMatchedCriteria                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetMatchedCriteriaTags(class UFortExpeditionItem* Expedition, const TArray<class UFortItem*>& SlottedItems, TArray<struct FGameplayTag>* OutMatchedCriteria)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMatchedCriteriaTags");

	Params::FortExpeditionUtilities_GetMatchedCriteriaTags Parms{};

	Parms.Expedition = Expedition;
	Parms.SlottedItems = std::move(SlottedItems);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutMatchedCriteria != nullptr)
		*OutMatchedCriteria = std::move(Parms.OutMatchedCriteria);
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetTotalExpeditionVehiclesAvailable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutLandVehicles                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutLandVehiclesAvailable                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeaVehicles                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeaVehiclesAvailable                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAirVehicles                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAirVehiclesAvailable                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetTotalExpeditionVehiclesAvailable(const class UWidget* Widget, class AFortPlayerController* FortPC, int32* OutLandVehicles, int32* OutLandVehiclesAvailable, int32* OutSeaVehicles, int32* OutSeaVehiclesAvailable, int32* OutAirVehicles, int32* OutAirVehiclesAvailable)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetTotalExpeditionVehiclesAvailable");

	Params::FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable Parms{};

	Parms.Widget = Widget;
	Parms.FortPC = FortPC;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutLandVehicles != nullptr)
		*OutLandVehicles = Parms.OutLandVehicles;

	if (OutLandVehiclesAvailable != nullptr)
		*OutLandVehiclesAvailable = Parms.OutLandVehiclesAvailable;

	if (OutSeaVehicles != nullptr)
		*OutSeaVehicles = Parms.OutSeaVehicles;

	if (OutSeaVehiclesAvailable != nullptr)
		*OutSeaVehiclesAvailable = Parms.OutSeaVehiclesAvailable;

	if (OutAirVehicles != nullptr)
		*OutAirVehicles = Parms.OutAirVehicles;

	if (OutAirVehiclesAvailable != nullptr)
		*OutAirVehiclesAvailable = Parms.OutAirVehiclesAvailable;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetVehicleTagFromSquadId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     OutFoundVehicleTag                                     (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::GetVehicleTagFromSquadId(const class FName& SquadId, struct FGameplayTag* OutFoundVehicleTag)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetVehicleTagFromSquadId");

	Params::FortExpeditionUtilities_GetVehicleTagFromSquadId Parms{};

	Parms.SquadId = SquadId;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutFoundVehicleTag != nullptr)
		*OutFoundVehicleTag = std::move(Parms.OutFoundVehicleTag);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.GetVehicleTagRequiredForExpedition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UFortExpeditionUtilities::GetVehicleTagRequiredForExpedition(const class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetVehicleTagRequiredForExpedition");

	Params::FortExpeditionUtilities_GetVehicleTagRequiredForExpedition Parms{};

	Parms.Expedition = Expedition;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.IsSquadOnExpedition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::IsSquadOnExpedition(const class UWidget* Widget, const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsSquadOnExpedition");

	Params::FortExpeditionUtilities_IsSquadOnExpedition Parms{};

	Parms.Widget = Widget;
	Parms.SquadId = SquadId;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortExpeditionUtilities.TotalUnseenExpeditionsForTab
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TabNameID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortExpeditionUtilities::TotalUnseenExpeditionsForTab(const class UWidget* Widget, const class FName& TabNameID)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("TotalUnseenExpeditionsForTab");

	Params::FortExpeditionUtilities_TotalUnseenExpeditionsForTab Parms{};

	Parms.Widget = Widget;
	Parms.TabNameID = TabNameID;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.RefreshDataBP
// (Event, Protected, BlueprintEvent)

void UFortFeatureUnlockWidget::RefreshDataBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshDataBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ItemTemplateID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFeatureUnlockWidget::SetData(const class FString& ItemTemplateID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortFeatureUnlockWidget_SetData Parms{};

	Parms.ItemTemplateID = std::move(ItemTemplateID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.GetDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFeatureUnlockWidget::GetDescription() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDescription");

	Params::FortFeatureUnlockWidget_GetDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.GetLargeIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortFeatureUnlockWidget::GetLargeIcon() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLargeIcon");

	Params::FortFeatureUnlockWidget_GetLargeIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.GetSmallIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortFeatureUnlockWidget::GetSmallIcon() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSmallIcon");

	Params::FortFeatureUnlockWidget_GetSmallIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.GetTitle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFeatureUnlockWidget::GetTitle() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTitle");

	Params::FortFeatureUnlockWidget_GetTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortFeatureUnlockWidget.GetVideo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSource* UFortFeatureUnlockWidget::GetVideo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVideo");

	Params::FortFeatureUnlockWidget_GetVideo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.GetRewardsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortRewardItemTypeSTW                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                OutRewards                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::GetRewardsByType(EFortRewardItemTypeSTW Type, TArray<class UFortItem*>* OutRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRewardsByType");

	Params::FortResultsWidgetSTW_GetRewardsByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRewards != nullptr)
		*OutRewards = std::move(Parms.OutRewards);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.GetTotalMissionPointsEarned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResultsWidgetSTW::GetTotalMissionPointsEarned()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTotalMissionPointsEarned");

	Params::FortResultsWidgetSTW_GetTotalMissionPointsEarned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.HandleEmoteClicked
// (Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::HandleEmoteClicked(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEmoteClicked");

	Params::FortResultsWidgetSTW_HandleEmoteClicked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.HandlePickerCancel
// (Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::HandlePickerCancel(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePickerCancel");

	Params::FortResultsWidgetSTW_HandlePickerCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.LogXPData
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidgetSTW::LogXPData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("LogXPData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.RequestExitZone
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidgetSTW::RequestExitZone()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestExitZone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.SendEndOfRoundFriendInviteAnalytic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 TargetId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::SendEndOfRoundFriendInviteAnalytic(const struct FUniqueNetIdRepl& TargetId, const class FString& TargetPlayerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendEndOfRoundFriendInviteAnalytic");

	Params::FortResultsWidgetSTW_SendEndOfRoundFriendInviteAnalytic Parms{};

	Parms.TargetId = std::move(TargetId);
	Parms.TargetPlayerName = std::move(TargetPlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.SendEndOfRoundScreenAnalytic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ScreenName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Skipped                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeSpent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::SendEndOfRoundScreenAnalytic(const class FString& ScreenName, bool Skipped, float TimeSpent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendEndOfRoundScreenAnalytic");

	Params::FortResultsWidgetSTW_SendEndOfRoundScreenAnalytic Parms{};

	Parms.ScreenName = std::move(ScreenName);
	Parms.Skipped = Skipped;
	Parms.TimeSpent = TimeSpent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.SendEndOfRoundUpVoteAnalytic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 TargetId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::SendEndOfRoundUpVoteAnalytic(const struct FUniqueNetIdRepl& TargetId, const class FString& TargetPlayerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendEndOfRoundUpVoteAnalytic");

	Params::FortResultsWidgetSTW_SendEndOfRoundUpVoteAnalytic Parms{};

	Parms.TargetId = std::move(TargetId);
	Parms.TargetPlayerName = std::move(TargetPlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.ToggleChat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidgetSTW::ToggleChat(bool bShow)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleChat");

	Params::FortResultsWidgetSTW_ToggleChat Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.TriggerSetupTeleportCameraEvent
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidgetSTW::TriggerSetupTeleportCameraEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TriggerSetupTeleportCameraEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.GetZoneCompletionResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCompletionResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCompletionResult UFortResultsWidgetSTW::GetZoneCompletionResult() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetZoneCompletionResult");

	Params::FortResultsWidgetSTW_GetZoneCompletionResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.GetZoneCompletionResultText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortResultsWidgetSTW::GetZoneCompletionResultText() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetZoneCompletionResultText");

	Params::FortResultsWidgetSTW_GetZoneCompletionResultText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResultsWidgetSTW.IsDataFinalized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResultsWidgetSTW::IsDataFinalized() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsDataFinalized");

	Params::FortResultsWidgetSTW_IsDataFinalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.CacheAutoMulchSettings
// (Final, Native, Protected, BlueprintCallable)

void UFortItemAutoMulchActivatablePanel_STW::CacheAutoMulchSettings()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CacheAutoMulchSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.EnterMulchModeForAutoMulch
// (Final, Native, Protected, BlueprintCallable)

void UFortItemAutoMulchActivatablePanel_STW::EnterMulchModeForAutoMulch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterMulchModeForAutoMulch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.RestoreAutoMulchSettings
// (Final, Native, Protected, BlueprintCallable)

void UFortItemAutoMulchActivatablePanel_STW::RestoreAutoMulchSettings()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RestoreAutoMulchSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.SaveSettings
// (Final, Native, Protected, BlueprintCallable)

void UFortItemAutoMulchActivatablePanel_STW::SaveSettings()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.SetItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemManagementScreen_STW*    InItemManagementScreen                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemAutoMulchActivatablePanel_STW::SetItemManagementScreen(class UFortItemManagementScreen_STW* InItemManagementScreen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetItemManagementScreen");

	Params::FortItemAutoMulchActivatablePanel_STW_SetItemManagementScreen Parms{};

	Parms.InItemManagementScreen = InItemManagementScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.GetFrontendInventoryFilter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortFrontendInventoryFilter            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortFrontendInventoryFilter UFortItemAutoMulchActivatablePanel_STW::GetFrontendInventoryFilter() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetFrontendInventoryFilter");

	Params::FortItemAutoMulchActivatablePanel_STW_GetFrontendInventoryFilter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemAutoMulchActivatablePanel_STW.GetMulchCategoriesForInventoryFilter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortAutoMulchCategory>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortAutoMulchCategory> UFortItemAutoMulchActivatablePanel_STW::GetMulchCategoriesForInventoryFilter() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMulchCategoriesForInventoryFilter");

	Params::FortItemAutoMulchActivatablePanel_STW_GetMulchCategoriesForInventoryFilter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.CraftAndSlotTargetItem
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::CraftAndSlotTargetItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CraftAndSlotTargetItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.CraftTargetItem
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::CraftTargetItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CraftTargetItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.DecreaseSelectedQuantity
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::DecreaseSelectedQuantity()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DecreaseSelectedQuantity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.IncreaseSelectedQuantity
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::IncreaseSelectedQuantity()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IncreaseSelectedQuantity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.OnBaseItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               NewBaseItem                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::OnBaseItemChanged(class UFortSchematicItem* NewBaseItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBaseItemChanged");

	Params::FortItemCraftingOptionsActivatablePanel_STW_OnBaseItemChanged Parms{};

	Parms.NewBaseItem = NewBaseItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.OnMaxQuantityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewMaxQuantity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::OnMaxQuantityChanged(int32 NewMaxQuantity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMaxQuantityChanged");

	Params::FortItemCraftingOptionsActivatablePanel_STW_OnMaxQuantityChanged Parms{};

	Parms.NewMaxQuantity = NewMaxQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.OnSelectedQuantityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewSelectedQuantity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::OnSelectedQuantityChanged(int32 NewSelectedQuantity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSelectedQuantityChanged");

	Params::FortItemCraftingOptionsActivatablePanel_STW_OnSelectedQuantityChanged Parms{};

	Parms.NewSelectedQuantity = NewSelectedQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.OnTargetItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               NewTargetItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::OnTargetItemChanged(class UFortSchematicItem* NewTargetItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTargetItemChanged");

	Params::FortItemCraftingOptionsActivatablePanel_STW_OnTargetItemChanged Parms{};

	Parms.NewTargetItem = NewTargetItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SelectNextTier
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::SelectNextTier()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectNextTier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SelectPreviousTier
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::SelectPreviousTier()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectPreviousTier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SetBaseSchematicItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               InBaseItem                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::SetBaseSchematicItem(class UFortSchematicItem* InBaseItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBaseSchematicItem");

	Params::FortItemCraftingOptionsActivatablePanel_STW_SetBaseSchematicItem Parms{};

	Parms.InBaseItem = InBaseItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SetItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemManagementScreen_STW*    InItemManagementScreen                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::SetItemManagementScreen(class UFortItemManagementScreen_STW* InItemManagementScreen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetItemManagementScreen");

	Params::FortItemCraftingOptionsActivatablePanel_STW_SetItemManagementScreen Parms{};

	Parms.InItemManagementScreen = InItemManagementScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SetSelectedQuantity_BP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewQuantity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::SetSelectedQuantity_BP(int32 NewQuantity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSelectedQuantity_BP");

	Params::FortItemCraftingOptionsActivatablePanel_STW_SetSelectedQuantity_BP Parms{};

	Parms.NewQuantity = NewQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.SetTargetCraftingTierIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewTierIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel_STW::SetTargetCraftingTierIndex(int32 NewTierIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTargetCraftingTierIndex");

	Params::FortItemCraftingOptionsActivatablePanel_STW_SetTargetCraftingTierIndex Parms{};

	Parms.NewTierIndex = NewTierIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemCraftingOptionsActivatablePanel_STW.UpdateTierImages
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel_STW::UpdateTierImages()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateTierImages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemDetailsActivatablePanel_STW.HandleConsumeItemProgressChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel_STW::HandleConsumeItemProgressChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleConsumeItemProgressChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemDetailsActivatablePanel_STW.HandleDifferentItemToCompareSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel_STW::HandleDifferentItemToCompareSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemToCompareSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemDetailsActivatablePanel_STW.HandleDifferentItemToDetailSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel_STW::HandleDifferentItemToDetailSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemToDetailSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemDetailsActivatablePanel_STW.HandleItemToDetailTooltipAssetsLoaded
// (Final, Native, Private)

void UFortItemDetailsActivatablePanel_STW::HandleItemToDetailTooltipAssetsLoaded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToDetailTooltipAssetsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemDetailsModeActivatablePanel_STW.HandleOnActiveWidgetChanged
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ActiveWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ActiveWidgetIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsModeActivatablePanel_STW::HandleOnActiveWidgetChanged(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnActiveWidgetChanged");

	Params::FortItemDetailsModeActivatablePanel_STW_HandleOnActiveWidgetChanged Parms{};

	Parms.ActiveWidget = ActiveWidget;
	Parms.ActiveWidgetIndex = ActiveWidgetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.CommitCustomFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget_STW::CommitCustomFilters()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CommitCustomFilters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.DisableAllFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget_STW::DisableAllFilters()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisableAllFilters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.EnableAllFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget_STW::EnableAllFilters()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnableAllFilters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.OnBeginCommitCustomFilter
// (Event, Protected, BlueprintEvent)

void UFortItemManagementCustomFilterModalWidget_STW::OnBeginCommitCustomFilter()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBeginCommitCustomFilter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.OnCustomFilterSetUpdated
// (Event, Protected, BlueprintEvent)

void UFortItemManagementCustomFilterModalWidget_STW::OnCustomFilterSetUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCustomFilterSetUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.OnEndCommitCustomFilter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementCustomFilterModalWidget_STW::OnEndCommitCustomFilter(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEndCommitCustomFilter");

	Params::FortItemManagementCustomFilterModalWidget_STW_OnEndCommitCustomFilter Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.ToggleFilter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortInventoryCustomFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementCustomFilterModalWidget_STW::ToggleFilter(EFortInventoryCustomFilter Filter)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleFilter");

	Params::FortItemManagementCustomFilterModalWidget_STW_ToggleFilter Parms{};

	Parms.Filter = Filter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementCustomFilterModalWidget_STW.IsCustomFilterEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInventoryCustomFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementCustomFilterModalWidget_STW::IsCustomFilterEnabled(EFortInventoryCustomFilter Filter) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCustomFilterEnabled");

	Params::FortItemManagementCustomFilterModalWidget_STW_IsCustomFilterEnabled Parms{};

	Parms.Filter = Filter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.AddItemStackToMulch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::AddItemStackToMulch(class UFortItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddItemStackToMulch");

	Params::FortItemManagementInventoryPanel_STW_AddItemStackToMulch Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.AdvanceSelection
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::AdvanceSelection()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AdvanceSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::CycleSortType()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CycleSortType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.GetShouldPrioritizeFavorites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel_STW::GetShouldPrioritizeFavorites()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetShouldPrioritizeFavorites");

	Params::FortItemManagementInventoryPanel_STW_GetShouldPrioritizeFavorites Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleCraftItemStarted
// (Final, Native, Private)

void UFortItemManagementInventoryPanel_STW::HandleCraftItemStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCraftItemStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleCursorModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCursorModeChanged");

	Params::FortItemManagementInventoryPanel_STW_HandleCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleCursorModeChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleCursorModeChangedBP(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCursorModeChangedBP");

	Params::FortItemManagementInventoryPanel_STW_HandleCursorModeChangedBP Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleCustomInventoryFilterChanged
// (Final, Native, Protected)

void UFortItemManagementInventoryPanel_STW::HandleCustomInventoryFilterChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCustomInventoryFilterChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleDifferentFilterSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleDifferentFilterSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentFilterSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleDifferentFrontendInventoryFilterSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleDifferentFrontendInventoryFilterSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentFrontendInventoryFilterSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleDifferentSortTypeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleDifferentSortTypeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSortTypeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleFilterTabButtonCreated
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButtonBase*                TabButton                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleFilterTabButtonCreated(class FName TabNameID, class UCommonButtonBase* TabButton)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFilterTabButtonCreated");

	Params::FortItemManagementInventoryPanel_STW_HandleFilterTabButtonCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleFilterTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleFilterTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFilterTabSelected");

	Params::FortItemManagementInventoryPanel_STW_HandleFilterTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleFocusEquipSlotsBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleFocusEquipSlotsBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFocusEquipSlotsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleInventoryUpdatedEvent
// (Final, Native, Private)

void UFortItemManagementInventoryPanel_STW::HandleInventoryUpdatedEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleInventoryUpdatedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleItemBeginDrag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleItemBeginDrag(class UObject* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemBeginDrag");

	Params::FortItemManagementInventoryPanel_STW_HandleItemBeginDrag Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleQuickBarChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::HandleQuickBarChangedBP(EFortQuickBars QuickBarType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuickBarChangedBP");

	Params::FortItemManagementInventoryPanel_STW_HandleQuickBarChangedBP Parms{};

	Parms.QuickBarType = QuickBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HandleSetOfItemsToMulchChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel_STW::HandleSetOfItemsToMulchChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSetOfItemsToMulchChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.MarkAllItemsAsSeen
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::MarkAllItemsAsSeen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MarkAllItemsAsSeen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.OnMulchRestrictionTextShown
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShown                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::OnMulchRestrictionTextShown(bool bShown)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMulchRestrictionTextShown");

	Params::FortItemManagementInventoryPanel_STW_OnMulchRestrictionTextShown Parms{};

	Parms.bShown = bShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.RefreshCraftingSort
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::RefreshCraftingSort()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshCraftingSort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.RequestFocusEquipSlots
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::RequestFocusEquipSlots()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestFocusEquipSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.SetFilter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             FilterName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::SetFilter(const class FName FilterName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFilter");

	Params::FortItemManagementInventoryPanel_STW_SetFilter Parms{};

	Parms.FilterName = FilterName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.SetSortType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EInventoryContentSortType               SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel_STW::SetSortType(EInventoryContentSortType SortType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSortType");

	Params::FortItemManagementInventoryPanel_STW_SetSortType Parms{};

	Parms.SortType = SortType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.SwitchPanelFocus
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::SwitchPanelFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SwitchPanelFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.TogglePrioritizeFavorites
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::TogglePrioritizeFavorites()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TogglePrioritizeFavorites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.ToggleTileSize
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::ToggleTileSize()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleTileSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.UpdateSchematicTiles
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel_STW::UpdateSchematicTiles()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateSchematicTiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.CanDragItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel_STW::CanDragItems() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanDragItems");

	Params::FortItemManagementInventoryPanel_STW_CanDragItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.GetQualifiedFilterDisplayName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemManagementInventoryPanel_STW::GetQualifiedFilterDisplayName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetQualifiedFilterDisplayName");

	Params::FortItemManagementInventoryPanel_STW_GetQualifiedFilterDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.GetSupportedSortTypesForCurrentInventory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EInventoryContentSortType>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EInventoryContentSortType> UFortItemManagementInventoryPanel_STW::GetSupportedSortTypesForCurrentInventory() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSupportedSortTypesForCurrentInventory");

	Params::FortItemManagementInventoryPanel_STW_GetSupportedSortTypesForCurrentInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.GetUpgradeItemDefinitionsForCurrentInventory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItemDefinition*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItemDefinition*> UFortItemManagementInventoryPanel_STW::GetUpgradeItemDefinitionsForCurrentInventory() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUpgradeItemDefinitionsForCurrentInventory");

	Params::FortItemManagementInventoryPanel_STW_GetUpgradeItemDefinitionsForCurrentInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.HasUnlockedStorageSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel_STW::HasUnlockedStorageSlots() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasUnlockedStorageSlots");

	Params::FortItemManagementInventoryPanel_STW_HasUnlockedStorageSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.IsSelectedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel_STW::IsSelectedItem(const class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSelectedItem");

	Params::FortItemManagementInventoryPanel_STW_IsSelectedItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementInventoryPanel_STW.IsSwitchPanelAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel_STW::IsSwitchPanelAvailable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSwitchPanelAvailable");

	Params::FortItemManagementInventoryPanel_STW_IsSwitchPanelAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortItemManagementItemTileButton_STW::GetPopupMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPopupMenu");

	Params::FortItemManagementItemTileButton_STW_GetPopupMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleEquipSlotChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   EquipSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemTileButton_STW::HandleEquipSlotChanged(int32 EquipSlot)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEquipSlotChanged");

	Params::FortItemManagementItemTileButton_STW_HandleEquipSlotChanged Parms{};

	Parms.EquipSlot = EquipSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleHasItemToCompareDetailsWithChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleHasItemToCompareDetailsWithChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHasItemToCompareDetailsWithChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleHasItemToDetailChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleHasItemToDetailChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHasItemToDetailChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleItemChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleItemChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleItemMulchStateChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleItemMulchStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemMulchStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleShowCollectionBookIndicatorChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleShowCollectionBookIndicatorChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowCollectionBookIndicatorChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.HandleShowRefundIndicatorChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton_STW::HandleShowRefundIndicatorChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowRefundIndicatorChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.OnSlotItemComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemTileButton_STW::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSlotItemComplete");

	Params::FortItemManagementItemTileButton_STW_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.PopulateEquipSlotOverlay
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementItemTileButton_STW::PopulateEquipSlotOverlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PopulateEquipSlotOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.UpdateEquipSlotOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CurrentSlotIndex                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemTileButton_STW::UpdateEquipSlotOverlay(const int32 CurrentSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateEquipSlotOverlay");

	Params::FortItemManagementItemTileButton_STW_UpdateEquipSlotOverlay Parms{};

	Parms.CurrentSlotIndex = CurrentSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.GetHomebaseSquadSlotForItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquadSlotId             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHomebaseSquadSlotId UFortItemManagementItemTileButton_STW::GetHomebaseSquadSlotForItem() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHomebaseSquadSlotForItem");

	Params::FortItemManagementItemTileButton_STW_GetHomebaseSquadSlotForItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.GetItemManagementMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemManagementMode                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemManagementMode UFortItemManagementItemTileButton_STW::GetItemManagementMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemManagementMode");

	Params::FortItemManagementItemTileButton_STW_GetItemManagementMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemTileButton_STW.IsValidEquipSlotOverlayIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementItemTileButton_STW::IsValidEquipSlotOverlayIndex(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsValidEquipSlotOverlayIndex");

	Params::FortItemManagementItemTileButton_STW_IsValidEquipSlotOverlayIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemDetailsPanel_STW.GetAmmoTypeItemDefinitions
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortAmmoItemDefinition*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAmmoItemDefinition*> UFortItemManagementItemDetailsPanel_STW::GetAmmoTypeItemDefinitions()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetAmmoTypeItemDefinitions");

	Params::FortItemManagementItemDetailsPanel_STW_GetAmmoTypeItemDefinitions Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementItemDetailsPanel_STW.HandleHasItemMarkedForMulchingChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemDetailsPanel_STW::HandleHasItemMarkedForMulchingChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHasItemMarkedForMulchingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementItemDetailsPanel_STW.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemDetailsPanel_STW::HandleHostSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.CommitMulch
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementMulchDetailsPanel_STW::CommitMulch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CommitMulch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementMulchDetailsPanel_STW::HandleHostSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.HandleSetOfItemsToMulchChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementMulchDetailsPanel_STW::HandleSetOfItemsToMulchChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSetOfItemsToMulchChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.GetItemCountsToMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UFortItemManagementMulchDetailsPanel_STW::GetItemCountsToMulch() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemCountsToMulch");

	Params::FortItemManagementMulchDetailsPanel_STW_GetItemCountsToMulch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.GetItemsToMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortItemManagementMulchDetailsPanel_STW::GetItemsToMulch() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemsToMulch");

	Params::FortItemManagementMulchDetailsPanel_STW_GetItemsToMulch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementMulchDetailsPanel_STW.IsSpaceAvailableForMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementMulchDetailsPanel_STW::IsSpaceAvailableForMulch() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSpaceAvailableForMulch");

	Params::FortItemManagementMulchDetailsPanel_STW_IsSpaceAvailableForMulch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementModeDetailsPanel_STW.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementModeDetailsPanel_STW::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementModeDetailsPanel_STW.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementModeDetailsPanel_STW::HandleHostSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementModeDetailsPanel_STW.GetItemManagementMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemManagementMode                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemManagementMode UFortItemManagementModeDetailsPanel_STW::GetItemManagementMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemManagementMode");

	Params::FortItemManagementModeDetailsPanel_STW_GetItemManagementMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CancelInventoryPanelTileViewRefresh
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementScreen_STW::CancelInventoryPanelTileViewRefresh()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CancelInventoryPanelTileViewRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CanRequestPopupMenuForSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::CanRequestPopupMenuForSelectedItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanRequestPopupMenuForSelectedItem");

	Params::FortItemManagementScreen_STW_CanRequestPopupMenuForSelectedItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ConsumeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConsumableAccountItem*       ConsumableItem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::ConsumeItem(class UFortConsumableAccountItem* ConsumableItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConsumeItem");

	Params::FortItemManagementScreen_STW_ConsumeItem Parms{};

	Parms.ConsumableItem = ConsumableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CraftAndSlotItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::CraftAndSlotItem(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CraftAndSlotItem");

	Params::FortItemManagementScreen_STW_CraftAndSlotItem Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::CraftItem(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CraftItem");

	Params::FortItemManagementScreen_STW_CraftItem Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::CycleSortType()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CycleSortType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.DropItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::DropItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DropItem");

	Params::FortItemManagementScreen_STW_DropItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.EnterComparisonMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToCompareDetailsWith                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::EnterComparisonMode(class UFortItem* ItemToCompareDetailsWith)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterComparisonMode");

	Params::FortItemManagementScreen_STW_EnterComparisonMode Parms{};

	Parms.ItemToCompareDetailsWith = ItemToCompareDetailsWith;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.EnterDetailsMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToDetail_0                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::EnterDetailsMode(class UFortItem* ItemToDetail_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterDetailsMode");

	Params::FortItemManagementScreen_STW_EnterDetailsMode Parms{};

	Parms.ItemToDetail_0 = ItemToDetail_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.EnterMulchMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToMulch                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::EnterMulchMode(class UFortItem* ItemToMulch)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterMulchMode");

	Params::FortItemManagementScreen_STW_EnterMulchMode Parms{};

	Parms.ItemToMulch = ItemToMulch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.EnterMulchModeForAutoMulch
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::EnterMulchModeForAutoMulch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterMulchModeForAutoMulch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.EquipItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::EquipItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EquipItem");

	Params::FortItemManagementScreen_STW_EquipItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.GuardActionForReadOnlyWIFE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::GuardActionForReadOnlyWIFE()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GuardActionForReadOnlyWIFE");

	Params::FortItemManagementScreen_STW_GuardActionForReadOnlyWIFE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleConsumeItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortConsumableAccountItem*       ConsumableItem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleConsumeItemBP(class UFortConsumableAccountItem* ConsumableItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleConsumeItemBP");

	Params::FortItemManagementScreen_STW_HandleConsumeItemBP Parms{};

	Parms.ConsumableItem = ConsumableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleCraftAndSlotItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleCraftAndSlotItemBP(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCraftAndSlotItemBP");

	Params::FortItemManagementScreen_STW_HandleCraftAndSlotItemBP Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleCraftItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleCraftItemBP(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCraftItemBP");

	Params::FortItemManagementScreen_STW_HandleCraftItemBP Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleDifferentItemManagementModeSetBP
// (Event, Public, BlueprintEvent)

void UFortItemManagementScreen_STW::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleDropItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleDropItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDropItemBP");

	Params::FortItemManagementScreen_STW_HandleDropItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleEquipItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleEquipItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEquipItemBP");

	Params::FortItemManagementScreen_STW_HandleEquipItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleInspectItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleInspectItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleInspectItemBP");

	Params::FortItemManagementScreen_STW_HandleInspectItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleItemToCompareWithChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToCompareWithChanged");

	Params::FortItemManagementScreen_STW_HandleItemToCompareWithChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleItemToDetailChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToDetailChanged");

	Params::FortItemManagementScreen_STW_HandleItemToDetailChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleMulchQuantitySelection
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleMulchQuantitySelection(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMulchQuantitySelection");

	Params::FortItemManagementScreen_STW_HandleMulchQuantitySelection Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleOpenAutoMulchOptionsBP
// (Event, Public, BlueprintEvent)

void UFortItemManagementScreen_STW::HandleOpenAutoMulchOptionsBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOpenAutoMulchOptionsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleOpenCraftingOptionsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleOpenCraftingOptionsBP(class UFortSchematicItem* SchematicItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOpenCraftingOptionsBP");

	Params::FortItemManagementScreen_STW_HandleOpenCraftingOptionsBP Parms{};

	Parms.SchematicItem = SchematicItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HandleTransferItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::HandleTransferItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTransferItemBP");

	Params::FortItemManagementScreen_STW_HandleTransferItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HideCustomFilterModal
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::HideCustomFilterModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideCustomFilterModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.InspectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::InspectItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InspectItem");

	Params::FortItemManagementScreen_STW_InspectItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.MarkAllItemsAsSeen
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::MarkAllItemsAsSeen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MarkAllItemsAsSeen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortItemManagementScreen_STW::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortItemManagementScreen_STW::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.OpenAutoMulchOptions
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::OpenAutoMulchOptions()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenAutoMulchOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.OpenCraftingOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::OpenCraftingOptions(class UFortSchematicItem* SchematicItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenCraftingOptions");

	Params::FortItemManagementScreen_STW_OpenCraftingOptions Parms{};

	Parms.SchematicItem = SchematicItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.RequestPopupMenuForSelectedItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::RequestPopupMenuForSelectedItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestPopupMenuForSelectedItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.SetConsumeItemRequestInProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::SetConsumeItemRequestInProgress(bool InProgress)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetConsumeItemRequestInProgress");

	Params::FortItemManagementScreen_STW_SetConsumeItemRequestInProgress Parms{};

	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.SetFrontendInventoryFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            FrontendInventoryFilter_0                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::SetFrontendInventoryFilter(EFortFrontendInventoryFilter FrontendInventoryFilter_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFrontendInventoryFilter");

	Params::FortItemManagementScreen_STW_SetFrontendInventoryFilter Parms{};

	Parms.FrontendInventoryFilter_0 = FrontendInventoryFilter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ShowCustomFilterModal
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::ShowCustomFilterModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowCustomFilterModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ShowWarningReadOnlyWIFE
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::ShowWarningReadOnlyWIFE(bool Force)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowWarningReadOnlyWIFE");

	Params::FortItemManagementScreen_STW_ShowWarningReadOnlyWIFE Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ToggleShowCollectionBookIndicator
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::ToggleShowCollectionBookIndicator()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleShowCollectionBookIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.ToggleShowRefundIndicator
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen_STW::ToggleShowRefundIndicator()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleShowRefundIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.TransferItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen_STW::TransferItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TransferItem");

	Params::FortItemManagementScreen_STW_TransferItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.CanEquipItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::CanEquipItem(class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanEquipItem");

	Params::FortItemManagementScreen_STW_CanEquipItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.GetItemToCompareDetailsWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemManagementScreen_STW::GetItemToCompareDetailsWith() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemToCompareDetailsWith");

	Params::FortItemManagementScreen_STW_GetItemToCompareDetailsWith Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.GetItemToDetail
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemManagementScreen_STW::GetItemToDetail() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemToDetail");

	Params::FortItemManagementScreen_STW_GetItemToDetail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.GetShouldShowCollectionBookIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::GetShouldShowCollectionBookIndicator() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetShouldShowCollectionBookIndicator");

	Params::FortItemManagementScreen_STW_GetShouldShowCollectionBookIndicator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.GetShouldShowRefundIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::GetShouldShowRefundIndicator() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetShouldShowRefundIndicator");

	Params::FortItemManagementScreen_STW_GetShouldShowRefundIndicator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HasDefaultItemsToMulch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::HasDefaultItemsToMulch() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasDefaultItemsToMulch");

	Params::FortItemManagementScreen_STW_HasDefaultItemsToMulch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.HasItemBeenSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 AccountItem                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::HasItemBeenSeen(class UFortAccountItem* AccountItem) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasItemBeenSeen");

	Params::FortItemManagementScreen_STW_HasItemBeenSeen Parms{};

	Parms.AccountItem = AccountItem;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemManagementScreen_STW.IsScreenWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen_STW::IsScreenWIFE() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsScreenWIFE");

	Params::FortItemManagementScreen_STW_IsScreenWIFE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.MainMenu_STW.TryShowModal
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             ModalWidgetClass                                       (Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenu_STW::TryShowModal(TSoftClassPtr<class UClass>& ModalWidgetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryShowModal");

	Params::MainMenu_STW_TryShowModal Parms{};

	Parms.ModalWidgetClass = ModalWidgetClass;

	UObject::ProcessEvent(Func, &Parms);

	ModalWidgetClass = Parms.ModalWidgetClass;
}


// Function SaveTheWorldUI.MainMenu_STW.TryShowPrimaryContent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             ContentWidgetClass                                     (Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenu_STW::TryShowPrimaryContent(TSoftClassPtr<class UClass>& ContentWidgetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryShowPrimaryContent");

	Params::MainMenu_STW_TryShowPrimaryContent Parms{};

	Parms.ContentWidgetClass = ContentWidgetClass;

	UObject::ProcessEvent(Func, &Parms);

	ContentWidgetClass = Parms.ContentWidgetClass;
}


// Function SaveTheWorldUI.MainMenu_STW.IsActiveTabMainShop
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMainMenu_STW::IsActiveTabMainShop() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsActiveTabMainShop");

	Params::MainMenu_STW_IsActiveTabMainShop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.MainMenu_STW.ShouldShowLeaveExperienceButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMainMenu_STW::ShouldShowLeaveExperienceButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldShowLeaveExperienceButton");

	Params::MainMenu_STW_ShouldShowLeaveExperienceButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUIStateWidget_STWJoinServer.HandleLobbyDisconnected
// (Final, Native, Private)

void UFortUIStateWidget_STWJoinServer::HandleLobbyDisconnected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLobbyDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUIStateWidget_STWJoinServer.HandleLobbyTimeUpdated
// (Final, Native, Private)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_STWJoinServer::HandleLobbyTimeUpdated(int32 TimeRemaining)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLobbyTimeUpdated");

	Params::FortUIStateWidget_STWJoinServer_HandleLobbyTimeUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUIStateWidget_STWJoinServer.HandleMatchmakingComplete
// (Final, Native, Private)
// Parameters:
// EMatchmakingCompleteResult              MatchmakingResult                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_STWJoinServer::HandleMatchmakingComplete(EMatchmakingCompleteResult MatchmakingResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMatchmakingComplete");

	Params::FortUIStateWidget_STWJoinServer_HandleMatchmakingComplete Parms{};

	Parms.MatchmakingResult = MatchmakingResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUIStateWidget_STWJoinServer.HandleMatchmakingStateChange
// (Final, Native, Private)
// Parameters:
// EMatchmakingState                       OldState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMatchmakingState                       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_STWJoinServer::HandleMatchmakingStateChange(EMatchmakingState OldState, EMatchmakingState NewState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMatchmakingStateChange");

	Params::FortUIStateWidget_STWJoinServer_HandleMatchmakingStateChange Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUIStateWidget_STWJoinServer.OnShowTutorialDialog
// (Event, Protected, BlueprintEvent)

void UFortUIStateWidget_STWJoinServer::OnShowTutorialDialog()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowTutorialDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.TopBar_STW.OnShouldShowPhoenixDisplay
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPhoenixSeasonDisplayInfo*    PhoenixDisplayInfo                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTopBar_STW::OnShouldShowPhoenixDisplay(bool bShow, class UFortPhoenixSeasonDisplayInfo* PhoenixDisplayInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShouldShowPhoenixDisplay");

	Params::TopBar_STW_OnShouldShowPhoenixDisplay Parms{};

	Parms.bShow = bShow;
	Parms.PhoenixDisplayInfo = PhoenixDisplayInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.TopBar_STW.OnSocialMenuOpened
// (Event, Protected, BlueprintEvent)

void UTopBar_STW::OnSocialMenuOpened()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSocialMenuOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.TopBar_STW.SetOnlineFriendsCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewOnlineFriendsCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTopBar_STW::SetOnlineFriendsCount(int32 NewOnlineFriendsCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetOnlineFriendsCount");

	Params::TopBar_STW_SetOnlineFriendsCount Parms{};

	Parms.NewOnlineFriendsCount = NewOnlineFriendsCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutGadgetPicker.HandleDifferentTargetLoadoutSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortHeroLoadoutGadgetPicker::HandleDifferentTargetLoadoutSlotSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentTargetLoadoutSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortHeroLoadoutGadgetPicker.SetTargetLoadoutSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     LoadoutItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutGadgetPicker::SetTargetLoadoutSlot(const class UFortCampaignHeroLoadoutItem* LoadoutItem, const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTargetLoadoutSlot");

	Params::FortHeroLoadoutGadgetPicker_SetTargetLoadoutSlot Parms{};

	Parms.LoadoutItem = LoadoutItem;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.AssociateFilterTabList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortTabListWidgetBase_Legacy*    ExternalFilterTabList_0                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::AssociateFilterTabList(const class UFortTabListWidgetBase_Legacy* ExternalFilterTabList_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AssociateFilterTabList");

	Params::FortHeroLoadoutHeroPicker_AssociateFilterTabList Parms{};

	Parms.ExternalFilterTabList_0 = ExternalFilterTabList_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.GetCurrentlySelectedTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortHeroLoadoutHeroPicker::GetCurrentlySelectedTab()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentlySelectedTab");

	Params::FortHeroLoadoutHeroPicker_GetCurrentlySelectedTab Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.HandleDifferentTargetLoadoutSetBP
// (Event, Protected, BlueprintEvent)

void UFortHeroLoadoutHeroPicker::HandleDifferentTargetLoadoutSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentTargetLoadoutSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.HandleFilterTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::HandleFilterTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFilterTabSelected");

	Params::FortHeroLoadoutHeroPicker_HandleFilterTabSelected Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.HandleFilterTabSelectedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::HandleFilterTabSelectedBP(class FName TabId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFilterTabSelectedBP");

	Params::FortHeroLoadoutHeroPicker_HandleFilterTabSelectedBP Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.SetTargetLoadoutSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     LoadoutItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::SetTargetLoadoutSlot(const class UFortCampaignHeroLoadoutItem* LoadoutItem, const class FName& SlotName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTargetLoadoutSlot");

	Params::FortHeroLoadoutHeroPicker_SetTargetLoadoutSlot Parms{};

	Parms.LoadoutItem = LoadoutItem;
	Parms.SlotName = SlotName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutHeroPicker.UpdateFilterTabList
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             PreviouslySelectedTab                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::UpdateFilterTabList(class FName PreviouslySelectedTab)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateFilterTabList");

	Params::FortHeroLoadoutHeroPicker_UpdateFilterTabList Parms{};

	Parms.PreviouslySelectedTab = PreviouslySelectedTab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutScreenBase.SetHeroLoadout
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutScreenBase::SetHeroLoadout(const class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHeroLoadout");

	Params::FortHeroLoadoutScreenBase_SetHeroLoadout Parms{};

	Parms.HeroLoadout = HeroLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutScreenBase.GetIsReadOnly
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroLoadoutScreenBase::GetIsReadOnly() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsReadOnly");

	Params::FortHeroLoadoutScreenBase_GetIsReadOnly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutScreenBase.IsLoadoutSwitchingAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroLoadoutScreenBase::IsLoadoutSwitchingAllowed() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsLoadoutSwitchingAllowed");

	Params::FortHeroLoadoutScreenBase_IsLoadoutSwitchingAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutSlotButton.HandleMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsMenuOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutSlotButton::HandleMenuOpenChanged(bool bIsMenuOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMenuOpenChanged");

	Params::FortHeroLoadoutSlotButton_HandleMenuOpenChanged Parms{};

	Parms.bIsMenuOpen = bIsMenuOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutSlotButton.IsContextMenuOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroLoadoutSlotButton::IsContextMenuOpen() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsContextMenuOpen");

	Params::FortHeroLoadoutSlotButton_IsContextMenuOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutTeamPerkPicker.HandleDifferentTargetLoadoutSetBP
// (Event, Protected, BlueprintEvent)

void UFortHeroLoadoutTeamPerkPicker::HandleDifferentTargetLoadoutSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentTargetLoadoutSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortHeroLoadoutTeamPerkPicker.SetTargetLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     LoadoutItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutTeamPerkPicker::SetTargetLoadout(const class UFortCampaignHeroLoadoutItem* LoadoutItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTargetLoadout");

	Params::FortHeroLoadoutTeamPerkPicker_SetTargetLoadout Parms{};

	Parms.LoadoutItem = LoadoutItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.ConstructTabs
// (Final, Native, Protected, BlueprintCallable)

void UFortCampaignTabsScreenBase::ConstructTabs()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConstructTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.HandleFeatureStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          ChangedFeature                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase::HandleFeatureStateChanged(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFeatureStateChanged");

	Params::FortCampaignTabsScreenBase_HandleFeatureStateChanged Parms{};

	Parms.ChangedFeature = ChangedFeature;
	Parms.NewState = NewState;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.HandleMainTabCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButtonBase*                TabButton                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase::HandleMainTabCreated(class FName TabNameID, class UCommonButtonBase* TabButton)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainTabCreated");

	Params::FortCampaignTabsScreenBase_HandleMainTabCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.HandleMainTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase::HandleMainTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainTabSelected");

	Params::FortCampaignTabsScreenBase_HandleMainTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.UpdateItemShopButtonBang
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tab                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase::UpdateItemShopButtonBang(const class FName Tab)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateItemShopButtonBang");

	Params::FortCampaignTabsScreenBase_UpdateItemShopButtonBang Parms{};

	Parms.Tab = Tab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase.ShouldShowItemShopBang
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCampaignTabsScreenBase::ShouldShowItemShopBang() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldShowItemShopBang");

	Params::FortCampaignTabsScreenBase_ShouldShowItemShopBang Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase_Legacy.ConstructTabs
// (Final, Native, Protected, BlueprintCallable)

void UFortCampaignTabsScreenBase_Legacy::ConstructTabs()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConstructTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase_Legacy.HandleFeatureNavigateRequest
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase_Legacy::HandleFeatureNavigateRequest(EFortUIFeature Feature)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFeatureNavigateRequest");

	Params::FortCampaignTabsScreenBase_Legacy_HandleFeatureNavigateRequest Parms{};

	Parms.Feature = Feature;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase_Legacy.HandleFeatureStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          ChangedFeature                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase_Legacy::HandleFeatureStateChanged(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFeatureStateChanged");

	Params::FortCampaignTabsScreenBase_Legacy_HandleFeatureStateChanged Parms{};

	Parms.ChangedFeature = ChangedFeature;
	Parms.NewState = NewState;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase_Legacy.HandleMainTabCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButtonBase*                TabButton                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase_Legacy::HandleMainTabCreated(class FName TabNameID, class UCommonButtonBase* TabButton)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainTabCreated");

	Params::FortCampaignTabsScreenBase_Legacy_HandleMainTabCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortCampaignTabsScreenBase_Legacy.HandleMainTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCampaignTabsScreenBase_Legacy::HandleMainTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainTabSelected");

	Params::FortCampaignTabsScreenBase_Legacy_HandleMainTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary.CloseSummaryScreen
// (Event, Public, BlueprintEvent)

void UFortStoreSummary::CloseSummaryScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CloseSummaryScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.FinalizeFavoriteStatus
// (Final, Native, Public, BlueprintCallable)

void UFortStoreSummary::FinalizeFavoriteStatus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FinalizeFavoriteStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.HandleContextMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary::HandleContextMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleContextMenuOpenChanged");

	Params::FortStoreSummary_HandleContextMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary.HandleContextMenuOpenChangedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary::HandleContextMenuOpenChangedBP(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleContextMenuOpenChangedBP");

	Params::FortStoreSummary_HandleContextMenuOpenChangedBP Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.MarkDefaultItemsForMulch
// (Final, Native, Public, BlueprintCallable)

void UFortStoreSummary::MarkDefaultItemsForMulch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MarkDefaultItemsForMulch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.SetCards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FCard>                    Cards                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortStoreSummary::SetCards(const TArray<struct FCard>& Cards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCards");

	Params::FortStoreSummary_SetCards Parms{};

	Parms.Cards = std::move(Cards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary.SetIsInChoiceSelectionMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsInChoiceSelectionMode                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary::SetIsInChoiceSelectionMode(bool InIsInChoiceSelectionMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsInChoiceSelectionMode");

	Params::FortStoreSummary_SetIsInChoiceSelectionMode Parms{};

	Parms.InIsInChoiceSelectionMode = InIsInChoiceSelectionMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary.GetIsInChoiceSelectionMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreSummary::GetIsInChoiceSelectionMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsInChoiceSelectionMode");

	Params::FortStoreSummary_GetIsInChoiceSelectionMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortStoreSummaryItemButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPopupMenu");

	Params::FortStoreSummaryItemButton_GetPopupMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.HandleItemMulchStateChanged
// (Event, Public, BlueprintEvent)

void UFortStoreSummaryItemButton::HandleItemMulchStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemMulchStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.HandleMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::HandleMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMenuOpenChanged");

	Params::FortStoreSummaryItemButton_HandleMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.SetStoreCardObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStoreCardObject*                 CardObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::SetStoreCardObject(class UStoreCardObject* CardObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStoreCardObject");

	Params::FortStoreSummaryItemButton_SetStoreCardObject Parms{};

	Parms.CardObject = CardObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.UpdateMulchListWithItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAddingItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::UpdateMulchListWithItem(bool bAddingItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateMulchListWithItem");

	Params::FortStoreSummaryItemButton_UpdateMulchListWithItem Parms{};

	Parms.bAddingItem = bAddingItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton.GetStoreCardObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStoreCardObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStoreCardObject* UFortStoreSummaryItemButton::GetStoreCardObject() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStoreCardObject");

	Params::FortStoreSummaryItemButton_GetStoreCardObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortStoreSummaryItemButton_Legacy::GetPopupMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPopupMenu");

	Params::FortStoreSummaryItemButton_Legacy_GetPopupMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.HandleItemMulchStateChanged
// (Event, Public, BlueprintEvent)

void UFortStoreSummaryItemButton_Legacy::HandleItemMulchStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemMulchStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.HandleMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton_Legacy::HandleMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMenuOpenChanged");

	Params::FortStoreSummaryItemButton_Legacy_HandleMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.SetStoreCardObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStoreCardObject*                 CardObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton_Legacy::SetStoreCardObject(class UStoreCardObject* CardObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStoreCardObject");

	Params::FortStoreSummaryItemButton_Legacy_SetStoreCardObject Parms{};

	Parms.CardObject = CardObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.UpdateMulchListWithItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAddingItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton_Legacy::UpdateMulchListWithItem(bool bAddingItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateMulchListWithItem");

	Params::FortStoreSummaryItemButton_Legacy_UpdateMulchListWithItem Parms{};

	Parms.bAddingItem = bAddingItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemButton_Legacy.GetStoreCardObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStoreCardObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStoreCardObject* UFortStoreSummaryItemButton_Legacy::GetStoreCardObject() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStoreCardObject");

	Params::FortStoreSummaryItemButton_Legacy_GetStoreCardObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemPopupMenu::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemChanged");

	Params::FortStoreSummaryItemPopupMenu_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu.MulchItem
// (Final, Native, Protected, BlueprintCallable)

void UFortStoreSummaryItemPopupMenu::MulchItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MulchItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreSummaryItemButton*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreSummaryItemButton* UFortStoreSummaryItemPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHostButton");

	Params::FortStoreSummaryItemPopupMenu_GetHostButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu_Legacy.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemPopupMenu_Legacy::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemChanged");

	Params::FortStoreSummaryItemPopupMenu_Legacy_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu_Legacy.MulchItem
// (Final, Native, Protected, BlueprintCallable)

void UFortStoreSummaryItemPopupMenu_Legacy::MulchItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MulchItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummaryItemPopupMenu_Legacy.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreSummaryItemButton_Legacy*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreSummaryItemButton_Legacy* UFortStoreSummaryItemPopupMenu_Legacy::GetHostButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHostButton");

	Params::FortStoreSummaryItemPopupMenu_Legacy_GetHostButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.CloseSummaryScreen
// (Event, Public, BlueprintEvent)

void UFortStoreSummary_Legacy::CloseSummaryScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CloseSummaryScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.FinalizeFavoriteStatus
// (Final, Native, Public, BlueprintCallable)

void UFortStoreSummary_Legacy::FinalizeFavoriteStatus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FinalizeFavoriteStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.HandleContextMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary_Legacy::HandleContextMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleContextMenuOpenChanged");

	Params::FortStoreSummary_Legacy_HandleContextMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.HandleContextMenuOpenChangedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary_Legacy::HandleContextMenuOpenChangedBP(bool bIsOpen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleContextMenuOpenChangedBP");

	Params::FortStoreSummary_Legacy_HandleContextMenuOpenChangedBP Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary_Legacy::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.MarkDefaultItemsForMulch
// (Final, Native, Public, BlueprintCallable)

void UFortStoreSummary_Legacy::MarkDefaultItemsForMulch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MarkDefaultItemsForMulch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary_Legacy::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary_Legacy::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.SetCards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FCard>                    Cards                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortStoreSummary_Legacy::SetCards(const TArray<struct FCard>& Cards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCards");

	Params::FortStoreSummary_Legacy_SetCards Parms{};

	Parms.Cards = std::move(Cards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.SetIsInChoiceSelectionMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsInChoiceSelectionMode                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary_Legacy::SetIsInChoiceSelectionMode(bool InIsInChoiceSelectionMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsInChoiceSelectionMode");

	Params::FortStoreSummary_Legacy_SetIsInChoiceSelectionMode Parms{};

	Parms.InIsInChoiceSelectionMode = InIsInChoiceSelectionMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary_Legacy::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStoreSummary_Legacy.GetIsInChoiceSelectionMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreSummary_Legacy::GetIsInChoiceSelectionMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsInChoiceSelectionMode");

	Params::FortStoreSummary_Legacy_GetIsInChoiceSelectionMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutGadgetTileBase.OnGadgetUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsValidGadget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutGadgetTileBase::OnGadgetUpdated(bool bIsValidGadget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGadgetUpdated");

	Params::FortHeroLoadoutGadgetTileBase_OnGadgetUpdated Parms{};

	Parms.bIsValidGadget = bIsValidGadget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutGadgetTileBase.SetGadgetToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGadgetItemDefinition*        GadgetItemDefinition                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutGadgetTileBase::SetGadgetToRepresent(const class UFortGadgetItemDefinition* GadgetItemDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetGadgetToRepresent");

	Params::FortHeroLoadoutGadgetTileBase_SetGadgetToRepresent Parms{};

	Parms.GadgetItemDefinition = GadgetItemDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutInGameScreenBase.OnPerkWidgetAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UGridSlot*                        GridSlot                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutInGameScreenBase::OnPerkWidgetAdded(class UGridSlot* GridSlot)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPerkWidgetAdded");

	Params::FortHeroLoadoutInGameScreenBase_OnPerkWidgetAdded Parms{};

	Parms.GridSlot = GridSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortHeroLoadoutInGameScreenBase.GetGadgetDefinitionBySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortGadgetItemDefinition*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortGadgetItemDefinition* UFortHeroLoadoutInGameScreenBase::GetGadgetDefinitionBySlot(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGadgetDefinitionBySlot");

	Params::FortHeroLoadoutInGameScreenBase_GetGadgetDefinitionBySlot Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroLoadoutPerkTileBase.OnPerkInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortHeroPerkDisplayType                InPerkType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowWarning                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutPerkTileBase::OnPerkInitialized(EFortHeroPerkDisplayType InPerkType, bool bActive, bool bShowWarning)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPerkInitialized");

	Params::FortHeroLoadoutPerkTileBase_OnPerkInitialized Parms{};

	Parms.InPerkType = InPerkType;
	Parms.bActive = bActive;
	Parms.bShowWarning = bShowWarning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModOptinScreenBase.ConvertItemAlterations
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModOptinScreenBase::ConvertItemAlterations()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConvertItemAlterations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModOptinScreenBase.OnItemConversionComplete
// (Event, Protected, BlueprintEvent)

void UFortAlterationModOptinScreenBase::OnItemConversionComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemConversionComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModOptinScreenBase.OnSetupItem
// (Event, Protected, BlueprintEvent)

void UFortAlterationModOptinScreenBase::OnSetupItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetupItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModOptinScreenBase.RequestClose
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bCancelled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModOptinScreenBase::RequestClose(bool bCancelled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestClose");

	Params::FortAlterationModOptinScreenBase_RequestClose Parms{};

	Parms.bCancelled = bCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModOptinScreenBase.SetupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModOptinScreenBase::SetupItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupItem");

	Params::FortAlterationModOptinScreenBase_SetupItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.AreIngredientRequirementsMent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemQuantityPair>    RequiredIngredients                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationModScreenBase::AreIngredientRequirementsMent(const TArray<struct FFortItemQuantityPair>& RequiredIngredients)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreIngredientRequirementsMent");

	Params::FortAlterationModScreenBase_AreIngredientRequirementsMent Parms{};

	Parms.RequiredIngredients = std::move(RequiredIngredients);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.CancelSelection
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModScreenBase::CancelSelection()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CancelSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.ConfirmSelection
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModScreenBase::ConfirmSelection()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConfirmSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.HandleBackAction
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::HandleBackAction(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBackAction");

	Params::FortAlterationModScreenBase_HandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.OnAlterationModificationCompleted
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::OnAlterationModificationCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAlterationModificationCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.OnAlterationModificationStarted
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::OnAlterationModificationStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAlterationModificationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.OnAlterationModificationSucess
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ModifiedSlotIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnAlterationModificationSucess(int32 ModifiedSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAlterationModificationSucess");

	Params::FortAlterationModScreenBase_OnAlterationModificationSucess Parms{};

	Parms.ModifiedSlotIndex = ModifiedSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.OnAlterationOptionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAlterationOption*            CurrentAlterationOption                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnAlterationOptionChanged(class UFortAlterationOption* CurrentAlterationOption)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAlterationOptionChanged");

	Params::FortAlterationModScreenBase_OnAlterationOptionChanged Parms{};

	Parms.CurrentAlterationOption = CurrentAlterationOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.OnItemSlotChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    SelectedSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnItemSlotChanged(bool SelectedSlot)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemSlotChanged");

	Params::FortAlterationModScreenBase_OnItemSlotChanged Parms{};

	Parms.SelectedSlot = SelectedSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.RefreshItemAndAlterationsBP
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::RefreshItemAndAlterationsBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshItemAndAlterationsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationModScreenBase.SetItemForAlterationsModding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterableItem*               InAlterableItem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::SetItemForAlterationsModding(class UFortAlterableItem* InAlterableItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetItemForAlterationsModding");

	Params::FortAlterationModScreenBase_SetItemForAlterationsModding Parms{};

	Parms.InAlterableItem = InAlterableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.DoAlterationModification
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectionScreen::DoAlterationModification()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoAlterationModification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.GetCycleWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItemInspectCycleWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemInspectCycleWidget* UFortItemInspectionScreen::GetCycleWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCycleWidget");

	Params::FortItemInspectionScreen_GetCycleWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleDifferentInspectionModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleDifferentInspectionModeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentInspectionModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleDifferentItemToInspectSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleDifferentItemToInspectSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentItemToInspectSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleIsPreviewingChanged
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleIsPreviewingChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleIsPreviewingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleItemToInspectChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::HandleItemToInspectChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToInspectChanged");

	Params::FortItemInspectionScreen_HandleItemToInspectChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleItemToInspectChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasFavoritedChanged                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::HandleItemToInspectChangedBP(bool bWasFavoritedChanged)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToInspectChangedBP");

	Params::FortItemInspectionScreen_HandleItemToInspectChangedBP Parms{};

	Parms.bWasFavoritedChanged = bWasFavoritedChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleItemToInspectDestroyed
// (Final, Native, Protected)

void UFortItemInspectionScreen::HandleItemToInspectDestroyed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToInspectDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.HandleItemToInspectDestroyedBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleItemToInspectDestroyedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemToInspectDestroyedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.OpenItemInspect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemInspectionMode                 Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowUpgrading                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowEvolution                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowFavorite                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTemporaryItem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRarityUpgrading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   QuantityOverride                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::OpenItemInspect(class UFortItem* ItemToInspect, EFortItemInspectionMode Mode, bool ShouldAllowUpgrading, bool ShouldAllowEvolution, bool ShouldAllowFavorite, bool IsTemporaryItem, bool bAllowRarityUpgrading, int32 QuantityOverride)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenItemInspect");

	Params::FortItemInspectionScreen_OpenItemInspect Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.Mode = Mode;
	Parms.ShouldAllowUpgrading = ShouldAllowUpgrading;
	Parms.ShouldAllowEvolution = ShouldAllowEvolution;
	Parms.ShouldAllowFavorite = ShouldAllowFavorite;
	Parms.IsTemporaryItem = IsTemporaryItem;
	Parms.bAllowRarityUpgrading = bAllowRarityUpgrading;
	Parms.QuantityOverride = QuantityOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.SetAttemptingConversion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsAttemptingConversion                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetAttemptingConversion(bool bIsAttemptingConversion)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAttemptingConversion");

	Params::FortItemInspectionScreen_SetAttemptingConversion Parms{};

	Parms.bIsAttemptingConversion = bIsAttemptingConversion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.SetInspectionMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortItemInspectionMode                 NewInspectMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetInspectionMode(EFortItemInspectionMode NewInspectMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInspectionMode");

	Params::FortItemInspectionScreen_SetInspectionMode Parms{};

	Parms.NewInspectMode = NewInspectMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.SetItemToRepresent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetItemToRepresent(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetItemToRepresent");

	Params::FortItemInspectionScreen_SetItemToRepresent Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectionScreen.DoesItemHaveLegacyAlterations
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemInspectionScreen::DoesItemHaveLegacyAlterations() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoesItemHaveLegacyAlterations");

	Params::FortItemInspectionScreen_DoesItemHaveLegacyAlterations Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectionScreen.GetItemQuantityOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemInspectionScreen::GetItemQuantityOverride() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemQuantityOverride");

	Params::FortItemInspectionScreen_GetItemQuantityOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectionScreen.GetRefundDescriptionText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemInspectionScreen::GetRefundDescriptionText() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRefundDescriptionText");

	Params::FortItemInspectionScreen_GetRefundDescriptionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectionScreen.GetRefundResultItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* UFortItemInspectionScreen::GetRefundResultItem() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRefundResultItem");

	Params::FortItemInspectionScreen_GetRefundResultItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectionScreen.IsItemSlottedInCollectionBook
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemInspectionScreen::IsItemSlottedInCollectionBook(const class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsItemSlottedInCollectionBook");

	Params::FortItemInspectionScreen_IsItemSlottedInCollectionBook Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.OnItemCycled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        OldItem                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OffsetFromPreviousItem                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::OnItemCycled(class UFortItem* OldItem, class UFortItem* NewItem, int32 OffsetFromPreviousItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemCycled");

	Params::FortItemInspectCycleWidget_OnItemCycled Parms{};

	Parms.OldItem = OldItem;
	Parms.NewItem = NewItem;
	Parms.OffsetFromPreviousItem = OffsetFromPreviousItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SelectItemWithOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SelectItemWithOffset(int32 Offset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectItemWithOffset");

	Params::FortItemInspectCycleWidget_SelectItemWithOffset Parms{};

	Parms.Offset = Offset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SelectNextItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SelectNextItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectNextItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SelectPreviousItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SelectPreviousItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectPreviousItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        NewItemToRepresent                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SetItemToRepresent(const class UFortItem* NewItemToRepresent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetItemToRepresent");

	Params::FortItemInspectCycleWidget_SetItemToRepresent Parms{};

	Parms.NewItemToRepresent = NewItemToRepresent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SetOwningItemInspectScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemInspectionScreen*        ItemInspect                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SetOwningItemInspectScreen(class UFortItemInspectionScreen* ItemInspect)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetOwningItemInspectScreen");

	Params::FortItemInspectCycleWidget_SetOwningItemInspectScreen Parms{};

	Parms.ItemInspect = ItemInspect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.SetupActionHandlers
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SetupActionHandlers()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupActionHandlers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortItemInspectCycleWidget.GetItemWithOffset_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   IndexOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemInspectCycleWidget::GetItemWithOffset_BP(int32 IndexOffset) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemWithOffset_BP");

	Params::FortItemInspectCycleWidget_GetItemWithOffset_BP Parms{};

	Parms.IndexOffset = IndexOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOption.OnSetup
// (Event, Public, BlueprintEvent)

void UFortAlterationOption::OnSetup()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortAlterationOption.Setup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAlterationOption                InAlterationOption                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortAlterationOptionType               InAlterationOptionType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOption::Setup(struct FAlterationOption* InAlterationOption, EFortAlterationOptionType InAlterationOptionType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Setup");

	Params::FortAlterationOption_Setup Parms{};

	Parms.InAlterationOptionType = InAlterationOptionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InAlterationOption != nullptr)
		*InAlterationOption = std::move(Parms.InAlterationOption);
}


// Function SaveTheWorldUI.FortAlterationOption.GetAlterationDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortAlterationOption::GetAlterationDefinition() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAlterationDefinition");

	Params::FortAlterationOption_GetAlterationDefinition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOption.GetAlterationOptionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAlterationOptionType               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortAlterationOptionType UFortAlterationOption::GetAlterationOptionType() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAlterationOptionType");

	Params::FortAlterationOption_GetAlterationOptionType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOption.GetCurrentPipCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxPipCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAlterationOption::GetCurrentPipCount(float MaxPipCount) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPipCount");

	Params::FortAlterationOption_GetCurrentPipCount Parms{};

	Parms.MaxPipCount = MaxPipCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOption.GetNextPipCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxPipCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAlterationOption::GetNextPipCount(float MaxPipCount) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextPipCount");

	Params::FortAlterationOption_GetNextPipCount Parms{};

	Parms.MaxPipCount = MaxPipCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOption.GetRequiredIngredients
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemQuantityPair> UFortAlterationOption::GetRequiredIngredients() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRequiredIngredients");

	Params::FortAlterationOption_GetRequiredIngredients Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.HandleAlterationsOptionHovered
// (Final, Native, Public)
// Parameters:
// class UCommonButtonLegacy*              AlterationOptionButton                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::HandleAlterationsOptionHovered(class UCommonButtonLegacy* AlterationOptionButton, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAlterationsOptionHovered");

	Params::FortAlterationOptionsBase_HandleAlterationsOptionHovered Parms{};

	Parms.AlterationOptionButton = AlterationOptionButton;
	Parms.GroupIndex = GroupIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.HandleAlterationsOptionSelected
// (Final, Native, Public)
// Parameters:
// class UCommonButtonLegacy*              AlterationOptionButton                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::HandleAlterationsOptionSelected(class UCommonButtonLegacy* AlterationOptionButton, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAlterationsOptionSelected");

	Params::FortAlterationOptionsBase_HandleAlterationsOptionSelected Parms{};

	Parms.AlterationOptionButton = AlterationOptionButton;
	Parms.GroupIndex = GroupIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.OnGenerateOption
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortAlterationOptionType               OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAlterationOption*            OptionWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::OnGenerateOption(EFortAlterationOptionType OptionType, class UFortAlterationOption* OptionWidget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGenerateOption");

	Params::FortAlterationOptionsBase_OnGenerateOption Parms{};

	Parms.OptionType = OptionType;
	Parms.OptionWidget = OptionWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.OnItemChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::OnItemChanged(bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemChanged");

	Params::FortAlterationOptionsBase_OnItemChanged Parms{};

	Parms.bIntroAlterations = bIntroAlterations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.ProcessAlterationOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::ProcessAlterationOptions(bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ProcessAlterationOptions");

	Params::FortAlterationOptionsBase_ProcessAlterationOptions Parms{};

	Parms.bIntroAlterations = bIntroAlterations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.DoAlterationOptionsExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAlterationOptionType               OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationOptionsBase::DoAlterationOptionsExist(EFortAlterationOptionType OptionType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoAlterationOptionsExist");

	Params::FortAlterationOptionsBase_DoAlterationOptionsExist Parms{};

	Parms.OptionType = OptionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortAlterationOptionsBase.IsValidAlterationSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationOptionsBase::IsValidAlterationSlot() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsValidAlterationSlot");

	Params::FortAlterationOptionsBase_IsValidAlterationSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetArbitratorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortVoteArbitratorType UFortMissionActivationInfoSTW::GetArbitratorType(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetArbitratorType");

	Params::FortMissionActivationInfoSTW_GetArbitratorType Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetVoteCounts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutYesVoteCount                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutNoVoteCount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::GetVoteCounts(EFortVoteType VoteType, int32* OutYesVoteCount, int32* OutNoVoteCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVoteCounts");

	Params::FortMissionActivationInfoSTW_GetVoteCounts Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutYesVoteCount != nullptr)
		*OutYesVoteCount = Parms.OutYesVoteCount;

	if (OutNoVoteCount != nullptr)
		*OutNoVoteCount = Parms.OutNoVoteCount;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetVoters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVoter> UFortMissionActivationInfoSTW::GetVoters(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVoters");

	Params::FortMissionActivationInfoSTW_GetVoters Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.HandleGameplayVoteUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteStatus                         VoteStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   Voters                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::HandleGameplayVoteUpdated(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32 VoteResult, const TArray<struct FVoter>& Voters)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleGameplayVoteUpdated");

	Params::FortMissionActivationInfoSTW_HandleGameplayVoteUpdated Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteStatus = VoteStatus;
	Parms.VoteResult = VoteResult;
	Parms.Voters = std::move(Voters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.HandleTeamMemberAdded
// (Final, Native, Private)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::HandleTeamMemberAdded(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTeamMemberAdded");

	Params::FortMissionActivationInfoSTW_HandleTeamMemberAdded Parms{};

	Parms.NewInfo = std::move(NewInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.HandleTeamMemberRemoved
// (Final, Native, Private)
// Parameters:
// int32                                   RemovedIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::HandleTeamMemberRemoved(int32 RemovedIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTeamMemberRemoved");

	Params::FortMissionActivationInfoSTW_HandleTeamMemberRemoved Parms{};

	Parms.RemovedIndex = RemovedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.HasPlayerVoted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::HasPlayerVoted(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasPlayerVoted");

	Params::FortMissionActivationInfoSTW_HasPlayerVoted Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.RequestVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VoteDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FailedVoteLockOutDuration                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ArbitratorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::RequestVote(EFortVoteType VoteType, float VoteDuration, float FailedVoteLockOutDuration, EFortVoteArbitratorType ArbitratorType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestVote");

	Params::FortMissionActivationInfoSTW_RequestVote Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteDuration = VoteDuration;
	Parms.FailedVoteLockOutDuration = FailedVoteLockOutDuration;
	Parms.ArbitratorType = ArbitratorType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.SubmitVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApprove                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::SubmitVote(EFortVoteType VoteType, bool bApprove)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SubmitVote");

	Params::FortMissionActivationInfoSTW_SubmitVote Parms{};

	Parms.VoteType = VoteType;
	Parms.bApprove = bApprove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.CanRequestVote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::CanRequestVote(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanRequestVote");

	Params::FortMissionActivationInfoSTW_CanRequestVote Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.DoesPrimaryMissionContainTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::DoesPrimaryMissionContainTags(const struct FGameplayTagContainer& Tags) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoesPrimaryMissionContainTags");

	Params::FortMissionActivationInfoSTW_DoesPrimaryMissionContainTags Parms{};

	Parms.Tags = std::move(Tags);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetAvailableBluGloCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfoSTW::GetAvailableBluGloCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAvailableBluGloCount");

	Params::FortMissionActivationInfoSTW_GetAvailableBluGloCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetDeltaRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   BaseDifficultyIncreaseTier                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ComparedDifficultyIncreaseTier                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemDelta>           DeltaRewards                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortMissionActivationInfoSTW::GetDeltaRewards(int32 BaseDifficultyIncreaseTier, int32 ComparedDifficultyIncreaseTier, TArray<struct FFortItemDelta>* DeltaRewards) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDeltaRewards");

	Params::FortMissionActivationInfoSTW_GetDeltaRewards Parms{};

	Parms.BaseDifficultyIncreaseTier = BaseDifficultyIncreaseTier;
	Parms.ComparedDifficultyIncreaseTier = ComparedDifficultyIncreaseTier;

	UObject::ProcessEvent(Func, &Parms);

	if (DeltaRewards != nullptr)
		*DeltaRewards = std::move(Parms.DeltaRewards);
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetIncreaseDifficultyBluGloRequirement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfoSTW::GetIncreaseDifficultyBluGloRequirement() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIncreaseDifficultyBluGloRequirement");

	Params::FortMissionActivationInfoSTW_GetIncreaseDifficultyBluGloRequirement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetInstigatorId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortMissionActivationInfoSTW::GetInstigatorId(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInstigatorId");

	Params::FortMissionActivationInfoSTW_GetInstigatorId Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetLockoutTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMissionActivationInfoSTW::GetLockoutTimeRemaining(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLockoutTimeRemaining");

	Params::FortMissionActivationInfoSTW_GetLockoutTimeRemaining Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetMissionObjectiveTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionActivationInfoSTW::GetMissionObjectiveTimeRemaining() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMissionObjectiveTimeRemaining");

	Params::FortMissionActivationInfoSTW_GetMissionObjectiveTimeRemaining Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetMissionVoteType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortVoteType UFortMissionActivationInfoSTW::GetMissionVoteType() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMissionVoteType");

	Params::FortMissionActivationInfoSTW_GetMissionVoteType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetPrimaryMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortMissionActivationInfoSTW::GetPrimaryMission() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPrimaryMission");

	Params::FortMissionActivationInfoSTW_GetPrimaryMission Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetPrimaryMissionInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMissionInfo*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionInfo* UFortMissionActivationInfoSTW::GetPrimaryMissionInfo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPrimaryMissionInfo");

	Params::FortMissionActivationInfoSTW_GetPrimaryMissionInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetStartObjectiveBluGloRequirement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfoSTW::GetStartObjectiveBluGloRequirement() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStartObjectiveBluGloRequirement");

	Params::FortMissionActivationInfoSTW_GetStartObjectiveBluGloRequirement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.GetVoteTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionActivationInfoSTW::GetVoteTimeRemaining(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVoteTimeRemaining");

	Params::FortMissionActivationInfoSTW_GetVoteTimeRemaining Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.IsAnyVoteActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::IsAnyVoteActive() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAnyVoteActive");

	Params::FortMissionActivationInfoSTW_IsAnyVoteActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.IsPlayerVoteInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::IsPlayerVoteInstigator(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPlayerVoteInstigator");

	Params::FortMissionActivationInfoSTW_IsPlayerVoteInstigator Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.IsVoteActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::IsVoteActive(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsVoteActive");

	Params::FortMissionActivationInfoSTW_IsVoteActive Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.IsVoteLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfoSTW::IsVoteLocked(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsVoteLocked");

	Params::FortMissionActivationInfoSTW_IsVoteLocked Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationInfoSTW.TimeSecondsToText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMissionActivationInfoSTW::TimeSecondsToText(float InSeconds) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TimeSecondsToText");

	Params::FortMissionActivationInfoSTW_TimeSecondsToText Parms{};

	Parms.InSeconds = InSeconds;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.InfoObjectUpdated
// (Event, Protected, BlueprintEvent)

void UFortMissionActivationWidgetSTWPanel::InfoObjectUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InfoObjectUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVoteActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTWPanel::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActiveVoteChangedBP");

	Params::FortMissionActivationWidgetSTWPanel_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.OnMultiplayerChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTWPanel::OnMultiplayerChangedBP(bool bIsMultiplayer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMultiplayerChangedBP");

	Params::FortMissionActivationWidgetSTWPanel_OnMultiplayerChangedBP Parms{};

	Parms.bIsMultiplayer = bIsMultiplayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.OnVoteLockoutChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTWPanel::OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVoteLockoutChangedBP");

	Params::FortMissionActivationWidgetSTWPanel_OnVoteLockoutChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.OnVoteUpdatedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTWPanel::OnVoteUpdatedBP(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVoteUpdatedBP");

	Params::FortMissionActivationWidgetSTWPanel_OnVoteUpdatedBP Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTWPanel.SetInfoObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMissionActivationInfoSTW*    NewInfoObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTWPanel::SetInfoObject(class UFortMissionActivationInfoSTW* NewInfoObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInfoObject");

	Params::FortMissionActivationWidgetSTWPanel_SetInfoObject Parms{};

	Parms.NewInfoObject = NewInfoObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVoteActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTW::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActiveVoteChangedBP");

	Params::FortMissionActivationWidgetSTW_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.OnMultiplayerChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTW::OnMultiplayerChangedBP(bool bIsMultiplayer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMultiplayerChangedBP");

	Params::FortMissionActivationWidgetSTW_OnMultiplayerChangedBP Parms{};

	Parms.bIsMultiplayer = bIsMultiplayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.OnStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortMissionActivationWidgetSTWState    ActiveState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMissionActivationWidgetSTWState    PreviousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTW::OnStateUpdated(EFortMissionActivationWidgetSTWState ActiveState, EFortMissionActivationWidgetSTWState PreviousState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStateUpdated");

	Params::FortMissionActivationWidgetSTW_OnStateUpdated Parms{};

	Parms.ActiveState = ActiveState;
	Parms.PreviousState = PreviousState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.OnVoteLockoutChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetSTW::OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVoteLockoutChangedBP");

	Params::FortMissionActivationWidgetSTW_OnVoteLockoutChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.RequestDefaultState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidgetSTW::RequestDefaultState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestDefaultState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.RequestDifficultyIncreaseState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidgetSTW::RequestDifficultyIncreaseState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestDifficultyIncreaseState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.RequestStartObjectiveState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidgetSTW::RequestStartObjectiveState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestStartObjectiveState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortMissionActivationWidgetSTW.GetCurrentState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortMissionActivationWidgetSTWState    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMissionActivationWidgetSTWState UFortMissionActivationWidgetSTW::GetCurrentState() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentState");

	Params::FortMissionActivationWidgetSTW_GetCurrentState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortOutpostScreen.SetInputReflectorBoxVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostScreen::SetInputReflectorBoxVisibility(bool bShow)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInputReflectorBoxVisibility");

	Params::FortOutpostScreen_SetInputReflectorBoxVisibility Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.CanGotoQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanGotoQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanGotoQuest");

	Params::FortJournalQuestDetails_CanGotoQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortJournalQuestDetails.CanPartyLeaderPlayQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanPartyLeaderPlayQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPartyLeaderPlayQuest");

	Params::FortJournalQuestDetails_CanPartyLeaderPlayQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortJournalQuestDetails.CanPlayQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanPlayQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPlayQuest");

	Params::FortJournalQuestDetails_CanPlayQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortJournalQuestDetails.GetActiveMissionTileType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTheaterMapTileType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTheaterMapTileType UFortJournalQuestDetails::GetActiveMissionTileType()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetActiveMissionTileType");

	Params::FortJournalQuestDetails_GetActiveMissionTileType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortJournalQuestDetails.GetFutureObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestObjectiveInfo*>  FutureObjectives                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetFutureObjectives(TArray<class UFortQuestObjectiveInfo*>* FutureObjectives)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetFutureObjectives");

	Params::FortJournalQuestDetails_GetFutureObjectives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FutureObjectives != nullptr)
		*FutureObjectives = std::move(Parms.FutureObjectives);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.GetRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>OutRewards                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>OutSelectableRewards                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetRewards(TArray<struct FFortItemInstanceQuantityPair>* OutRewards, TArray<struct FFortItemInstanceQuantityPair>* OutSelectableRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRewards");

	Params::FortJournalQuestDetails_GetRewards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRewards != nullptr)
		*OutRewards = std::move(Parms.OutRewards);

	if (OutSelectableRewards != nullptr)
		*OutSelectableRewards = std::move(Parms.OutSelectableRewards);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.GetVisibleObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestObjectiveInfo*>  VisibleObjectives                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetVisibleObjectives(TArray<class UFortQuestObjectiveInfo*>* VisibleObjectives)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVisibleObjectives");

	Params::FortJournalQuestDetails_GetVisibleObjectives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisibleObjectives != nullptr)
		*VisibleObjectives = std::move(Parms.VisibleObjectives);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.HandleCurrentQuestChangedBP
// (Event, Protected, BlueprintEvent)

void UFortJournalQuestDetails::HandleCurrentQuestChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCurrentQuestChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.OnEndSpokenDialog
// (Event, Protected, BlueprintEvent)

void UFortJournalQuestDetails::OnEndSpokenDialog()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEndSpokenDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.RegisterEndSpokenDialogEvent
// (Final, Native, Protected, BlueprintCallable)

void UFortJournalQuestDetails::RegisterEndSpokenDialogEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RegisterEndSpokenDialogEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortJournalQuestDetails.SetCurrentQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   InCurrentQuest                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::SetCurrentQuest(class UFortQuestItem* InCurrentQuest)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentQuest");

	Params::FortJournalQuestDetails_SetCurrentQuest Parms{};

	Parms.InCurrentQuest = InCurrentQuest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortJournalQuestProgressBar.GetProgressDetails
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             OutNumerator                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             OutDenominator                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// float                                   OutFraction                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortJournalQuestProgressBar::GetProgressDetails(class FText* OutNumerator, class FText* OutDenominator, float* OutFraction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetProgressDetails");

	Params::FortJournalQuestProgressBar_GetProgressDetails Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutNumerator != nullptr)
		*OutNumerator = std::move(Parms.OutNumerator);

	if (OutDenominator != nullptr)
		*OutDenominator = std::move(Parms.OutDenominator);

	if (OutFraction != nullptr)
		*OutFraction = Parms.OutFraction;
}


// Function SaveTheWorldUI.FortProgressArrowButton.OnArrowColorSet
// (Event, Public, BlueprintEvent)

void UFortProgressArrowButton::OnArrowColorSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnArrowColorSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortProgressArrowButton.OnIsInteractiveSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsInteractive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressArrowButton::OnIsInteractiveSet(bool bIsInteractive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsInteractiveSet");

	Params::FortProgressArrowButton_OnIsInteractiveSet Parms{};

	Parms.bIsInteractive = bIsInteractive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortProgressArrowButton.OnShadowColorSet
// (Event, Public, BlueprintEvent)

void UFortProgressArrowButton::OnShadowColorSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShadowColorSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortProgressArrowButton.UpdateArrowColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      Color                                                  (Parm, NativeAccessSpecifierPublic)
// struct FSlateColor                      HoverColor_0                                           (Parm, NativeAccessSpecifierPublic)

void UFortProgressArrowButton::UpdateArrowColor(const struct FSlateColor& Color, const struct FSlateColor& HoverColor_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateArrowColor");

	Params::FortProgressArrowButton_UpdateArrowColor Parms{};

	Parms.Color = std::move(Color);
	Parms.HoverColor_0 = std::move(HoverColor_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortProgressArrowButton_Legacy.OnArrowColorSet
// (Event, Public, BlueprintEvent)

void UFortProgressArrowButton_Legacy::OnArrowColorSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnArrowColorSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortProgressArrowButton_Legacy.OnIsInteractiveSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsInteractive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressArrowButton_Legacy::OnIsInteractiveSet(bool bIsInteractive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsInteractiveSet");

	Params::FortProgressArrowButton_Legacy_OnIsInteractiveSet Parms{};

	Parms.bIsInteractive = bIsInteractive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortProgressArrowButton_Legacy.OnShadowColorSet
// (Event, Public, BlueprintEvent)

void UFortProgressArrowButton_Legacy::OnShadowColorSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShadowColorSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortProgressArrowButton_Legacy.UpdateArrowColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      Color                                                  (Parm, NativeAccessSpecifierPublic)
// struct FSlateColor                      HoverColor_0                                           (Parm, NativeAccessSpecifierPublic)

void UFortProgressArrowButton_Legacy::UpdateArrowColor(const struct FSlateColor& Color, const struct FSlateColor& HoverColor_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateArrowColor");

	Params::FortProgressArrowButton_Legacy_UpdateArrowColor Parms{};

	Parms.Color = std::move(Color);
	Parms.HoverColor_0 = std::move(HoverColor_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestExpiresWidget.OnQuestExpirationUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortQuestExpiresWidget::OnQuestExpirationUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQuestExpirationUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestExpiresWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   InItem                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestExpiresWidget::SetData(class UFortQuestItem* InItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetData");

	Params::FortQuestExpiresWidget_SetData Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapCosmeticListWidget.UpdateCosmeticListDisplay
// (Event, Public, BlueprintEvent)

void UFortQuestMapCosmeticListWidget::UpdateCosmeticListDisplay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCosmeticListDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapCosmeticListWidget.GetDisplayItemDefs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItemDefinition*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItemDefinition*> UFortQuestMapCosmeticListWidget::GetDisplayItemDefs() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDisplayItemDefs");

	Params::FortQuestMapCosmeticListWidget_GetDisplayItemDefs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapDetailsPanelBase.HandleQuestsUpdatedInternal
// (Final, Native, Private)

void UFortQuestMapDetailsPanelBase::HandleQuestsUpdatedInternal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestsUpdatedInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapDetailsPanelBase.SetQuestToDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItemDefinition*         QuestDef                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapDetailsPanelBase::SetQuestToDisplay(class UFortQuestItemDefinition* QuestDef)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetQuestToDisplay");

	Params::FortQuestMapDetailsPanelBase_SetQuestToDisplay Parms{};

	Parms.QuestDef = QuestDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapDetailsPanelBase.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapDetailsPanelBase::SetScrollWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetScrollWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.DeactivateCallout
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::DeactivateCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeactivateCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.OnActivatePlayAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout::OnActivatePlayAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivatePlayAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.OnDeactivatePlayAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout::OnDeactivatePlayAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDeactivatePlayAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.OnEventIndexChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout::OnEventIndexChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventIndexChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.OnPlayFadeAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFadeOut                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout::OnPlayFadeAnimation(bool bIsFadeOut)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayFadeAnimation");

	Params::FortQuestMapEventCallout_OnPlayFadeAnimation Parms{};

	Parms.bIsFadeOut = bIsFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.OnResetCallout
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout::OnResetCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnResetCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.PlayFadeIn
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::PlayFadeIn()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.PlayFadeOut
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::PlayFadeOut()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.ResetCallout
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::ResetCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.SetIsExpanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Expanded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout::SetIsExpanded(bool Expanded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsExpanded");

	Params::FortQuestMapEventCallout_SetIsExpanded Parms{};

	Parms.Expanded = Expanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.SetIsFaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Faded                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout::SetIsFaded(bool Faded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsFaded");

	Params::FortQuestMapEventCallout_SetIsFaded Parms{};

	Parms.Faded = Faded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.UpdateActiveEvents
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::UpdateActiveEvents()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateActiveEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.UpdateCalloutData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout::UpdateCalloutData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCalloutData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.UpdateGoButtonBangState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bClear                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout::UpdateGoButtonBangState(bool bClear)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateGoButtonBangState");

	Params::FortQuestMapEventCallout_UpdateGoButtonBangState Parms{};

	Parms.bClear = bClear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.GetEventCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortQuestMapEventCallout::GetEventCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEventCount");

	Params::FortQuestMapEventCallout_GetEventCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.GetIsExpanded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout::GetIsExpanded() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsExpanded");

	Params::FortQuestMapEventCallout_GetIsExpanded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.GetIsFaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout::GetIsFaded() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsFaded");

	Params::FortQuestMapEventCallout_GetIsFaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.GetRequiredQuestForCurrentEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortQuestMapEventCallout::GetRequiredQuestForCurrentEvent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRequiredQuestForCurrentEvent");

	Params::FortQuestMapEventCallout_GetRequiredQuestForCurrentEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout.IsCurrentEventUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout::IsCurrentEventUnlocked() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCurrentEventUnlocked");

	Params::FortQuestMapEventCallout_IsCurrentEventUnlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.DeactivateCallout
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::DeactivateCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeactivateCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.OnActivatePlayAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout_Legacy::OnActivatePlayAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivatePlayAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.OnDeactivatePlayAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout_Legacy::OnDeactivatePlayAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDeactivatePlayAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.OnEventIndexChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout_Legacy::OnEventIndexChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventIndexChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.OnPlayFadeAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFadeOut                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout_Legacy::OnPlayFadeAnimation(bool bIsFadeOut)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayFadeAnimation");

	Params::FortQuestMapEventCallout_Legacy_OnPlayFadeAnimation Parms{};

	Parms.bIsFadeOut = bIsFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.OnResetCallout
// (Event, Public, BlueprintEvent)

void UFortQuestMapEventCallout_Legacy::OnResetCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnResetCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.PlayFadeIn
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::PlayFadeIn()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.PlayFadeOut
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::PlayFadeOut()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.ResetCallout
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::ResetCallout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.SetIsExpanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Expanded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout_Legacy::SetIsExpanded(bool Expanded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsExpanded");

	Params::FortQuestMapEventCallout_Legacy_SetIsExpanded Parms{};

	Parms.Expanded = Expanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.SetIsFaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Faded                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout_Legacy::SetIsFaded(bool Faded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsFaded");

	Params::FortQuestMapEventCallout_Legacy_SetIsFaded Parms{};

	Parms.Faded = Faded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.UpdateActiveEvents
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::UpdateActiveEvents()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateActiveEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.UpdateCalloutData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapEventCallout_Legacy::UpdateCalloutData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCalloutData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.UpdateGoButtonBangState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bClear                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapEventCallout_Legacy::UpdateGoButtonBangState(bool bClear)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateGoButtonBangState");

	Params::FortQuestMapEventCallout_Legacy_UpdateGoButtonBangState Parms{};

	Parms.bClear = bClear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.GetEventCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortQuestMapEventCallout_Legacy::GetEventCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEventCount");

	Params::FortQuestMapEventCallout_Legacy_GetEventCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.GetIsExpanded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout_Legacy::GetIsExpanded() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsExpanded");

	Params::FortQuestMapEventCallout_Legacy_GetIsExpanded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.GetIsFaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout_Legacy::GetIsFaded() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsFaded");

	Params::FortQuestMapEventCallout_Legacy_GetIsFaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.GetRequiredQuestForCurrentEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortQuestMapEventCallout_Legacy::GetRequiredQuestForCurrentEvent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRequiredQuestForCurrentEvent");

	Params::FortQuestMapEventCallout_Legacy_GetRequiredQuestForCurrentEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapEventCallout_Legacy.IsCurrentEventUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapEventCallout_Legacy::IsCurrentEventUnlocked() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCurrentEventUnlocked");

	Params::FortQuestMapEventCallout_Legacy_IsCurrentEventUnlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapNodeLayout.HandleQuestButtonSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButtonBase*                SelectedQuestButton                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout::HandleQuestButtonSelected(class UCommonButtonBase* SelectedQuestButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestButtonSelected");

	Params::FortQuestMapNodeLayout_HandleQuestButtonSelected Parms{};

	Parms.SelectedQuestButton = SelectedQuestButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapNodeLayout.HandleQuestIndexSelectionModelIndexChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bUpdateButtonSelection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout::HandleQuestIndexSelectionModelIndexChanged(bool bUpdateButtonSelection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestIndexSelectionModelIndexChanged");

	Params::FortQuestMapNodeLayout_HandleQuestIndexSelectionModelIndexChanged Parms{};

	Parms.bUpdateButtonSelection = bUpdateButtonSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapNodeLayout_Legacy.HandleQuestButtonSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButtonLegacy*              SelectedQuestButton                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout_Legacy::HandleQuestButtonSelected(class UCommonButtonLegacy* SelectedQuestButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestButtonSelected");

	Params::FortQuestMapNodeLayout_Legacy_HandleQuestButtonSelected Parms{};

	Parms.SelectedQuestButton = SelectedQuestButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapNodeLayout_Legacy.HandleQuestIndexSelectionModelIndexChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bUpdateButtonSelection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout_Legacy::HandleQuestIndexSelectionModelIndexChanged(bool bUpdateButtonSelection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestIndexSelectionModelIndexChanged");

	Params::FortQuestMapNodeLayout_Legacy_HandleQuestIndexSelectionModelIndexChanged Parms{};

	Parms.bUpdateButtonSelection = bUpdateButtonSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile.HandleQuestDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapQuestTile::HandleQuestDataChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile.HandleSelectedChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapQuestTile::HandleSelectedChange(bool Selected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectedChange");

	Params::FortQuestMapQuestTile_HandleSelectedChange Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile.GetQuestNodeData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         QuestItemDefinition                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortQuestMapNode                NodeData                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortQuestMapQuestTile::GetQuestNodeData(class UFortQuestItemDefinition** QuestItemDefinition, struct FFortQuestMapNode* NodeData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetQuestNodeData");

	Params::FortQuestMapQuestTile_GetQuestNodeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (QuestItemDefinition != nullptr)
		*QuestItemDefinition = Parms.QuestItemDefinition;

	if (NodeData != nullptr)
		*NodeData = std::move(Parms.NodeData);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile_Legacy.HandleQuestDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapQuestTile_Legacy::HandleQuestDataChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile_Legacy.HandleSelectedChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapQuestTile_Legacy::HandleSelectedChange(bool Selected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectedChange");

	Params::FortQuestMapQuestTile_Legacy_HandleSelectedChange Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapQuestTile_Legacy.GetQuestNodeData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         QuestItemDefinition                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortQuestMapNode                NodeData                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortQuestMapQuestTile_Legacy::GetQuestNodeData(class UFortQuestItemDefinition** QuestItemDefinition, struct FFortQuestMapNode* NodeData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetQuestNodeData");

	Params::FortQuestMapQuestTile_Legacy_GetQuestNodeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (QuestItemDefinition != nullptr)
		*QuestItemDefinition = Parms.QuestItemDefinition;

	if (NodeData != nullptr)
		*NodeData = std::move(Parms.NodeData);
}


// Function SaveTheWorldUI.FortQuestMapScreen.CheckForNewMainQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::CheckForNewMainQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckForNewMainQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.ClaimQuestRewards
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::ClaimQuestRewards(const class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClaimQuestRewards");

	Params::FortQuestMapScreen_ClaimQuestRewards Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleBackInputAction
// (Event, Protected, BlueprintEvent)

void UFortQuestMapScreen::HandleBackInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBackInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleEventCalloutDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::HandleEventCalloutDataChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEventCalloutDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleEventQuestMapActivate
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::HandleEventQuestMapActivate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEventQuestMapActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleMapModeSwitch
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::HandleMapModeSwitch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMapModeSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleMapViewerNavigationRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewerNavigationDirection              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::HandleMapViewerNavigationRequest(EViewerNavigationDirection Direction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMapViewerNavigationRequest");

	Params::FortQuestMapScreen_HandleMapViewerNavigationRequest Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleQuestDetailsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestDefinition                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::HandleQuestDetailsUpdated(class UFortQuestItem* QuestDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestDetailsUpdated");

	Params::FortQuestMapScreen_HandleQuestDetailsUpdated Parms{};

	Parms.QuestDefinition = QuestDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleQuestIndexSelectionModelChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bUpdateButtonSelection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::HandleQuestIndexSelectionModelChanged(bool bUpdateButtonSelection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestIndexSelectionModelChanged");

	Params::FortQuestMapScreen_HandleQuestIndexSelectionModelChanged Parms{};

	Parms.bUpdateButtonSelection = bUpdateButtonSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.HandleQuestPageChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::HandleQuestPageChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestPageChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.InitializeQuestData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::InitializeQuestData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeQuestData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.IsEventFlagActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           EventFlag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::IsEventFlagActive(const class FString& EventFlag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsEventFlagActive");

	Params::FortQuestMapScreen_IsEventFlagActive Parms{};

	Parms.EventFlag = std::move(EventFlag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen.OnEventCalloutButtonClicked
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::OnEventCalloutButtonClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventCalloutButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.OnEventCalloutExpandChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::OnEventCalloutExpandChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventCalloutExpandChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.OnShowCurrentQuestInputActionValueChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen::OnShowCurrentQuestInputActionValueChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowCurrentQuestInputActionValueChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.SetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBeyondCutoff                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetBeyondCutoffQuest(bool bBeyondCutoff)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBeyondCutoffQuest");

	Params::FortQuestMapScreen_SetBeyondCutoffQuest Parms{};

	Parms.bBeyondCutoff = bBeyondCutoff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.SetIgnorePageNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIgnoreNavigation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetIgnorePageNavigation(bool bIgnoreNavigation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIgnorePageNavigation");

	Params::FortQuestMapScreen_SetIgnorePageNavigation Parms{};

	Parms.bIgnoreNavigation = bIgnoreNavigation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.SetQuestMapViewer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestMapViewer*              Value                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetQuestMapViewer(class UFortQuestMapViewer* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetQuestMapViewer");

	Params::FortQuestMapScreen_SetQuestMapViewer Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.ShowModalNews
// (Final, Native, Protected, BlueprintCallable)

void UFortQuestMapScreen::ShowModalNews()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowModalNews");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.ShowQuestLog
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::ShowQuestLog(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowQuestLog");

	Params::FortQuestMapScreen_ShowQuestLog Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.ToggleQuestMapState
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::ToggleQuestMapState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleQuestMapState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen.UpdateInputActionStates
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bShowingCallout                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::UpdateInputActionStates(bool bShowingCallout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateInputActionStates");

	Params::FortQuestMapScreen_UpdateInputActionStates Parms{};

	Parms.bShowingCallout = bShowingCallout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.UpdateQuestMapMode
// (Event, Public, BlueprintEvent)
// Parameters:
// EQuestMapScreenMode                     QuestMapMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::UpdateQuestMapMode(EQuestMapScreenMode QuestMapMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateQuestMapMode");

	Params::FortQuestMapScreen_UpdateQuestMapMode Parms{};

	Parms.QuestMapMode = QuestMapMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen.GetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::GetBeyondCutoffQuest() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeyondCutoffQuest");

	Params::FortQuestMapScreen_GetBeyondCutoffQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen.GetCurrentPageCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFrontEndCamera                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFrontEndCamera UFortQuestMapScreen::GetCurrentPageCameraMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPageCameraMode");

	Params::FortQuestMapScreen_GetCurrentPageCameraMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen.IsBeyondQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         QuestDef                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::IsBeyondQuest(class UFortQuestItemDefinition* QuestDef) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsBeyondQuest");

	Params::FortQuestMapScreen_IsBeyondQuest Parms{};

	Parms.QuestDef = QuestDef;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.CheckForNewMainQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen_Legacy::CheckForNewMainQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckForNewMainQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleEventCalloutDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen_Legacy::HandleEventCalloutDataChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEventCalloutDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleEventQuestMapActivate
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen_Legacy::HandleEventQuestMapActivate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEventQuestMapActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleMapModeSwitch
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen_Legacy::HandleMapModeSwitch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMapModeSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleMapViewerNavigationRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewerNavigationDirection              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::HandleMapViewerNavigationRequest(EViewerNavigationDirection Direction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMapViewerNavigationRequest");

	Params::FortQuestMapScreen_Legacy_HandleMapViewerNavigationRequest Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleQuestDetailsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestDefinition                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::HandleQuestDetailsUpdated(class UFortQuestItem* QuestDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestDetailsUpdated");

	Params::FortQuestMapScreen_Legacy_HandleQuestDetailsUpdated Parms{};

	Parms.QuestDefinition = QuestDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleQuestIndexSelectionModelChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bUpdateButtonSelection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::HandleQuestIndexSelectionModelChanged(bool bUpdateButtonSelection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestIndexSelectionModelChanged");

	Params::FortQuestMapScreen_Legacy_HandleQuestIndexSelectionModelChanged Parms{};

	Parms.bUpdateButtonSelection = bUpdateButtonSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleQuestPageChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen_Legacy::HandleQuestPageChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestPageChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.HandleRequestCurrentQuestNavigation
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen_Legacy::HandleRequestCurrentQuestNavigation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRequestCurrentQuestNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.InitializeQuestData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen_Legacy::InitializeQuestData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeQuestData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.IsEventFlagActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           EventFlag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen_Legacy::IsEventFlagActive(const class FString& EventFlag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsEventFlagActive");

	Params::FortQuestMapScreen_Legacy_IsEventFlagActive Parms{};

	Parms.EventFlag = std::move(EventFlag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.OnEventCalloutButtonClicked
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen_Legacy::OnEventCalloutButtonClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventCalloutButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.OnEventCalloutExpandChanged
// (Event, Public, BlueprintEvent)

void UFortQuestMapScreen_Legacy::OnEventCalloutExpandChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventCalloutExpandChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.SetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBeyondCutoff                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::SetBeyondCutoffQuest(bool bBeyondCutoff)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBeyondCutoffQuest");

	Params::FortQuestMapScreen_Legacy_SetBeyondCutoffQuest Parms{};

	Parms.bBeyondCutoff = bBeyondCutoff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.SetFindCurrentActionVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputActionState                       ActionVisibility                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::SetFindCurrentActionVisibility(EInputActionState ActionVisibility)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFindCurrentActionVisibility");

	Params::FortQuestMapScreen_Legacy_SetFindCurrentActionVisibility Parms{};

	Parms.ActionVisibility = ActionVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.SetIgnorePageNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIgnoreNavigation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::SetIgnorePageNavigation(bool bIgnoreNavigation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIgnorePageNavigation");

	Params::FortQuestMapScreen_Legacy_SetIgnorePageNavigation Parms{};

	Parms.bIgnoreNavigation = bIgnoreNavigation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.SetQuestMapViewer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestMapViewer_Legacy*       Value                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::SetQuestMapViewer(class UFortQuestMapViewer_Legacy* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetQuestMapViewer");

	Params::FortQuestMapScreen_Legacy_SetQuestMapViewer Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.ToggleQuestMapState
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen_Legacy::ToggleQuestMapState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleQuestMapState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.UpdateQuestMapMode
// (Event, Public, BlueprintEvent)
// Parameters:
// EQuestMapScreenMode                     QuestMapMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen_Legacy::UpdateQuestMapMode(EQuestMapScreenMode QuestMapMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateQuestMapMode");

	Params::FortQuestMapScreen_Legacy_UpdateQuestMapMode Parms{};

	Parms.QuestMapMode = QuestMapMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.GetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen_Legacy::GetBeyondCutoffQuest() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeyondCutoffQuest");

	Params::FortQuestMapScreen_Legacy_GetBeyondCutoffQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.GetCurrentPageCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFrontEndCamera                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFrontEndCamera UFortQuestMapScreen_Legacy::GetCurrentPageCameraMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPageCameraMode");

	Params::FortQuestMapScreen_Legacy_GetCurrentPageCameraMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapScreen_Legacy.IsBeyondQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         QuestDef                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen_Legacy::IsBeyondQuest(class UFortQuestItemDefinition* QuestDef) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsBeyondQuest");

	Params::FortQuestMapScreen_Legacy_IsBeyondQuest Parms{};

	Parms.QuestDef = QuestDef;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestMapViewer_Legacy.HandleLayoutOutroAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer_Legacy::HandleLayoutOutroAnimationFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLayoutOutroAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapViewer_Legacy.OnPlayLayoutFadeInAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapViewer_Legacy::OnPlayLayoutFadeInAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayLayoutFadeInAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestMapViewer_Legacy.OnPlayLayoutOutroAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// EViewerNavigationDirection              TravelDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapViewer_Legacy::OnPlayLayoutOutroAnimation(EViewerNavigationDirection TravelDirection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayLayoutOutroAnimation");

	Params::FortQuestMapViewer_Legacy_OnPlayLayoutOutroAnimation Parms{};

	Parms.TravelDirection = TravelDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapViewer_Legacy.OnTryUpdateUserWidgetColor
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateColor                      OverrideColor                                          (Parm, NativeAccessSpecifierPublic)

void UFortQuestMapViewer_Legacy::OnTryUpdateUserWidgetColor(class UUserWidget* Widget, const struct FSlateColor& OverrideColor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTryUpdateUserWidgetColor");

	Params::FortQuestMapViewer_Legacy_OnTryUpdateUserWidgetColor Parms{};

	Parms.Widget = Widget;
	Parms.OverrideColor = std::move(OverrideColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestMapViewer_Legacy.UpdateViewerData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer_Legacy::UpdateViewerData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateViewerData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.AttemptToPlayQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestPlayButton::AttemptToPlayQuest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AttemptToPlayQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.HandleLobbyDisconnected
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandleLobbyDisconnected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLobbyDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.HandleMatchmakingComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// EMatchmakingCompleteResult              Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestPlayButton::HandleMatchmakingComplete(EMatchmakingCompleteResult Result)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMatchmakingComplete");

	Params::FortQuestPlayButton_HandleMatchmakingComplete Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestPlayButton.HandleMatchmakingStarted
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandleMatchmakingStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMatchmakingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.HandlePlayerStateChanged
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandlePlayerStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePlayerStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.OnContentMissing
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::OnContentMissing()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnContentMissing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestPlayButton.CanPlayQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestPlayButton::CanPlayQuest() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPlayQuest");

	Params::FortQuestPlayButton_CanPlayQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget.HandleQuestsUpdated
// (Final, Native, Protected)

void UFortQuestTreeItemWidget::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget.OnQuestsUpdated
// (Event, Protected, BlueprintEvent)

void UFortQuestTreeItemWidget::OnQuestsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget.SetupAsCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestCategory*               category                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget::SetupAsCategory(class UFortQuestCategory* category)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsCategory");

	Params::FortQuestTreeItemWidget_SetupAsCategory Parms{};

	Parms.category = category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget.SetupAsQuest
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   category                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget::SetupAsQuest(class UFortQuestItem* category)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsQuest");

	Params::FortQuestTreeItemWidget_SetupAsQuest Parms{};

	Parms.category = category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget_Legacy.HandleQuestsUpdated
// (Final, Native, Protected)

void UFortQuestTreeItemWidget_Legacy::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget_Legacy.OnQuestsUpdated
// (Event, Protected, BlueprintEvent)

void UFortQuestTreeItemWidget_Legacy::OnQuestsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget_Legacy.SetupAsCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestCategory*               category                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget_Legacy::SetupAsCategory(class UFortQuestCategory* category)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsCategory");

	Params::FortQuestTreeItemWidget_Legacy_SetupAsCategory Parms{};

	Parms.category = category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestTreeItemWidget_Legacy.SetupAsQuest
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   category                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget_Legacy::SetupAsQuest(class UFortQuestItem* category)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAsQuest");

	Params::FortQuestTreeItemWidget_Legacy_SetupAsQuest Parms{};

	Parms.category = category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen.AttemptToPlayQuest
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestScreen::AttemptToPlayQuest(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AttemptToPlayQuest");

	Params::FortQuestScreen_AttemptToPlayQuest Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleAbandonQuestAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleAbandonQuestAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleAbandonQuestAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleBackAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleBackAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleBackAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleClaimRewardAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleClaimRewardAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleClaimRewardAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandlePinQuestAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandlePinQuestAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandlePinQuestAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandlePlayQuestAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandlePlayQuestAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandlePlayQuestAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleReplayIntroAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleReplayIntroAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleReplayIntroAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleReplayOutroAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleReplayOutroAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleReplayOutroAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleStopConversationAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleStopConversationAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleStopConversationAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_HandleUnpinQuestAction
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::BP_HandleUnpinQuestAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleUnpinQuestAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.BP_SetInitialQuestToSelect
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestScreen::BP_SetInitialQuestToSelect(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_SetInitialQuestToSelect");

	Params::FortQuestScreen_BP_SetInitialQuestToSelect Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen.OnContentMissing
// (Event, Protected, BlueprintEvent)

void UFortQuestScreen::OnContentMissing()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnContentMissing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.ProcessPendingSeenQuestItems
// (Final, Native, Private, BlueprintCallable)

void UFortQuestScreen::ProcessPendingSeenQuestItems()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ProcessPendingSeenQuestItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortQuestScreen.SetDisableClaimRewardButton
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bToDisable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestScreen::SetDisableClaimRewardButton(bool bToDisable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisableClaimRewardButton");

	Params::FortQuestScreen_SetDisableClaimRewardButton Parms{};

	Parms.bToDisable = bToDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen.SetInputActionStates
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsQuestAudioPlaying                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldShowPlayQuest                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAreQuestItemsDifferent                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestScreen::SetInputActionStates(const class UFortQuestItem* QuestItem, const bool bIsQuestAudioPlaying, const bool bShouldShowPlayQuest, const bool bAreQuestItemsDifferent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInputActionStates");

	Params::FortQuestScreen_SetInputActionStates Parms{};

	Parms.QuestItem = QuestItem;
	Parms.bIsQuestAudioPlaying = bIsQuestAudioPlaying;
	Parms.bShouldShowPlayQuest = bShouldShowPlayQuest;
	Parms.bAreQuestItemsDifferent = bAreQuestItemsDifferent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen.TriggerClaimRewardEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestScreen::TriggerClaimRewardEvent(const class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TriggerClaimRewardEvent");

	Params::FortQuestScreen_TriggerClaimRewardEvent Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortQuestScreen_Legacy.ProcessPendingSeenQuestItems
// (Final, Native, Private, BlueprintCallable)

void UFortQuestScreen_Legacy::ProcessPendingSeenQuestItems()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ProcessPendingSeenQuestItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchMenuBase.GetClaimableResearchPointEstimate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchMenuBase::GetClaimableResearchPointEstimate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClaimableResearchPointEstimate");

	Params::FortResearchMenuBase_GetClaimableResearchPointEstimate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchMenuBase.OnPurchaseResearchLevelCompleted
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnPurchaseResearchLevelCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseResearchLevelCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchMenuBase.OnPurchaseResearchLevelStarted
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnPurchaseResearchLevelStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseResearchLevelStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchMenuBase.OnUseResearchRespecTokenComplete
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnUseResearchRespecTokenComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUseResearchRespecTokenComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchMenuBase.RequestPurchaseResearchLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           StatId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResearchMenuBase::RequestPurchaseResearchLevel(const class FString& StatId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestPurchaseResearchLevel");

	Params::FortResearchMenuBase_RequestPurchaseResearchLevel Parms{};

	Parms.StatId = std::move(StatId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortResearchMenuBase.UseResearchRespecToken
// (Final, Native, Protected, BlueprintCallable)

void UFortResearchMenuBase::UseResearchRespecToken()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UseResearchRespecToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchMenuBase.AreResearchRespecTokensAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResearchMenuBase::AreResearchRespecTokensAvailable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreResearchRespecTokensAvailable");

	Params::FortResearchMenuBase_AreResearchRespecTokensAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchMenuBase.GetResearchRespecTokenCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchMenuBase::GetResearchRespecTokenCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetResearchRespecTokenCount");

	Params::FortResearchMenuBase_GetResearchRespecTokenCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.OnStatChanged
// (Event, Protected, BlueprintEvent)

void UFortResearchStatTileWidget::OnStatChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStatChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetCostToIncreaseStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCostToIncreaseStat() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCostToIncreaseStat");

	Params::FortResearchStatTileWidget_GetCostToIncreaseStat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetCurrentCombinedStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentCombinedStatValue() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentCombinedStatValue");

	Params::FortResearchStatTileWidget_GetCurrentCombinedStatValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetCurrentPersonalStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentPersonalStatValue() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPersonalStatValue");

	Params::FortResearchStatTileWidget_GetCurrentPersonalStatValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetCurrentResearchLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentResearchLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentResearchLevel");

	Params::FortResearchStatTileWidget_GetCurrentResearchLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetCurrentTeamStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentTeamStatValue() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentTeamStatValue");

	Params::FortResearchStatTileWidget_GetCurrentTeamStatValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetNextCombinedStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextCombinedStatValueDelta() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextCombinedStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextCombinedStatValueDelta Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetNextPersonalStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextPersonalStatValueDelta() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextPersonalStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextPersonalStatValueDelta Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetNextTeamStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextTeamStatValueDelta() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextTeamStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextTeamStatValueDelta Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetPersonalStatType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortStatType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortStatType UFortResearchStatTileWidget::GetPersonalStatType() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPersonalStatType");

	Params::FortResearchStatTileWidget_GetPersonalStatType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.GetStatIdName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UFortResearchStatTileWidget::GetStatIdName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStatIdName");

	Params::FortResearchStatTileWidget_GetStatIdName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortResearchStatTileWidget.IsAtMaxResearchLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResearchStatTileWidget::IsAtMaxResearchLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAtMaxResearchLevel");

	Params::FortResearchStatTileWidget_IsAtMaxResearchLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDailyRewards.SetupDailyRewards
// (Event, Public, BlueprintEvent)

void UFortDailyRewards::SetupDailyRewards()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupDailyRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortDailyRewards.TryClaimDailyRewards
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDailyRewards::TryClaimDailyRewards()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryClaimDailyRewards");

	Params::FortDailyRewards_TryClaimDailyRewards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDailyRewards.TryGetDailyRewardsData
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDailyRewardsData            OutDailyRewardsData                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ItemCardsPerSchedule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinEpicRewards                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDailyRewards::TryGetDailyRewardsData(struct FFortDailyRewardsData* OutDailyRewardsData, int32 ItemCardsPerSchedule, int32 MinEpicRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetDailyRewardsData");

	Params::FortDailyRewards_TryGetDailyRewardsData Parms{};

	Parms.ItemCardsPerSchedule = ItemCardsPerSchedule;
	Parms.MinEpicRewards = MinEpicRewards;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDailyRewardsData != nullptr)
		*OutDailyRewardsData = std::move(Parms.OutDailyRewardsData);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortRewardNotificationData.GetIconBrush
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      IconBrush                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardNotificationData::GetIconBrush(struct FSlateBrush* IconBrush, EFortBrushSize BrushSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIconBrush");

	Params::FortRewardNotificationData_GetIconBrush Parms{};

	Parms.BrushSize = BrushSize;

	UObject::ProcessEvent(Func, &Parms);

	if (IconBrush != nullptr)
		*IconBrush = std::move(Parms.IconBrush);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.AddInputActionHandler
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool* bPassThrough)>     CommittedEvent                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::AddInputActionHandler(class UDataTable* DataTable, class FName RowName, TDelegate<void(bool* bPassThrough)> CommittedEvent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddInputActionHandler");

	Params::FortRewardNotificationSubWidget_AddInputActionHandler Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;
	Parms.CommittedEvent = CommittedEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortRewardNotificationWidget*    MainWidget                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::Init(class UFortRewardNotificationWidget* MainWidget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Init");

	Params::FortRewardNotificationSubWidget_Init Parms{};

	Parms.MainWidget = MainWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.InspectItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   QuantityOverride                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::InspectItem(class UFortItem* ItemToInspect, int32 QuantityOverride)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InspectItem");

	Params::FortRewardNotificationSubWidget_InspectItem Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.QuantityOverride = QuantityOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.IsPrimaryActionEnabled
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::IsPrimaryActionEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPrimaryActionEnabled");

	Params::FortRewardNotificationSubWidget_IsPrimaryActionEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.IsPrimaryActionHidden
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bHidden                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::IsPrimaryActionHidden(bool* bHidden)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPrimaryActionHidden");

	Params::FortRewardNotificationSubWidget_IsPrimaryActionHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHidden != nullptr)
		*bHidden = Parms.bHidden;
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnDeactivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnNavigationDown
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationDown()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnNavigationLeft
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnNavigationRight
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationRight()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnNavigationUp
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationUp()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.OnPrimaryAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnPrimaryAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrimaryAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.RemoveAllInputActionHandlers
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationSubWidget::RemoveAllInputActionHandlers()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllInputActionHandlers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.RemoveInputActionHandler
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              InputActionRow                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::RemoveInputActionHandler(const struct FDataTableRowHandle& InputActionRow)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveInputActionHandler");

	Params::FortRewardNotificationSubWidget_RemoveInputActionHandler Parms{};

	Parms.InputActionRow = std::move(InputActionRow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.SetInputActionHandlerState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputActionState                       State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetInputActionHandlerState(class UDataTable* DataTable, class FName RowName, EInputActionState State)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInputActionHandlerState");

	Params::FortRewardNotificationSubWidget_SetInputActionHandlerState Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.SetPrimaryActionEnabled
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetPrimaryActionEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionEnabled");

	Params::FortRewardNotificationSubWidget_SetPrimaryActionEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.SetPrimaryActionHidden
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationSubWidget::SetPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.SetPrimaryActionText
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetPrimaryActionText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionText");

	Params::FortRewardNotificationSubWidget_SetPrimaryActionText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.TransitionIn
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationSubWidget::TransitionIn()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TransitionIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.TransitionInBegin
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationSubWidget::TransitionInBegin()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TransitionInBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.TransitionOut
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationSubWidget::TransitionOut()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TransitionOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationSubWidget.TransitionOutBegin
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationSubWidget::TransitionOutBegin()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TransitionOutBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardConversationWidget.GetDataFromSentence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       TalkingHeadTexture                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardConversationWidget::GetDataFromSentence(const struct FFortConversationSentence& Sentence, class FText* Text, class UTexture2D** TalkingHeadTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDataFromSentence");

	Params::FortRewardConversationWidget_GetDataFromSentence Parms{};

	Parms.Sentence = std::move(Sentence);

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (TalkingHeadTexture != nullptr)
		*TalkingHeadTexture = Parms.TalkingHeadTexture;
}


// Function SaveTheWorldUI.FortRewardConversationWidget.IsValidConversation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConversation*                Conversation                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardConversationWidget::IsValidConversation(const class UFortConversation* Conversation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsValidConversation");

	Params::FortRewardConversationWidget_IsValidConversation Parms{};

	Parms.Conversation = Conversation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortRewardExpeditionWidget.CollectExpedition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardExpeditionWidget::CollectExpedition(class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CollectExpedition");

	Params::FortRewardExpeditionWidget_CollectExpedition Parms{};

	Parms.Expedition = Expedition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardExpeditionWidget.OnCollectExpeditionCompleted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardExpeditionWidget::OnCollectExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSucceeded, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollectExpeditionCompleted");

	Params::FortRewardExpeditionWidget_OnCollectExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSucceeded = bSucceeded;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNewQuestWidget.GetDataFromSentence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       TalkingHeadTexture                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNewQuestWidget::GetDataFromSentence(const struct FFortConversationSentence& Sentence, class FText* Text, class UTexture2D** TalkingHeadTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDataFromSentence");

	Params::FortRewardNewQuestWidget_GetDataFromSentence Parms{};

	Parms.Sentence = std::move(Sentence);

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (TalkingHeadTexture != nullptr)
		*TalkingHeadTexture = Parms.TalkingHeadTexture;
}


// Function SaveTheWorldUI.FortRewardNewQuestWidget.IsValidConversation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConversation*                Conversation                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardNewQuestWidget::IsValidConversation(const class UFortConversation* Conversation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsValidConversation");

	Params::FortRewardNewQuestWidget_IsValidConversation Parms{};

	Parms.Conversation = Conversation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddCollectionBookData
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortCollectionBookRewards       CollectionBookRewards                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddCollectionBookData(const struct FFortCollectionBookRewards& CollectionBookRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddCollectionBookData");

	Params::FortRewardNotificationWidget_AddCollectionBookData Parms{};

	Parms.CollectionBookRewards = std::move(CollectionBookRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddDifficultyIncreaseRewardData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddDifficultyIncreaseRewardData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddDifficultyIncreaseRewardData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddEpicQuestData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddEpicQuestData(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddEpicQuestData");

	Params::FortRewardNotificationWidget_AddEpicQuestData Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddExpeditionData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              ExpeditionItem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddExpeditionData(class UFortExpeditionItem* ExpeditionItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddExpeditionData");

	Params::FortRewardNotificationWidget_AddExpeditionData Parms{};

	Parms.ExpeditionItem = ExpeditionItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddGiftBoxData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddGiftBoxData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddGiftBoxData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddItemCacheRewardData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemCache                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddItemCacheRewardData(class UFortItem* ItemCache)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddItemCacheRewardData");

	Params::FortRewardNotificationWidget_AddItemCacheRewardData Parms{};

	Parms.ItemCache = ItemCache;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddMissionAlertData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddMissionAlertData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMissionAlertData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddMissionData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddMissionData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMissionData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddPhoenixLevelUpRewardData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddPhoenixLevelUpRewardData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddPhoenixLevelUpRewardData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.AddQuestData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddQuestData(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddQuestData");

	Params::FortRewardNotificationWidget_AddQuestData Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.BeginCloseRewardsScreen
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationWidget::BeginCloseRewardsScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BeginCloseRewardsScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnCollectionBookRewardClaimed
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FFortCollectionBookRewards       RewardClaimed                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>ActualRewards                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnCollectionBookRewardClaimed(const struct FFortCollectionBookRewards& RewardClaimed, bool bSuccess, const TArray<struct FFortItemInstanceQuantityPair>& ActualRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnCollectionBookRewardClaimed");

	Params::FortRewardNotificationWidget_HandleOnCollectionBookRewardClaimed Parms{};

	Parms.RewardClaimed = std::move(RewardClaimed);
	Parms.bSuccess = bSuccess;
	Parms.ActualRewards = std::move(ActualRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnDifficultyIncreaseRewardsClaimed
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>DifficultyRewards                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnDifficultyIncreaseRewardsClaimed(const TArray<struct FFortItemInstanceQuantityPair>& DifficultyRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnDifficultyIncreaseRewardsClaimed");

	Params::FortRewardNotificationWidget_HandleOnDifficultyIncreaseRewardsClaimed Parms{};

	Parms.DifficultyRewards = std::move(DifficultyRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnDifficultyIncreaseRewardsClaimFailed
// (Final, Native, Private)

void UFortRewardNotificationWidget::HandleOnDifficultyIncreaseRewardsClaimFailed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnDifficultyIncreaseRewardsClaimFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnItemCacheRewardsClaimed
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ClaimedRewards                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnItemCacheRewardsClaimed(const TArray<struct FFortItemInstanceQuantityPair>& ClaimedRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnItemCacheRewardsClaimed");

	Params::FortRewardNotificationWidget_HandleOnItemCacheRewardsClaimed Parms{};

	Parms.ClaimedRewards = std::move(ClaimedRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnItemCacheRewardsClaimFailed
// (Final, Native, Private)

void UFortRewardNotificationWidget::HandleOnItemCacheRewardsClaimFailed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnItemCacheRewardsClaimFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnMissionAlertRewardsOpened
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>AlertRewards                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnMissionAlertRewardsOpened(const TArray<struct FFortItemInstanceQuantityPair>& AlertRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnMissionAlertRewardsOpened");

	Params::FortRewardNotificationWidget_HandleOnMissionAlertRewardsOpened Parms{};

	Parms.AlertRewards = std::move(AlertRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnMissionRewardsOpened
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>MissionRewards                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnMissionRewardsOpened(const TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnMissionRewardsOpened");

	Params::FortRewardNotificationWidget_HandleOnMissionRewardsOpened Parms{};

	Parms.MissionRewards = std::move(MissionRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnMissionRewardsOpenFailed
// (Final, Native, Private)

void UFortRewardNotificationWidget::HandleOnMissionRewardsOpenFailed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnMissionRewardsOpenFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnNoQuestRewardsToClaim
// (Final, Native, Private)

void UFortRewardNotificationWidget::HandleOnNoQuestRewardsToClaim()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnNoQuestRewardsToClaim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HandleOnQuestRewardClaimed
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::HandleOnQuestRewardClaimed(const class UFortQuestItem* Quest, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnQuestRewardClaimed");

	Params::FortRewardNotificationWidget_HandleOnQuestRewardClaimed Parms{};

	Parms.Quest = Quest;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortRewardNotificationWidget::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.InspectItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   QuantityOverride                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::InspectItem(class UFortItem* ItemToInspect, int32 QuantityOverride)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InspectItem");

	Params::FortRewardNotificationWidget_InspectItem Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.QuantityOverride = QuantityOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.IsPrimaryActionEnabled
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::IsPrimaryActionEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPrimaryActionEnabled");

	Params::FortRewardNotificationWidget_IsPrimaryActionEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.IsPrimaryActionHidden
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bHidden                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::IsPrimaryActionHidden(bool* bHidden)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPrimaryActionHidden");

	Params::FortRewardNotificationWidget_IsPrimaryActionHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHidden != nullptr)
		*bHidden = Parms.bHidden;
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.MarkDefaultItemsForMulch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ItemList                                               (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::MarkDefaultItemsForMulch(const TArray<struct FFortItemInstanceQuantityPair>& ItemList)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MarkDefaultItemsForMulch");

	Params::FortRewardNotificationWidget_MarkDefaultItemsForMulch Parms{};

	Parms.ItemList = std::move(ItemList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyPanelDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnMulchCompleted
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnMulchCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMulchCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnNavigationDown
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationDown()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationRight()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnNavigationUp
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationUp()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPopulateChoiceRewards
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ItemList                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPopulateChoiceRewards(const TArray<struct FFortItemInstanceQuantityPair>& ItemList)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPopulateChoiceRewards");

	Params::FortRewardNotificationWidget_OnPopulateChoiceRewards Parms{};

	Parms.ItemList = std::move(ItemList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPopulateExpeditionReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortRewardExpeditionData*        ExpeditionReward                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPopulateExpeditionReward(const class UFortRewardExpeditionData* ExpeditionReward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPopulateExpeditionReward");

	Params::FortRewardNotificationWidget_OnPopulateExpeditionReward Parms{};

	Parms.ExpeditionReward = ExpeditionReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPopulateGiftBoxReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortRewardGiftBoxData*           GiftBoxReward                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPopulateGiftBoxReward(const class UFortRewardGiftBoxData* GiftBoxReward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPopulateGiftBoxReward");

	Params::FortRewardNotificationWidget_OnPopulateGiftBoxReward Parms{};

	Parms.GiftBoxReward = GiftBoxReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPopulateNewQuestReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortRewardEpicQuestData*         QuestReward                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPopulateNewQuestReward(const class UFortRewardEpicQuestData* QuestReward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPopulateNewQuestReward");

	Params::FortRewardNotificationWidget_OnPopulateNewQuestReward Parms{};

	Parms.QuestReward = QuestReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPrimaryActionDisabled
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionDisabled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrimaryActionDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPrimaryActionEnabled
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionEnabled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrimaryActionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPrimaryActionHidden
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrimaryActionHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnPrimaryActionTextChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPrimaryActionTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrimaryActionTextChanged");

	Params::FortRewardNotificationWidget_OnPrimaryActionTextChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnRewardsClaimed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ItemList                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnRewardsClaimed(const TArray<struct FFortItemInstanceQuantityPair>& ItemList)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardsClaimed");

	Params::FortRewardNotificationWidget_OnRewardsClaimed Parms{};

	Parms.ItemList = std::move(ItemList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnRewardsClaimFailed
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnRewardsClaimFailed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardsClaimFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.OnRewardsScreenClosed
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnRewardsScreenClosed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardsScreenClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.PopulateReward
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortRewardNotificationData*      Reward                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::PopulateReward(const class UFortRewardNotificationData* Reward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PopulateReward");

	Params::FortRewardNotificationWidget_PopulateReward Parms{};

	Parms.Reward = Reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.ResetAllRewardData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::ResetAllRewardData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetAllRewardData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.SetPrimaryActionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::SetPrimaryActionEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionEnabled");

	Params::FortRewardNotificationWidget_SetPrimaryActionEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.SetPrimaryActionHidden
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationWidget::SetPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.SetPrimaryActionText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::SetPrimaryActionText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPrimaryActionText");

	Params::FortRewardNotificationWidget_SetPrimaryActionText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortRewardNotificationWidget.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortRewardNotificationWidget::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowMulchConfirmationModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSelectorButton.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSelectorButton::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSelectorButton.HandleSquadChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSelectorButton::HandleSquadChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSelectorButton.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSelectorButton::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadToManageBP");

	Params::FortSquadSelectorButton_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSelectorButton.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadSelectorButton::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadToManageBP");

	Params::FortSquadSelectorButton_GetIdOfSquadToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSelectorButton.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSelectorButton::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetStaticSquadDataBP");

	Params::FortSquadSelectorButton_TryGetStaticSquadDataBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDefenderSquadSelectorButton.TryGetPowerLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   OutPowerLevel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderSquadSelectorButton::TryGetPowerLevel(int32* OutPowerLevel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetPowerLevel");

	Params::FortDefenderSquadSelectorButton_TryGetPowerLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPowerLevel != nullptr)
		*OutPowerLevel = Parms.OutPowerLevel;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortDefenderSquadSelectorButton.TryGetTheaterUniqueId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           OutTheaterUniqueId                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutIsUnlocked                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderSquadSelectorButton::TryGetTheaterUniqueId(class FString* OutTheaterUniqueId, bool* OutIsUnlocked) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetTheaterUniqueId");

	Params::FortDefenderSquadSelectorButton_TryGetTheaterUniqueId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTheaterUniqueId != nullptr)
		*OutTheaterUniqueId = std::move(Parms.OutTheaterUniqueId);

	if (OutIsUnlocked != nullptr)
		*OutIsUnlocked = Parms.OutIsUnlocked;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.ClearSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::ClearSquad()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearSquad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleBackInputAction
// (Final, Native, Protected, BlueprintCallable)

void UFortSquadManagementScreenBase::HandleBackInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBackInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleClosePickerInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleClosePickerInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleClosePickerInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleCyclePickerSortInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleCyclePickerSortInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCyclePickerSortInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleDifferentSquadSlotSelected
// (Native, Protected)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleDifferentSquadSlotSelected(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSlotSelected");

	Params::FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleInspectInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleInspectInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleInspectInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleInventoryInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleInventoryInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleInventoryInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleManageInputAction
// (Final, Native, Protected)

void UFortSquadManagementScreenBase::HandleManageInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleManageInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleNextSquadInputAction
// (Event, Public, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleNextSquadInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleNextSquadInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleOpenSquadSlot
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleOpenSquadSlot(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOpenSquadSlot");

	Params::FortSquadManagementScreenBase_HandleOpenSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandlePickerSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandlePickerSelectionChanged(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePickerSelectionChanged");

	Params::FortSquadManagementScreenBase_HandlePickerSelectionChanged Parms{};

	Parms.SelectedItem = SelectedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandlePickerSelectionCommitted
// (Final, Native, Private)
// Parameters:
// class UFortItem*                        CommittedItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandlePickerSelectionCommitted(class UFortItem* CommittedItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePickerSelectionCommitted");

	Params::FortSquadManagementScreenBase_HandlePickerSelectionCommitted Parms{};

	Parms.CommittedItem = CommittedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandlePreviousSquadInputAction
// (Event, Public, BlueprintEvent)

void UFortSquadManagementScreenBase::HandlePreviousSquadInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePreviousSquadInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleSelectPickerSlotInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleSelectPickerSlotInputAction()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectPickerSlotInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleShouldAutoSlotSurvivorSquadsChanged
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleShouldAutoSlotSurvivorSquadsChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShouldAutoSlotSurvivorSquadsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleSquadSlotPickerHidden
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadSlotPickerHidden()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadSlotPickerHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleSquadSlotPickerShown
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadSlotPickerShown()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadSlotPickerShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleSquadStateChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.HandleViewInAll
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleViewInAll(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleViewInAll");

	Params::FortSquadManagementScreenBase_HandleViewInAll Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.NavigateToSquadSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::NavigateToSquadSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NavigateToSquadSlot");

	Params::FortSquadManagementScreenBase_NavigateToSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.SelectNextSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::SelectNextSquad()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectNextSquad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.SelectPreviousSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::SelectPreviousSquad()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectPreviousSquad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.SelectSquadWithOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::SelectSquadWithOffset(int32 Offset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectSquadWithOffset");

	Params::FortSquadManagementScreenBase_SelectSquadWithOffset Parms{};

	Parms.Offset = Offset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadToManageBP");

	Params::FortSquadManagementScreenBase_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.SetupInputHandlers
// (Native, Protected, BlueprintCallable)

void UFortSquadManagementScreenBase::SetupInputHandlers()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupInputHandlers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.ShowWarningReadOnlyWIFE
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::ShowWarningReadOnlyWIFE(bool Force)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowWarningReadOnlyWIFE");

	Params::FortSquadManagementScreenBase_ShowWarningReadOnlyWIFE Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadManagementScreenBase::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadToManageBP");

	Params::FortSquadManagementScreenBase_GetIdOfSquadToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.GetNumUnlockedSquads
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSquadManagementScreenBase::GetNumUnlockedSquads() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumUnlockedSquads");

	Params::FortSquadManagementScreenBase_GetNumUnlockedSquads Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.IsScreenWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::IsScreenWIFE() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsScreenWIFE");

	Params::FortSquadManagementScreenBase_IsScreenWIFE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.TryGetAttributeValueFromSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetAttributeValueFromSquad(float* OutValue, const struct FGameplayAttribute& Attribute) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetAttributeValueFromSquad");

	Params::FortSquadManagementScreenBase_TryGetAttributeValueFromSquad Parms{};

	Parms.Attribute = std::move(Attribute);

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.TryGetSquadMainAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               OutGameplayAttribute                                   (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetSquadMainAttribute(struct FGameplayAttribute* OutGameplayAttribute) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetSquadMainAttribute");

	Params::FortSquadManagementScreenBase_TryGetSquadMainAttribute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutGameplayAttribute != nullptr)
		*OutGameplayAttribute = std::move(Parms.OutGameplayAttribute);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.TryGetSquadTeamAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               OutGameplayAttribute                                   (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetSquadTeamAttribute(struct FGameplayAttribute* OutGameplayAttribute) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetSquadTeamAttribute");

	Params::FortSquadManagementScreenBase_TryGetSquadTeamAttribute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutGameplayAttribute != nullptr)
		*OutGameplayAttribute = std::move(Parms.OutGameplayAttribute);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadManagementScreenBase.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetStaticSquadDataBP");

	Params::FortSquadManagementScreenBase_TryGetStaticSquadDataBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortHeroSquadManagementScreen.PlayFeedbackForSlottingPerson
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCharacter*                   Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSquadManagementScreen::PlayFeedbackForSlottingPerson(class UFortCharacter* Character, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFeedbackForSlottingPerson");

	Params::FortHeroSquadManagementScreen_PlayFeedbackForSlottingPerson Parms{};

	Parms.Character = Character;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadIcon.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadIcon::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadIcon.SetSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadIcon::SetSquad(const class FName& InName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSquad");

	Params::FortSquadIcon_SetSquad Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSquadDetails.HandleAddDefenderSquadMemberBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::HandleAddDefenderSquadMemberBP(const class FName& SquadId, int32 Index_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAddDefenderSquadMemberBP");

	Params::FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP Parms{};

	Parms.SquadId = SquadId;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSquadDetails.HandleDefenderSquadInfoSetBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::HandleDefenderSquadInfoSetBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDefenderSquadInfoSetBP");

	Params::FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSquadDetails.SetDefenderSquadInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::SetDefenderSquadInfo(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDefenderSquadInfo");

	Params::FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSquadDetailsLocked.SetDefenderSquadInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetailsLocked::SetDefenderSquadInfo(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDefenderSquadInfo");

	Params::FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSummary.HandleAddDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSummary::HandleAddDefenderSquadDetailsBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAddDefenderSquadDetailsBP");

	Params::FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSummary.HandleAddLockedDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSummary::HandleAddLockedDefenderSquadDetailsBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAddLockedDefenderSquadDetailsBP");

	Params::FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageDefenderSummary.HandleClearDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)

void UFortSquadLandingPageDefenderSummary::HandleClearDefenderSquadDetailsBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleClearDefenderSquadDetailsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadLandingPageSurvivorSummary.HandleAddSetBonusSummaryLineItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortAttributeModifierAccumulationAttributeModifierAccumulation                          (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageSurvivorSummary::HandleAddSetBonusSummaryLineItemBP(const struct FFortAttributeModifierAccumulation& AttributeModifierAccumulation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAddSetBonusSummaryLineItemBP");

	Params::FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP Parms{};

	Parms.AttributeModifierAccumulation = std::move(AttributeModifierAccumulation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadLandingPageSurvivorSummary.HandleClearSetBonusSummaryLineItemsBP
// (Event, Public, BlueprintEvent)

void UFortSquadLandingPageSurvivorSummary::HandleClearSetBonusSummaryLineItemsBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleClearSetBonusSummaryLineItemsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.HandleDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.HandleSquadSlotRestrictionFactorsChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleSquadSlotRestrictionFactorsChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadSlotRestrictionFactorsChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.HandleSquadSlotStateChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleSquadSlotStateChangedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadSlotStateChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotDetailsPanel::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotDetailsPanel::SetScrollWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetScrollWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotDetailsPanel::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotDetailsPanel::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemInSquadSlotBP");

	Params::FortSquadSlotDetailsPanel_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.GetSlottingRestrictionReasons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortSquadSlottingRestrictionReason>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortSquadSlottingRestrictionReason> UFortSquadSlotDetailsPanel::GetSlottingRestrictionReasons() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlottingRestrictionReasons");

	Params::FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotDetailsPanel::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLockedBP");

	Params::FortSquadSlotDetailsPanel_IsSquadSlotLockedBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotDetailsPanel.TryGetItemToPreviewInSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        OutItemToPreviewInSlot                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotDetailsPanel::TryGetItemToPreviewInSlot(class UFortItem** OutItemToPreviewInSlot) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetItemToPreviewInSlot");

	Params::FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutItemToPreviewInSlot != nullptr)
		*OutItemToPreviewInSlot = Parms.OutItemToPreviewInSlot;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailElementWidget.HandlePostDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotItemDetailElementWidget::HandlePostDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePostDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailElementWidget.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailElementWidget::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailElementWidget.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailElementWidget::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailElementWidget.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotItemDetailElementWidget::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemInSquadSlotBP");

	Params::FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailElementWidget.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotItemDetailElementWidget::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLockedBP");

	Params::FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailsHostPanel.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailsHostPanel::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailsHostPanel.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailsHostPanel::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailsHostPanel.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotItemDetailsHostPanel::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemInSquadSlotBP");

	Params::FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotItemDetailsHostPanel.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotItemDetailsHostPanel::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLockedBP");

	Params::FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotItemPicker.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotItemPicker::CycleSortType()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CycleSortType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotItemPicker.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotItemPicker.SetSortTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSquadSlotSortTypes              SquadSlotSortTypes                                     (Parm, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::SetSortTypes(const struct FSquadSlotSortTypes& SquadSlotSortTypes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSortTypes");

	Params::FortSquadSlotItemPicker_SetSortTypes Parms{};

	Parms.SquadSlotSortTypes = std::move(SquadSlotSortTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotItemPicker.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotItemPickerTileButton.HandleItemSlottedToDifferentSquad
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHomebaseSquadSlotId             SquadSlotId                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPickerTileButton::HandleItemSlottedToDifferentSquad(const struct FHomebaseSquadSlotId& SquadSlotId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemSlottedToDifferentSquad");

	Params::FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad Parms{};

	Parms.SquadSlotId = std::move(SquadSlotId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotItemPickerTileButton.HandleSlottingRestrictionReasonsChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotItemPickerTileButton::HandleSlottingRestrictionReasonsChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSlottingRestrictionReasonsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotItemPickerTileButton.GetSlottingRestrictionReasons
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortSquadSlottingRestrictionReason>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortSquadSlottingRestrictionReason> UFortSquadSlotItemPickerTileButton::GetSlottingRestrictionReasons() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlottingRestrictionReasons");

	Params::FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotSelectorPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSquadSlotSelectorButton*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSlotSelectorButton* UFortSquadSlotSelectorPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHostButton");

	Params::FortSquadSlotSelectorPopupMenu_GetHostButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotSelectorPopupMenu.IsScreenWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotSelectorPopupMenu::IsScreenWIFE() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsScreenWIFE");

	Params::FortSquadSlotSelectorPopupMenu_IsScreenWIFE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotSurvivorTraitMatchesDetailWidget.HandleTraitValuesUpdatedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSurvivorTraitMatchesDetailWidget::HandleTraitValuesUpdatedBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTraitValuesUpdatedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortSquadSlotSelectorButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPopupMenu");

	Params::FortSquadSlotSelectorButton_GetPopupMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.HandlePostDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSelectorButton::HandlePostDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePostDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.HandlePreDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSelectorButton::HandlePreDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePreDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.OpenSquadSlot
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotSelectorButton::OpenSquadSlot()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenSquadSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotSelectorButton::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.SquadSlotWidgetUpdated
// (Native, Event, Public, BlueprintEvent)

void UFortSquadSlotSelectorButton::SquadSlotWidgetUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SquadSlotWidgetUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.ViewInAll
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotSelectorButton::ViewInAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ViewInAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotSelectorButton::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.GetInPreviewMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotSelectorButton::GetInPreviewMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInPreviewMode");

	Params::FortSquadSlotSelectorButton_GetInPreviewMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotSelectorButton.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotSelectorButton::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLockedBP");

	Params::FortSquadSlotSelectorButton_IsSquadSlotLockedBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotsView.CreateAndAddSquadSlotButton
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseSquadSlot               SquadSlotDefinition                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                          OutSquadSlotButtonHost                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSquadSlotSelectorButton*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSlotSelectorButton* UFortSquadSlotsView::CreateAndAddSquadSlotButton(const int32 SquadSlotIndex, const struct FHomebaseSquadSlot& SquadSlotDefinition, class UWidget** OutSquadSlotButtonHost)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateAndAddSquadSlotButton");

	Params::FortSquadSlotsView_CreateAndAddSquadSlotButton Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;
	Parms.SquadSlotDefinition = std::move(SquadSlotDefinition);

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadSlotButtonHost != nullptr)
		*OutSquadSlotButtonHost = Parms.OutSquadSlotButtonHost;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleButtonClicked
// (Final, Native, Private)
// Parameters:
// class UCommonButtonLegacy*              CommittedButton                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleButtonClicked(class UCommonButtonLegacy* CommittedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleButtonClicked");

	Params::FortSquadSlotsView_HandleButtonClicked Parms{};

	Parms.CommittedButton = CommittedButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleButtonDoubleClicked
// (Final, Native, Private)
// Parameters:
// class UCommonButtonLegacy*              CommittedButton                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleButtonDoubleClicked(class UCommonButtonLegacy* CommittedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleButtonDoubleClicked");

	Params::FortSquadSlotsView_HandleButtonDoubleClicked Parms{};

	Parms.CommittedButton = CommittedButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleHoveredButtonChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButtonLegacy*              HoveredButton                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleHoveredButtonChanged(class UCommonButtonLegacy* HoveredButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHoveredButtonChanged");

	Params::FortSquadSlotsView_HandleHoveredButtonChanged Parms{};

	Parms.HoveredButton = HoveredButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleRequestOpenSquadSlot
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleRequestOpenSquadSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRequestOpenSquadSlot");

	Params::FortSquadSlotsView_HandleRequestOpenSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleRequestViewInAll
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleRequestViewInAll(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRequestViewInAll");

	Params::FortSquadSlotsView_HandleRequestViewInAll Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.HandleSelectedButtonChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButtonLegacy*              SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleSelectedButtonChanged(class UCommonButtonLegacy* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectedButtonChanged");

	Params::FortSquadSlotsView_HandleSelectedButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.SelectSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SelectSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectSlot");

	Params::FortSquadSlotsView_SelectSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadToManageBP");

	Params::FortSquadSlotsView_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.SetInPreviewMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreview                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetInPreviewMode(const bool bPreview)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInPreviewMode");

	Params::FortSquadSlotsView_SetInPreviewMode Parms{};

	Parms.bPreview = bPreview;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.SetIsSelectionLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldSelectionBeLocked                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetIsSelectionLocked(const bool ShouldSelectionBeLocked)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsSelectionLocked");

	Params::FortSquadSlotsView_SetIsSelectionLocked Parms{};

	Parms.ShouldSelectionBeLocked = ShouldSelectionBeLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotsView.TryGetSelectedSquadSlotSortTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSquadSlotSortTypes              OutSlotSortTypes                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotsView::TryGetSelectedSquadSlotSortTypes(struct FSquadSlotSortTypes* OutSlotSortTypes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetSelectedSquadSlotSortTypes");

	Params::FortSquadSlotsView_TryGetSelectedSquadSlotSortTypes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSlotSortTypes != nullptr)
		*OutSlotSortTypes = std::move(Parms.OutSlotSortTypes);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotsView.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadSlotsView::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadToManageBP");

	Params::FortSquadSlotsView_GetIdOfSquadToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotsView.GetIndexOfSelectedSquadSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSquadSlotsView::GetIndexOfSelectedSquadSlot() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIndexOfSelectedSquadSlot");

	Params::FortSquadSlotsView_GetIndexOfSelectedSquadSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotsView.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotsView::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetStaticSquadDataBP");

	Params::FortSquadSlotsView_TryGetStaticSquadDataBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotWidget.SetCardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCardSize                       CardSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::SetCardSize(const EFortItemCardSize CardSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCardSize");

	Params::FortSquadSlotWidget_SetCardSize Parms{};

	Parms.CardSize = CardSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotWidget.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotWidget_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadSlotWidget.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotWidget_GetIdOfSquadSlotToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function SaveTheWorldUI.FortSquadSlotWidget.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotWidget::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemInSquadSlotBP");

	Params::FortSquadSlotWidget_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadSlotWidget.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotWidget::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSquadSlotLockedBP");

	Params::FortSquadSlotWidget_IsSquadSlotLockedBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadStatsWidgetBase.HandlePowerRatingChanged_BP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHasTeamMebers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadStatsWidgetBase::HandlePowerRatingChanged_BP(bool bHasTeamMebers)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePowerRatingChanged_BP");

	Params::FortSquadStatsWidgetBase_HandlePowerRatingChanged_BP Parms{};

	Parms.bHasTeamMebers = bHasTeamMebers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadStatsWidgetBase.HandleSquadSlottingPreviewStateChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadStatsWidgetBase::HandleSquadSlottingPreviewStateChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSquadSlottingPreviewStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadStatsWidgetBase.RequestShowPreviewStats
// (Final, Native, Public, BlueprintCallable)

void UFortSquadStatsWidgetBase::RequestShowPreviewStats()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestShowPreviewStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadStatsWidgetBase.RequestStatsUpdate
// (Final, Native, Public, BlueprintCallable)

void UFortSquadStatsWidgetBase::RequestStatsUpdate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestStatsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadStatsWidgetBase.GetLocalPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortSquadStatsWidgetBase::GetLocalPlayerId() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLocalPlayerId");

	Params::FortSquadStatsWidgetBase_GetLocalPlayerId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadStatValueWithIcon.HandleDifferentAttributeSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadStatValueWithIcon::HandleDifferentAttributeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentAttributeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadTypeLandingPageBase.CreateAndAddSquadButton
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSquadSelectorButton*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSelectorButton* UFortSquadTypeLandingPageBase::CreateAndAddSquadButton(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateAndAddSquadButton");

	Params::FortSquadTypeLandingPageBase_CreateAndAddSquadButton Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSquadTypeLandingPageBase.HandleBackInputAction
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadTypeLandingPageBase::HandleBackInputAction(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBackInputAction");

	Params::FortSquadTypeLandingPageBase_HandleBackInputAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function SaveTheWorldUI.FortSquadTypeLandingPageBase.HandlePendingNavigationOp
// (Final, Native, Protected, BlueprintCallable)

void UFortSquadTypeLandingPageBase::HandlePendingNavigationOp()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePendingNavigationOp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSquadTypeLandingPageBase.ShowWarningReadOnlyWIFE
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadTypeLandingPageBase::ShowWarningReadOnlyWIFE(bool Force)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowWarningReadOnlyWIFE");

	Params::FortSquadTypeLandingPageBase_ShowWarningReadOnlyWIFE Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSquadTypeLandingPageBase.IsScreenWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadTypeLandingPageBase::IsScreenWIFE() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsScreenWIFE");

	Params::FortSquadTypeLandingPageBase_IsScreenWIFE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortStatIcon.HandleDifferentAttributeSetBP
// (Event, Protected, BlueprintEvent)

void UFortStatIcon::HandleDifferentAttributeSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentAttributeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStatIcon.SetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAttribute               InAttribute                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStatIcon::SetAttribute(const struct FGameplayAttribute& InAttribute)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAttribute");

	Params::FortStatIcon_SetAttribute Parms{};

	Parms.InAttribute = std::move(InAttribute);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadManagementScreen.PlayFeedbackForSlottingPerson
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortWorker*                      Worker                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortSurvivorSquadSlottingFeedbackDataFeedbackData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadManagementScreen::PlayFeedbackForSlottingPerson(class UFortWorker* Worker, int32 SlotIndex, const struct FFortSurvivorSquadSlottingFeedbackData& FeedbackData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayFeedbackForSlottingPerson");

	Params::FortSurvivorSquadManagementScreen_PlayFeedbackForSlottingPerson Parms{};

	Parms.Worker = Worker;
	Parms.SlotIndex = SlotIndex;
	Parms.FeedbackData = std::move(FeedbackData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadManagementScreen.ShowHelpDialog
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadManagementScreen::ShowHelpDialog()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowHelpDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSurvivorSquadManagementScreen.UpdateCycleButtons
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadManagementScreen::UpdateCycleButtons()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCycleButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSurvivorSquadSelectorButton.TryGetPersonalityMatches
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSurvivorSquadSelectorButtonPersonalityMatchesOutPersonalityMatches                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetPersonalityMatches(struct FFortSurvivorSquadSelectorButtonPersonalityMatches* OutPersonalityMatches)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetPersonalityMatches");

	Params::FortSurvivorSquadSelectorButton_TryGetPersonalityMatches Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPersonalityMatches != nullptr)
		*OutPersonalityMatches = std::move(Parms.OutPersonalityMatches);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSurvivorSquadSelectorButton.TryGetSquadMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortWorker*>              OutSquadMembers                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetSquadMembers(TArray<class UFortWorker*>* OutSquadMembers)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetSquadMembers");

	Params::FortSurvivorSquadSelectorButton_TryGetSquadMembers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadMembers != nullptr)
		*OutSquadMembers = std::move(Parms.OutSquadMembers);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSurvivorSquadSelectorButton.TryGetSummaryStats
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSurvivorSquadSelectorButtonSummaryStatsOutSummaryStats                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetSummaryStats(struct FFortSurvivorSquadSelectorButtonSummaryStats* OutSummaryStats)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetSummaryStats");

	Params::FortSurvivorSquadSelectorButton_TryGetSummaryStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSummaryStats != nullptr)
		*OutSummaryStats = std::move(Parms.OutSummaryStats);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchBase.OnStatMatchUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FFortUISurvivorSquadStatMatch    UpdatedMatch                                           (Parm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchBase::OnStatMatchUpdated(const struct FFortUISurvivorSquadStatMatch& UpdatedMatch)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStatMatchUpdated");

	Params::FortSurvivorSquadStatMatchBase_OnStatMatchUpdated Parms{};

	Parms.UpdatedMatch = std::move(UpdatedMatch);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.AddStatMatch
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSurvivorSquadStatMatchBase*  SetBonus                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::AddStatMatch(class UFortSurvivorSquadStatMatchBase* SetBonus)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddStatMatch");

	Params::FortSurvivorSquadStatMatchesBase_AddStatMatch Parms{};

	Parms.SetBonus = SetBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadStatMatchesBase::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIdOfSquadToManageBP");

	Params::FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.SetSummaryView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSummaryView                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::SetSummaryView(bool bInSummaryView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSummaryView");

	Params::FortSurvivorSquadStatMatchesBase_SetSummaryView Parms{};

	Parms.bInSummaryView = bInSummaryView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSurvivorSquadStatMatchesBase::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIdOfSquadToManageBP");

	Params::FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSurvivorSquadStatMatchesBase.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadStatMatchesBase::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetStaticSquadDataBP");

	Params::FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortSurvivorSquadSummaryStatItem.SetAttributeModifierAccumulation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAttributeModifierAccumulationAccumulation                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadSummaryStatItem::SetAttributeModifierAccumulation(const struct FFortAttributeModifierAccumulation& Accumulation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAttributeModifierAccumulation");

	Params::FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation Parms{};

	Parms.Accumulation = std::move(Accumulation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortWorkerSetBonusIcon.HandleDifferentGameplayTagSetBP
// (Event, Protected, BlueprintEvent)

void UFortWorkerSetBonusIcon::HandleDifferentGameplayTagSetBP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDifferentGameplayTagSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortWorkerSetBonusIcon.SetGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortWorkerSetBonusIcon::SetGameplayTag(const struct FGameplayTag& InGameplayTag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetGameplayTag");

	Params::FortWorkerSetBonusIcon_SetGameplayTag Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStatsOverviewDetailsBase.ListenForChanges
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bListen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStatsOverviewDetailsBase::ListenForChanges(bool bListen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ListenForChanges");

	Params::FortStatsOverviewDetailsBase_ListenForChanges Parms{};

	Parms.bListen = bListen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortStatsOverviewDetailsBase.RequestStatsUpdate
// (Final, Native, Public, BlueprintCallable)

void UFortStatsOverviewDetailsBase::RequestStatsUpdate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestStatsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortStatsOverviewDetailsBase.GetLocalPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortStatsOverviewDetailsBase::GetLocalPlayerId() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLocalPlayerId");

	Params::FortStatsOverviewDetailsBase_GetLocalPlayerId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreBase.CreateTencentPuchaseOpenModal
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::CreateTencentPuchaseOpenModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateTencentPuchaseOpenModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.HandleAddVBucks
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::HandleAddVBucks()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAddVBucks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.HandleTencentDetails
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::HandleTencentDetails()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTencentDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.OnStorePurchaseCompleted
// (Final, Native, Private)

void UFortLlamaStoreBase::OnStorePurchaseCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStorePurchaseCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.OnStoreStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortStoreState                         NewStoreState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreBase::OnStoreStateChanged(EFortStoreState NewStoreState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStoreStateChanged");

	Params::FortLlamaStoreBase_OnStoreStateChanged Parms{};

	Parms.NewStoreState = NewStoreState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.SetupFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortLlamaStoreBase::SetupFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase.SwapToCardEnterState
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::SwapToCardEnterState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SwapToCardEnterState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase_Legacy.CreateTencentPuchaseOpenModal
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase_Legacy::CreateTencentPuchaseOpenModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateTencentPuchaseOpenModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase_Legacy.OnStorePurchaseCompleted
// (Final, Native, Private)

void UFortLlamaStoreBase_Legacy::OnStorePurchaseCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStorePurchaseCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase_Legacy.OnStoreStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortStoreState                         NewStoreState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreBase_Legacy::OnStoreStateChanged(EFortStoreState NewStoreState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStoreStateChanged");

	Params::FortLlamaStoreBase_Legacy_OnStoreStateChanged Parms{};

	Parms.NewStoreState = NewStoreState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortLlamaStoreBase_Legacy.SetupFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortLlamaStoreBase_Legacy::SetupFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreBase_Legacy.SwapToCardEnterState
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase_Legacy::SwapToCardEnterState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SwapToCardEnterState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.OnOfferInfoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentOfferRarity                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreDetailsBase::OnOfferInfoChanged(int32 CurrentOfferRarity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnOfferInfoChanged");

	Params::FortLlamaStoreDetailsBase_OnOfferInfoChanged Parms{};

	Parms.CurrentOfferRarity = CurrentOfferRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortLlamaStoreDetailsBase::SetScrollWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetScrollWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.StartUpgradingToGold
// (Event, Public, BlueprintEvent)

void UFortLlamaStoreDetailsBase::StartUpgradingToGold()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartUpgradingToGold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.StartUpgradingToSilver
// (Event, Public, BlueprintEvent)

void UFortLlamaStoreDetailsBase::StartUpgradingToSilver()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartUpgradingToSilver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.GetChoiceItemCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortLlamaStoreDetailsBase::GetChoiceItemCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetChoiceItemCount");

	Params::FortLlamaStoreDetailsBase_GetChoiceItemCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.GetNewItemCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortLlamaStoreDetailsBase::GetNewItemCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNewItemCount");

	Params::FortLlamaStoreDetailsBase_GetNewItemCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreDetailsBase.GetNotInCollectionBookCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortLlamaStoreDetailsBase::GetNotInCollectionBookCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNotInCollectionBookCount");

	Params::FortLlamaStoreDetailsBase_GetNotInCollectionBookCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreInspectionScreen.GetInspectChoiceInputState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInputActionState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EInputActionState UFortLlamaStoreInspectionScreen::GetInspectChoiceInputState() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInspectChoiceInputState");

	Params::FortLlamaStoreInspectionScreen_GetInspectChoiceInputState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreInspectionScreen.GetSelectedCardPack
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCardPackItem*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCardPackItem* UFortLlamaStoreInspectionScreen::GetSelectedCardPack() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedCardPack");

	Params::FortLlamaStoreInspectionScreen_GetSelectedCardPack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortLlamaStoreInspectionScreen.IsItemChoicePack
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ItemToCheck                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortLlamaStoreInspectionScreen::IsItemChoicePack(class UObject* ItemToCheck) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsItemChoicePack");

	Params::FortLlamaStoreInspectionScreen_IsItemChoicePack Parms{};

	Parms.ItemToCheck = ItemToCheck;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.StWHUD.HandleCursorModeChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStWHUD::HandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCursorModeChanged");

	Params::StWHUD_HandleCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.StWHUD.HandlePickerOpenRequest
// (Final, Native, Protected)
// Parameters:
// EFortPickerMode                         Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InitialOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreFirstAccept                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStWHUD::HandlePickerOpenRequest(EFortPickerMode Mode, int32 InitialOption, bool bIgnoreFirstAccept)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePickerOpenRequest");

	Params::StWHUD_HandlePickerOpenRequest Parms{};

	Parms.Mode = Mode;
	Parms.InitialOption = InitialOption;
	Parms.bIgnoreFirstAccept = bIgnoreFirstAccept;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.StWHUD.NativeHandleWeaponEquipped
// (Final, Native, Public)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStWHUD::NativeHandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NativeHandleWeaponEquipped");

	Params::StWHUD_NativeHandleWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortTheaterSelect.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UFortTheaterSelect::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortTheaterSelect.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UFortTheaterSelect::OnNavigationRight()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortTheaterSelect.GetTheaterRecommendedRatingRange
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minimum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Maximum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTheaterSelect::GetTheaterRecommendedRatingRange(const class FString& UniqueId, int32* Minimum, int32* Maximum) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTheaterRecommendedRatingRange");

	Params::FortTheaterSelect_GetTheaterRecommendedRatingRange Parms{};

	Parms.UniqueId = std::move(UniqueId);

	UObject::ProcessEvent(Func, &Parms);

	if (Minimum != nullptr)
		*Minimum = Parms.Minimum;

	if (Maximum != nullptr)
		*Maximum = Parms.Maximum;

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeDetailsBase.OnPurchaseComplete
// (Event, Public, BlueprintEvent)

void UFortUpgradeDetailsBase::OnPurchaseComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeDetailsBase.OnScreenActive
// (Event, Public, BlueprintEvent)

void UFortUpgradeDetailsBase::OnScreenActive()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnScreenActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeDetailsBase.OnShowIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeDetailsBase::OnShowIcon(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowIcon");

	Params::FortUpgradeDetailsBase_OnShowIcon Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUpgradeDetailsBase.OnUpgradeToDetailChanged
// (Event, Protected, BlueprintEvent)

void UFortUpgradeDetailsBase::OnUpgradeToDetailChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpgradeToDetailChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeDetailsBase.RequestPurchaseNode
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeDetailsBase::RequestPurchaseNode()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestPurchaseNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeInfo.BackwardPreview
// (Final, Native, Public, BlueprintCallable)

void UFortUpgradeInfo::BackwardPreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BackwardPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeInfo.ForwardPreview
// (Final, Native, Public, BlueprintCallable)

void UFortUpgradeInfo::ForwardPreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ForwardPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeInfo.CanAffordUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::CanAffordUpgrade() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanAffordUpgrade");

	Params::FortUpgradeInfo_CanAffordUpgrade Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.CanPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::CanPreview() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPreview");

	Params::FortUpgradeInfo_CanPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetCost() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCost");

	Params::FortUpgradeInfo_GetCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetCurrentLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetCurrentLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentLevel");

	Params::FortUpgradeInfo_GetCurrentLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetDescription() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDescription");

	Params::FortUpgradeInfo_GetDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetDisplayAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortDisplayAttribute>    OutDisplayAttributes                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::GetDisplayAttributes(TArray<struct FFortDisplayAttribute>* OutDisplayAttributes) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDisplayAttributes");

	Params::FortUpgradeInfo_GetDisplayAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDisplayAttributes != nullptr)
		*OutDisplayAttributes = std::move(Parms.OutDisplayAttributes);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUpgradeInfoImageSize                   ImageSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortUpgradeInfo::GetIcon(EUpgradeInfoImageSize ImageSize) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIcon");

	Params::FortUpgradeInfo_GetIcon Parms{};

	Parms.ImageSize = ImageSize;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetItemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetItemName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetItemName");

	Params::FortUpgradeInfo_GetItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMaxLevel");

	Params::FortUpgradeInfo_GetMaxLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetNextLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetNextLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextLevel");

	Params::FortUpgradeInfo_GetNextLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetNextLevelDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetNextLevelDescription() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextLevelDescription");

	Params::FortUpgradeInfo_GetNextLevelDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetNextLevelTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetNextLevelTitle() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextLevelTitle");

	Params::FortUpgradeInfo_GetNextLevelTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetTitle() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTitle");

	Params::FortUpgradeInfo_GetTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetUpgradeUnlockLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetUpgradeUnlockLevel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUpgradeUnlockLevel");

	Params::FortUpgradeInfo_GetUpgradeUnlockLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.GetVideo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSource* UFortUpgradeInfo::GetVideo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVideo");

	Params::FortUpgradeInfo_GetVideo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.IsPreviewing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::IsPreviewing() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPreviewing");

	Params::FortUpgradeInfo_IsPreviewing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeInfo.IsUpgradeUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::IsUpgradeUnlocked() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsUpgradeUnlocked");

	Params::FortUpgradeInfo_IsUpgradeUnlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.HandleTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeScreenBase::HandleTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTabSelected");

	Params::FortUpgradeScreenBase_HandleTabSelected Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.OnPurchaseNodeComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnPurchaseNodeComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseNodeComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.OnUpgradeInfoChanged
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnUpgradeInfoChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpgradeInfoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.OnUseUpgradesRespecTokenComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnUseUpgradesRespecTokenComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUseUpgradesRespecTokenComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.RefreshFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::RefreshFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.TogglePreview
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::TogglePreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TogglePreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.UseUpgradesRespecToken
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::UseUpgradesRespecToken()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UseUpgradesRespecToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.AreUpgradesRespecTokensAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::AreUpgradesRespecTokensAvailable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreUpgradesRespecTokensAvailable");

	Params::FortUpgradeScreenBase_AreUpgradesRespecTokensAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.CanPreview
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::CanPreview() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPreview");

	Params::FortUpgradeScreenBase_CanPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.GetUpgradesRespecTokenCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeScreenBase::GetUpgradesRespecTokenCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUpgradesRespecTokenCount");

	Params::FortUpgradeScreenBase_GetUpgradesRespecTokenCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase.IsPreviewing
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::IsPreviewing() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPreviewing");

	Params::FortUpgradeScreenBase_IsPreviewing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.HandleTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeScreenBase_Legacy::HandleTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTabSelected");

	Params::FortUpgradeScreenBase_Legacy_HandleTabSelected Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.OnPurchaseNodeComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase_Legacy::OnPurchaseNodeComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPurchaseNodeComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.OnUpgradeInfoChanged
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase_Legacy::OnUpgradeInfoChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpgradeInfoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.OnUseUpgradesRespecTokenComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase_Legacy::OnUseUpgradesRespecTokenComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUseUpgradesRespecTokenComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.RefreshFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase_Legacy::RefreshFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.TogglePreview
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase_Legacy::TogglePreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TogglePreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.UseUpgradesRespecToken
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase_Legacy::UseUpgradesRespecToken()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UseUpgradesRespecToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.AreUpgradesRespecTokensAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase_Legacy::AreUpgradesRespecTokensAvailable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreUpgradesRespecTokensAvailable");

	Params::FortUpgradeScreenBase_Legacy_AreUpgradesRespecTokensAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.CanPreview
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase_Legacy::CanPreview() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanPreview");

	Params::FortUpgradeScreenBase_Legacy_CanPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.GetUpgradesRespecTokenCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeScreenBase_Legacy::GetUpgradesRespecTokenCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUpgradesRespecTokenCount");

	Params::FortUpgradeScreenBase_Legacy_GetUpgradesRespecTokenCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeScreenBase_Legacy.IsPreviewing
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase_Legacy::IsPreviewing() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPreviewing");

	Params::FortUpgradeScreenBase_Legacy_IsPreviewing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SaveTheWorldUI.FortUpgradeTileBase.OnDataRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUpgrade                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeTileBase::OnDataRefresh(bool bUpgrade)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDataRefresh");

	Params::FortUpgradeTileBase_OnDataRefresh Parms{};

	Parms.bUpgrade = bUpgrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SaveTheWorldUI.FortUpgradeTileBase_Legacy.OnDataRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUpgrade                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeTileBase_Legacy::OnDataRefresh(bool bUpgrade)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDataRefresh");

	Params::FortUpgradeTileBase_Legacy_OnDataRefresh Parms{};

	Parms.bUpgrade = bUpgrade;

	UObject::ProcessEvent(Func, &Parms);
}

}

