#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpEverywhereUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function XpEverywhereUI.XpEverywhereAccoladesWidget.OpenWidget
// 0x0088 (0x0088 - 0x0000)
struct XpEverywhereAccoladesWidget_OpenWidget final
{
public:
	const class UFortAccoladeItemDefinition*      AccoladeDef;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         XPValue;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              AccoladeLargePreviewImageOverride;                 // 0x0028(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   SimulatedName;                                     // 0x0050(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   SimulatedText;                                     // 0x0068(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortSimulatedXPSize                          SimulatedXpSize;                                   // 0x0080(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function XpEverywhereUI.XpEverywhereAccoladesWidget.HasMoreXPEvents
// 0x0001 (0x0001 - 0x0000)
struct XpEverywhereAccoladesWidget_HasMoreXPEvents final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereBar.OnXpBarInitialized
// 0x000C (0x000C - 0x0000)
struct XpEverywhereBar_OnXpBarInitialized final
{
public:
	int32                                         CurrentXp;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentLevel;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentRemainingRestXP;                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereBar.OnXpBarUpdated
// 0x0014 (0x0014 - 0x0000)
struct XpEverywhereBar_OnXpBarUpdated final
{
public:
	int32                                         ShownXP;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShownLevel;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewDesiredXP;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewDesiredLevel;                                   // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewRemainingRestXP;                                // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereBar.GetTotalXpRequiredForLevel
// 0x0008 (0x0008 - 0x0000)
struct XpEverywhereBar_GetTotalXpRequiredForLevel final
{
public:
	int32                                         InLevel;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereLevelUpWidget.OnShowWidget
// 0x0004 (0x0004 - 0x0000)
struct XpEverywhereLevelUpWidget_OnShowWidget final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereReticleWidget.UpdateRestXP
// 0x0004 (0x0004 - 0x0000)
struct XpEverywhereReticleWidget_UpdateRestXP final
{
public:
	int32                                         RestXpRemaining;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function XpEverywhereUI.XpEverywhereReticleWidget.UpdateXPAmount
// 0x0018 (0x0018 - 0x0000)
struct XpEverywhereReticleWidget_UpdateXPAmount final
{
public:
	int32                                         NewAmount;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Cue;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortSimulatedXPSize                          SimulatedXpSize;                                   // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function XpEverywhereUI.XpEverywhereReticleWidget.UpdateXPSource
// 0x0018 (0x0018 - 0x0000)
struct XpEverywhereReticleWidget_UpdateXPSource final
{
public:
	class FText                                   NewSourceText;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

}

