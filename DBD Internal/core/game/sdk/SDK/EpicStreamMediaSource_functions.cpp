#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicStreamMediaSource

#include "Basic.hpp"

#include "EpicStreamMediaSource_classes.hpp"
#include "EpicStreamMediaSource_parameters.hpp"


namespace SDK
{

// Function EpicStreamMediaSource.EpicStreamMediaSource.CancelVideoUrlRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCancelled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::CancelVideoUrlRequest(bool bInCancelled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CancelVideoUrlRequest");

	Params::EpicStreamMediaSource_CancelVideoUrlRequest Parms{};

	Parms.bInCancelled = bInCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.DisableSharing
// (Final, Native, Public, BlueprintCallable)

void UEpicStreamMediaSource::DisableSharing()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisableSharing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.IsScreenRecordingInProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicStreamMediaSource::IsScreenRecordingInProgress()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsScreenRecordingInProgress");

	Params::EpicStreamMediaSource_IsScreenRecordingInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.MetadataResultHandler
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FEpicMediaMetadataExt            MetaData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::MetadataResultHandler(const struct FEpicMediaMetadataExt& MetaData, bool bSuccess)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MetadataResultHandler");

	Params::EpicStreamMediaSource_MetadataResultHandler Parms{};

	Parms.MetaData = std::move(MetaData);
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.ReinstateSharing
// (Final, Native, Public, BlueprintCallable)

void UEpicStreamMediaSource::ReinstateSharing()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReinstateSharing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.RequestVideoUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                FortPC                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::RequestVideoUrl(const class APlayerController* FortPC)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestVideoUrl");

	Params::EpicStreamMediaSource_RequestVideoUrl Parms{};

	Parms.FortPC = FortPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.SetLocalizedOverlaysV2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEpicMediaDownloadLocalizedOverlays*InOverlays                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::SetLocalizedOverlaysV2(class UEpicMediaDownloadLocalizedOverlays* InOverlays)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetLocalizedOverlaysV2");

	Params::EpicStreamMediaSource_SetLocalizedOverlaysV2 Parms{};

	Parms.InOverlays = InOverlays;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.SetPlaybackStartTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::SetPlaybackStartTime(float StartTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPlaybackStartTime");

	Params::EpicStreamMediaSource_SetPlaybackStartTime Parms{};

	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.SetUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InURL                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicStreamMediaSource::SetUrl(class FString& InURL)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetUrl");

	Params::EpicStreamMediaSource_SetUrl Parms{};

	Parms.InURL = std::move(InURL);

	UObject::ProcessEvent(Func, &Parms);

	InURL = std::move(Parms.InURL);
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.ShouldProtectPlayerFromContent
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUCPTypes                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUCPTypes UEpicStreamMediaSource::ShouldProtectPlayerFromContent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldProtectPlayerFromContent");

	Params::EpicStreamMediaSource_ShouldProtectPlayerFromContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.HasLocalFilePlayback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicStreamMediaSource::HasLocalFilePlayback() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasLocalFilePlayback");

	Params::EpicStreamMediaSource_HasLocalFilePlayback Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.ShouldStreamBePlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              PrimitiveComponent                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CullRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicStreamMediaSource::ShouldStreamBePlaying(const class UObject* WorldContextObject, const class UPrimitiveComponent* PrimitiveComponent, float CullRadius) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldStreamBePlaying");

	Params::EpicStreamMediaSource_ShouldStreamBePlaying Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PrimitiveComponent = PrimitiveComponent;
	Parms.CullRadius = CullRadius;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EpicStreamMediaSource.EpicStreamMediaSource.UpdatePlayerOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMediaPlayerOptions              PlayerOptions                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FMediaPlayerOptions              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMediaPlayerOptions UEpicStreamMediaSource::UpdatePlayerOptions(const struct FMediaPlayerOptions& PlayerOptions) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdatePlayerOptions");

	Params::EpicStreamMediaSource_UpdatePlayerOptions Parms{};

	Parms.PlayerOptions = std::move(PlayerOptions);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

