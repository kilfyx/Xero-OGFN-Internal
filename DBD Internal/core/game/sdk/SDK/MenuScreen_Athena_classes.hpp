#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuScreen_Athena

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MenuScreen_Athena.MenuScreen_Athena_C
// 0x1C30 (0x2070 - 0x0440)
class UMenuScreen_Athena_C final : public UFrontendAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimInstanceSubsystemData             AnimBlueprintClassSubsystem_PropertyAccess;        // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x0450(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0500(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0578(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x05F0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0668(0x0078)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x06E0(0x00A0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0780(0x00A0)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_2;                             // 0x0820(0x00F8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0918(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0A20(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0A48(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A90(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0B50(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0C18(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0C40(0x0028)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x0C68(0x00F8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x0D60(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x0E50(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x0F40(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1030(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1078(0x0048)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x10C0(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x11B0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1278(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x12C0(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1360(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1388(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1450(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1470(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1490(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x14C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x14E8(0x0078)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1560(0x00F8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1658(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1760(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x1868(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x1958(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1A48(0x0108)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1B50(0x0058)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x1BA8(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1C58(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1D08(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1D80(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1DF8(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1E70(0x0078)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x1EE8(0x00A0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x1F88(0x00A0)()
	TMulticastInlineDelegate<void()>              MenuScreenDispatcher;                              // 0x2028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasBeenSelected;                                   // 0x2038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2039[0x3];                                     // 0x2039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PoseInt;                                           // 0x203C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetTranslate;                                   // 0x2040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OffsetRotate;                                      // 0x204C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class APlayerPawn_Athena_C*                   PawnOwner;                                         // 0x2058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x2060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x2064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HidePropTimeRemaining;                             // 0x2068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HidePropBones;                                     // 0x206C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MenuScreen_Athena(int32 EntryPoint);
	void OnMontageBlendingOut_Event_HideProps(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageStarted_Event_HideProps(class UAnimMontage* Montage);
	void AnimNotify_LobbySkydive_Gliding();
	void AnimNotify_LobbySkydive_Diving();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MenuScreen_Athena_AnimGraphNode_LayeredBoneBlend_8D2B60D44BBADFD01AC9A6BF39472D0B();
	void AnimNotify_LeftB();
	void UserFocus();
	void AnimNotify_playFacialAnim();
	void HidePropsForBlend(class UAnimMontage* NewMontage);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuScreen_Athena_C">();
	}
	static class UMenuScreen_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuScreen_Athena_C>();
	}
};
static_assert(alignof(UMenuScreen_Athena_C) == 0x000010, "Wrong alignment on UMenuScreen_Athena_C");
static_assert(sizeof(UMenuScreen_Athena_C) == 0x002070, "Wrong size on UMenuScreen_Athena_C");
static_assert(offsetof(UMenuScreen_Athena_C, UberGraphFrame) == 0x000440, "Member 'UMenuScreen_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimBlueprintClassSubsystem_PropertyAccess) == 0x000448, "Member 'UMenuScreen_Athena_C::AnimBlueprintClassSubsystem_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum_2) == 0x000450, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_8) == 0x000500, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_7) == 0x000578, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_6) == 0x0005F0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_5) == 0x000668, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_3) == 0x0006E0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_2) == 0x000780, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK_2) == 0x000820, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone_3) == 0x000918, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_4) == 0x000A20, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_3) == 0x000A48, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LayeredBoneBlend) == 0x000A90, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SaveCachedPose_2) == 0x000B50, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_3) == 0x000C18, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_2) == 0x000C40, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK_1) == 0x000C68, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_5) == 0x000D60, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_4) == 0x000E50, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_3) == 0x000F40, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_2) == 0x001030, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_1) == 0x001078, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_2) == 0x0010C0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SaveCachedPose_1) == 0x0011B0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot) == 0x001278, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByBool) == 0x0012C0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_1) == 0x001360, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SaveCachedPose) == 0x001388, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ComponentToLocalSpace) == 0x001450, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LocalToComponentSpace) == 0x001470, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Root) == 0x001490, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose) == 0x0014C0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_4) == 0x0014E8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK) == 0x001560, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone_2) == 0x001658, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone_1) == 0x001760, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_1) == 0x001868, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone) == 0x001958, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone) == 0x001A48, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyCurve) == 0x001B50, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum_1) == 0x001BA8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum) == 0x001C58, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_3) == 0x001D08, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_2) == 0x001D80, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_1) == 0x001DF8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer) == 0x001E70, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_1) == 0x001EE8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt) == 0x001F88, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, MenuScreenDispatcher) == 0x002028, "Member 'UMenuScreen_Athena_C::MenuScreenDispatcher' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, HasBeenSelected) == 0x002038, "Member 'UMenuScreen_Athena_C::HasBeenSelected' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PoseInt) == 0x00203C, "Member 'UMenuScreen_Athena_C::PoseInt' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, OffsetTranslate) == 0x002040, "Member 'UMenuScreen_Athena_C::OffsetTranslate' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, OffsetRotate) == 0x00204C, "Member 'UMenuScreen_Athena_C::OffsetRotate' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PawnOwner) == 0x002058, "Member 'UMenuScreen_Athena_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, StartTime) == 0x002060, "Member 'UMenuScreen_Athena_C::StartTime' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PlayRate) == 0x002064, "Member 'UMenuScreen_Athena_C::PlayRate' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, HidePropTimeRemaining) == 0x002068, "Member 'UMenuScreen_Athena_C::HidePropTimeRemaining' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, HidePropBones) == 0x00206C, "Member 'UMenuScreen_Athena_C::HidePropBones' has a wrong offset!");

}

