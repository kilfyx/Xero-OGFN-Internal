#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightningViolator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LightningViolator.LightningViolator_C
// 0x0070 (0x02D0 - 0x0260)
class ULightningViolator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CommonTextBlock_Content;                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Bg;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ShadowBG;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ShadowTail;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Tail;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Body;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Pointer;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   DefaultViolatorText;                               // 0x02A0(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           DefaultBGColor;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTail;                                         // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EHorizontalAlignment                          TailHorizontalAlignment;                           // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowOnTop;                                         // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_LightningViolator(int32 EntryPoint);
	void Construct();
	void EventSetText(const class FText& NewText);
	void EventColorBG(const struct FLinearColor& NewColor);
	void PreConstruct(bool IsDesignTime);
	void TailPosition(bool ShowTail, EHorizontalAlignment HPosition, bool OnTop);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LightningViolator_C">();
	}
	static class ULightningViolator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightningViolator_C>();
	}
};
static_assert(alignof(ULightningViolator_C) == 0x000008, "Wrong alignment on ULightningViolator_C");
static_assert(sizeof(ULightningViolator_C) == 0x0002D0, "Wrong size on ULightningViolator_C");
static_assert(offsetof(ULightningViolator_C, UberGraphFrame) == 0x000260, "Member 'ULightningViolator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, CommonTextBlock_Content) == 0x000268, "Member 'ULightningViolator_C::CommonTextBlock_Content' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Image_Bg) == 0x000270, "Member 'ULightningViolator_C::Image_Bg' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Image_ShadowBG) == 0x000278, "Member 'ULightningViolator_C::Image_ShadowBG' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Image_ShadowTail) == 0x000280, "Member 'ULightningViolator_C::Image_ShadowTail' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Image_Tail) == 0x000288, "Member 'ULightningViolator_C::Image_Tail' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Overlay_Body) == 0x000290, "Member 'ULightningViolator_C::Overlay_Body' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, Overlay_Pointer) == 0x000298, "Member 'ULightningViolator_C::Overlay_Pointer' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, DefaultViolatorText) == 0x0002A0, "Member 'ULightningViolator_C::DefaultViolatorText' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, DefaultBGColor) == 0x0002B8, "Member 'ULightningViolator_C::DefaultBGColor' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, bShowTail) == 0x0002C8, "Member 'ULightningViolator_C::bShowTail' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, TailHorizontalAlignment) == 0x0002C9, "Member 'ULightningViolator_C::TailHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(ULightningViolator_C, ShowOnTop) == 0x0002CA, "Member 'ULightningViolator_C::ShowOnTop' has a wrong offset!");

}

