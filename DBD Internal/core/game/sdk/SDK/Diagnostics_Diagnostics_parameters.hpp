#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Diagnostics_Diagnostics

#include "Basic.hpp"

#include "Diagnostics_DiagnosticsLogLevel_structs.hpp"


namespace SDK::Params
{

// Function Diagnostics_Diagnostics.Diagnostics.Log
// 0x0028 (0x0028 - 0x0000)
struct Diagnostics_Log final
{
public:
	EDiagnosticsLogLevel                          __verse_0x5B36F6B3_vLogLevel;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 __verse_0x5A4551A8_channel;                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 __verse_0xD212B012_message;                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_Log) == 0x000008, "Wrong alignment on Diagnostics_Log");
static_assert(sizeof(Diagnostics_Log) == 0x000028, "Wrong size on Diagnostics_Log");
static_assert(offsetof(Diagnostics_Log, __verse_0x5B36F6B3_vLogLevel) == 0x000000, "Member 'Diagnostics_Log::__verse_0x5B36F6B3_vLogLevel' has a wrong offset!");
static_assert(offsetof(Diagnostics_Log, __verse_0x5A4551A8_channel) == 0x000008, "Member 'Diagnostics_Log::__verse_0x5A4551A8_channel' has a wrong offset!");
static_assert(offsetof(Diagnostics_Log, __verse_0xD212B012_message) == 0x000018, "Member 'Diagnostics_Log::__verse_0xD212B012_message' has a wrong offset!");

// Function Diagnostics_Diagnostics.Diagnostics.logCallstackToScreen
// 0x0010 (0x0010 - 0x0000)
struct Diagnostics_logCallstackToScreen final
{
public:
	class UColor*                                 __verse_0x6E3776DD_color;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x2EF20D38_duration;                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_logCallstackToScreen) == 0x000008, "Wrong alignment on Diagnostics_logCallstackToScreen");
static_assert(sizeof(Diagnostics_logCallstackToScreen) == 0x000010, "Wrong size on Diagnostics_logCallstackToScreen");
static_assert(offsetof(Diagnostics_logCallstackToScreen, __verse_0x6E3776DD_color) == 0x000000, "Member 'Diagnostics_logCallstackToScreen::__verse_0x6E3776DD_color' has a wrong offset!");
static_assert(offsetof(Diagnostics_logCallstackToScreen, __verse_0x2EF20D38_duration) == 0x000008, "Member 'Diagnostics_logCallstackToScreen::__verse_0x2EF20D38_duration' has a wrong offset!");

// Function Diagnostics_Diagnostics.Diagnostics.logMsg
// 0x0010 (0x0010 - 0x0000)
struct Diagnostics_logMsg final
{
public:
	class FString                                 __verse_0xD212B012_message;                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_logMsg) == 0x000008, "Wrong alignment on Diagnostics_logMsg");
static_assert(sizeof(Diagnostics_logMsg) == 0x000010, "Wrong size on Diagnostics_logMsg");
static_assert(offsetof(Diagnostics_logMsg, __verse_0xD212B012_message) == 0x000000, "Member 'Diagnostics_logMsg::__verse_0xD212B012_message' has a wrong offset!");

// Function Diagnostics_Diagnostics.Diagnostics.logToScreen
// 0x0038 (0x0038 - 0x0000)
struct Diagnostics_logToScreen final
{
public:
	EDiagnosticsLogLevel                          __verse_0x5B36F6B3_vLogLevel;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 __verse_0x5A4551A8_channel;                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 __verse_0xD212B012_message;                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class UColor*                                 __verse_0x6E3776DD_color;                          // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x2EF20D38_duration;                       // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_logToScreen) == 0x000008, "Wrong alignment on Diagnostics_logToScreen");
static_assert(sizeof(Diagnostics_logToScreen) == 0x000038, "Wrong size on Diagnostics_logToScreen");
static_assert(offsetof(Diagnostics_logToScreen, __verse_0x5B36F6B3_vLogLevel) == 0x000000, "Member 'Diagnostics_logToScreen::__verse_0x5B36F6B3_vLogLevel' has a wrong offset!");
static_assert(offsetof(Diagnostics_logToScreen, __verse_0x5A4551A8_channel) == 0x000008, "Member 'Diagnostics_logToScreen::__verse_0x5A4551A8_channel' has a wrong offset!");
static_assert(offsetof(Diagnostics_logToScreen, __verse_0xD212B012_message) == 0x000018, "Member 'Diagnostics_logToScreen::__verse_0xD212B012_message' has a wrong offset!");
static_assert(offsetof(Diagnostics_logToScreen, __verse_0x6E3776DD_color) == 0x000028, "Member 'Diagnostics_logToScreen::__verse_0x6E3776DD_color' has a wrong offset!");
static_assert(offsetof(Diagnostics_logToScreen, __verse_0x2EF20D38_duration) == 0x000030, "Member 'Diagnostics_logToScreen::__verse_0x2EF20D38_duration' has a wrong offset!");

}

