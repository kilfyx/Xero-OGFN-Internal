#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Nightmare_Cloak

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Nightmare_Cloak.GA_Nightmare_Cloak_C.ExecuteUbergraph_GA_Nightmare_Cloak
// 0x0004 (0x0004 - 0x0000)
struct GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak) == 0x000004, "Wrong alignment on GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak");
static_assert(sizeof(GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak) == 0x000004, "Wrong size on GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak");
static_assert(offsetof(GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak, EntryPoint) == 0x000000, "Member 'GA_Nightmare_Cloak_C_ExecuteUbergraph_GA_Nightmare_Cloak::EntryPoint' has a wrong offset!");

// Function GA_Nightmare_Cloak.GA_Nightmare_Cloak_C.K2_CanActivateAbility
// 0x00D0 (0x00D0 - 0x0000)
struct GA_Nightmare_Cloak_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_K2_CanActivateAbility_RelevantTags;       // 0x0078(0x0020)()
	bool                                          CallFunc_K2_CanActivateAbility_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWaterImmersionDepth_ReturnValue;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Nightmare_Cloak_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Nightmare_Cloak_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Nightmare_Cloak_C_K2_CanActivateAbility) == 0x0000D0, "Wrong size on GA_Nightmare_Cloak_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_RelevantTags) == 0x000078, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_ReturnValue) == 0x000098, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_GetValueAtLevel_ReturnValue) == 0x00009C, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000A0, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0000B4, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, K2Node_DynamicCast_AsFort_Pawn) == 0x0000B8, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C1, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_GetWaterImmersionDepth_ReturnValue) == 0x0000C4, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_GetWaterImmersionDepth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000C8, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_BooleanOR_ReturnValue) == 0x0000C9, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, Temp_bool_Variable) == 0x0000CA, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_Not_PreBool_ReturnValue) == 0x0000CB, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Nightmare_Cloak_C_K2_CanActivateAbility, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000CC, "Member 'GA_Nightmare_Cloak_C_K2_CanActivateAbility::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

}

