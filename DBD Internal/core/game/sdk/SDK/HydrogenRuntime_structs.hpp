#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HydrogenRuntime

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum HydrogenRuntime.EHydrogenCaptureStateEnum
// NumValues: 0x0006
enum class EHydrogenCaptureStateEnum : uint8
{
	Contested                                = 0,
	Capturing                                = 1,
	Erasing                                  = 2,
	Idle                                     = 3,
	Captured                                 = 4,
	EHydrogenCaptureStateEnum_MAX            = 5,
};

// ScriptStruct HydrogenRuntime.HydrogenCompassIcon
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FHydrogenCompassIcon final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FHydrogenCompassIcon) == 0x000008, "Wrong alignment on FHydrogenCompassIcon");
static_assert(sizeof(FHydrogenCompassIcon) == 0x000070, "Wrong size on FHydrogenCompassIcon");

// ScriptStruct HydrogenRuntime.TeamPlayerCountEntry
// 0x0008 (0x0008 - 0x0000)
struct FTeamPlayerCountEntry final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerCount;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTeamPlayerCountEntry) == 0x000004, "Wrong alignment on FTeamPlayerCountEntry");
static_assert(sizeof(FTeamPlayerCountEntry) == 0x000008, "Wrong size on FTeamPlayerCountEntry");
static_assert(offsetof(FTeamPlayerCountEntry, Team) == 0x000000, "Member 'FTeamPlayerCountEntry::Team' has a wrong offset!");
static_assert(offsetof(FTeamPlayerCountEntry, PlayerCount) == 0x000004, "Member 'FTeamPlayerCountEntry::PlayerCount' has a wrong offset!");

// ScriptStruct HydrogenRuntime.HydrogenPathNames
// 0x0040 (0x0040 - 0x0000)
struct FHydrogenPathNames final
{
public:
	struct FScalableFloat                         bPathEnabled;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                           PathGameplayTag;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           PathNames;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHydrogenPathNames) == 0x000008, "Wrong alignment on FHydrogenPathNames");
static_assert(sizeof(FHydrogenPathNames) == 0x000040, "Wrong size on FHydrogenPathNames");
static_assert(offsetof(FHydrogenPathNames, bPathEnabled) == 0x000000, "Member 'FHydrogenPathNames::bPathEnabled' has a wrong offset!");
static_assert(offsetof(FHydrogenPathNames, PathGameplayTag) == 0x000028, "Member 'FHydrogenPathNames::PathGameplayTag' has a wrong offset!");
static_assert(offsetof(FHydrogenPathNames, PathNames) == 0x000030, "Member 'FHydrogenPathNames::PathNames' has a wrong offset!");

// ScriptStruct HydrogenRuntime.VictoryPointIncreasesEntry
// 0x0008 (0x0008 - 0x0000)
struct FVictoryPointIncreasesEntry final
{
public:
	int32                                         CapturePoints;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VictoryPointIncrease;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVictoryPointIncreasesEntry) == 0x000004, "Wrong alignment on FVictoryPointIncreasesEntry");
static_assert(sizeof(FVictoryPointIncreasesEntry) == 0x000008, "Wrong size on FVictoryPointIncreasesEntry");
static_assert(offsetof(FVictoryPointIncreasesEntry, CapturePoints) == 0x000000, "Member 'FVictoryPointIncreasesEntry::CapturePoints' has a wrong offset!");
static_assert(offsetof(FVictoryPointIncreasesEntry, VictoryPointIncrease) == 0x000004, "Member 'FVictoryPointIncreasesEntry::VictoryPointIncrease' has a wrong offset!");

// ScriptStruct HydrogenRuntime.TeamPointsEntry
// 0x0014 (0x0014 - 0x0000)
struct FTeamPointsEntry final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CapturePointsTotal;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CapturePointsCounted;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VictoryPoints;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseToVictoryPointGoal;                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTeamPointsEntry) == 0x000004, "Wrong alignment on FTeamPointsEntry");
static_assert(sizeof(FTeamPointsEntry) == 0x000014, "Wrong size on FTeamPointsEntry");
static_assert(offsetof(FTeamPointsEntry, Team) == 0x000000, "Member 'FTeamPointsEntry::Team' has a wrong offset!");
static_assert(offsetof(FTeamPointsEntry, CapturePointsTotal) == 0x000004, "Member 'FTeamPointsEntry::CapturePointsTotal' has a wrong offset!");
static_assert(offsetof(FTeamPointsEntry, CapturePointsCounted) == 0x000008, "Member 'FTeamPointsEntry::CapturePointsCounted' has a wrong offset!");
static_assert(offsetof(FTeamPointsEntry, VictoryPoints) == 0x00000C, "Member 'FTeamPointsEntry::VictoryPoints' has a wrong offset!");
static_assert(offsetof(FTeamPointsEntry, bCloseToVictoryPointGoal) == 0x000010, "Member 'FTeamPointsEntry::bCloseToVictoryPointGoal' has a wrong offset!");

}

