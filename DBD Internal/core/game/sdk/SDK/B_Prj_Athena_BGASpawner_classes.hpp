#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_BGASpawner

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_BGASpawner.B_Prj_Athena_BGASpawner_C
// 0x0080 (0x08F8 - 0x0878)
class AB_Prj_Athena_BGASpawner_C : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         FoundBuildingOnDied;                               // 0x0880(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bResumeSimulation;                                 // 0x0890(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_891[0x3];                                      // 0x0891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToKnock;                                // 0x0894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLaunchPower;                                    // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        BeatAudioComponent;                                // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatMultiplierForStart;                            // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatsPerLoop;                                      // 0x08AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBeatInTheLoop;                              // 0x08B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLaunchPower;                                    // 0x08B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BGAToSpawn;                                        // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundActivate;                                     // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnScale;                                        // 0x08C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosOffsetAlongNormal;                         // 0x08D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosZOffsetInWater;                            // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x08DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SpawnOnCollision;                                  // 0x08DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE[0x2];                                      // 0x08DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDotWithUp;                                      // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontSpawnOnVehicles;                               // 0x08E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E5[0x3];                                      // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Splash_Sound;                                      // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedBGA;                                        // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Athena_BGASpawner(int32 EntryPoint);
	void Held_Water_Impact();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	bool WillBounceOffTarget(const struct FHitResult& Hit);
	class AActor* SpawnBGA_(const struct FVector& Normal, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& Pos, bool FromWater);
	void GetClosestPoint(class UPrimitiveComponent* Component, const struct FVector& StartingPoint, struct FVector* Point);
	void CheckForWater_(const struct FVector& CurrPos, class AActor* HitActor, struct FVector* PosAboveWater);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_BGASpawner_C">();
	}
	static class AB_Prj_Athena_BGASpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_BGASpawner_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_BGASpawner_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_BGASpawner_C");
static_assert(sizeof(AB_Prj_Athena_BGASpawner_C) == 0x0008F8, "Wrong size on AB_Prj_Athena_BGASpawner_C");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, UberGraphFrame) == 0x000878, "Member 'AB_Prj_Athena_BGASpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, FoundBuildingOnDied) == 0x000880, "Member 'AB_Prj_Athena_BGASpawner_C::FoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, bResumeSimulation) == 0x000890, "Member 'AB_Prj_Athena_BGASpawner_C::bResumeSimulation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDistanceToKnock) == 0x000894, "Member 'AB_Prj_Athena_BGASpawner_C::MinDistanceToKnock' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MaxLaunchPower) == 0x000898, "Member 'AB_Prj_Athena_BGASpawner_C::MaxLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatAudioComponent) == 0x0008A0, "Member 'AB_Prj_Athena_BGASpawner_C::BeatAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatMultiplierForStart) == 0x0008A8, "Member 'AB_Prj_Athena_BGASpawner_C::BeatMultiplierForStart' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatsPerLoop) == 0x0008AC, "Member 'AB_Prj_Athena_BGASpawner_C::BeatsPerLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, CurrentBeatInTheLoop) == 0x0008B0, "Member 'AB_Prj_Athena_BGASpawner_C::CurrentBeatInTheLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinLaunchPower) == 0x0008B4, "Member 'AB_Prj_Athena_BGASpawner_C::MinLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BGAToSpawn) == 0x0008B8, "Member 'AB_Prj_Athena_BGASpawner_C::BGAToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SoundActivate) == 0x0008C0, "Member 'AB_Prj_Athena_BGASpawner_C::SoundActivate' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnScale) == 0x0008C8, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosOffsetAlongNormal) == 0x0008D4, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosOffsetAlongNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosZOffsetInWater) == 0x0008D8, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosZOffsetInWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Spawned) == 0x0008DC, "Member 'AB_Prj_Athena_BGASpawner_C::Spawned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnOnCollision) == 0x0008DD, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnOnCollision' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDotWithUp) == 0x0008E0, "Member 'AB_Prj_Athena_BGASpawner_C::MinDotWithUp' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, DontSpawnOnVehicles) == 0x0008E4, "Member 'AB_Prj_Athena_BGASpawner_C::DontSpawnOnVehicles' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Splash_Sound) == 0x0008E8, "Member 'AB_Prj_Athena_BGASpawner_C::Splash_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnedBGA) == 0x0008F0, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnedBGA' has a wrong offset!");

}

