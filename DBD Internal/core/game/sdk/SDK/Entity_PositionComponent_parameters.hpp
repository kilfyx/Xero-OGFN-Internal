#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_PositionComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function Entity_PositionComponent.PositionComponent.addToPosition
// 0x0008 (0x0008 - 0x0000)
struct PositionComponent_addToPosition final
{
public:
	class UVector3*                               __verse_0x5C20106F_v;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_addToPosition) == 0x000008, "Wrong alignment on PositionComponent_addToPosition");
static_assert(sizeof(PositionComponent_addToPosition) == 0x000008, "Wrong size on PositionComponent_addToPosition");
static_assert(offsetof(PositionComponent_addToPosition, __verse_0x5C20106F_v) == 0x000000, "Member 'PositionComponent_addToPosition::__verse_0x5C20106F_v' has a wrong offset!");

// Function Entity_PositionComponent.PositionComponent.GetPosition
// 0x0008 (0x0008 - 0x0000)
struct PositionComponent_GetPosition final
{
public:
	class UVector3*                               RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_GetPosition) == 0x000008, "Wrong alignment on PositionComponent_GetPosition");
static_assert(sizeof(PositionComponent_GetPosition) == 0x000008, "Wrong size on PositionComponent_GetPosition");
static_assert(offsetof(PositionComponent_GetPosition, RetVal) == 0x000000, "Member 'PositionComponent_GetPosition::RetVal' has a wrong offset!");

// Function Entity_PositionComponent.PositionComponent.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct PositionComponent_SetPosition final
{
public:
	class UVector3*                               __verse_0x5C20106F_v;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_SetPosition) == 0x000008, "Wrong alignment on PositionComponent_SetPosition");
static_assert(sizeof(PositionComponent_SetPosition) == 0x000008, "Wrong size on PositionComponent_SetPosition");
static_assert(offsetof(PositionComponent_SetPosition, __verse_0x5C20106F_v) == 0x000000, "Member 'PositionComponent_SetPosition::__verse_0x5C20106F_v' has a wrong offset!");

// Function Entity_PositionComponent.PositionComponent.X
// 0x0004 (0x0004 - 0x0000)
struct PositionComponent_X final
{
public:
	float                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_X) == 0x000004, "Wrong alignment on PositionComponent_X");
static_assert(sizeof(PositionComponent_X) == 0x000004, "Wrong size on PositionComponent_X");
static_assert(offsetof(PositionComponent_X, RetVal) == 0x000000, "Member 'PositionComponent_X::RetVal' has a wrong offset!");

// Function Entity_PositionComponent.PositionComponent.Y
// 0x0004 (0x0004 - 0x0000)
struct PositionComponent_Y final
{
public:
	float                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_Y) == 0x000004, "Wrong alignment on PositionComponent_Y");
static_assert(sizeof(PositionComponent_Y) == 0x000004, "Wrong size on PositionComponent_Y");
static_assert(offsetof(PositionComponent_Y, RetVal) == 0x000000, "Member 'PositionComponent_Y::RetVal' has a wrong offset!");

// Function Entity_PositionComponent.PositionComponent.Z
// 0x0004 (0x0004 - 0x0000)
struct PositionComponent_Z final
{
public:
	float                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PositionComponent_Z) == 0x000004, "Wrong alignment on PositionComponent_Z");
static_assert(sizeof(PositionComponent_Z) == 0x000004, "Wrong size on PositionComponent_Z");
static_assert(offsetof(PositionComponent_Z, RetVal) == 0x000000, "Member 'PositionComponent_Z::RetVal' has a wrong offset!");

}

