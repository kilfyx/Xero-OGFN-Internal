#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SurfaceChange_Sand_BurrowedMound

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SurfaceChange_Sand_BurrowedMound.B_SurfaceChange_Sand_BurrowedMound_C
// 0x0138 (0x0938 - 0x0800)
class AB_SurfaceChange_Sand_BurrowedMound_C final : public ABuildingGameplayActorSandMound
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0800(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortAsyncActorDetectionComponent*      FortAsyncActorDetection;                           // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      BlockBuildingComponent;                            // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_Sand_Mound_Scale_EB5EB9DA4D72325AAFCB0D981F887604; // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Scale_Sand_Mound__Direction_EB5EB9DA4D72325AAFCB0D981F887604; // 0x0824(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_825[0x3];                                      // 0x0825(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Scale_Sand_Mound;                                  // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DetachLocation;                                    // 0x0830(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttachParentActor;                                 // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DamageVsBuildings;                                 // 0x0848(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinVelocityToDamageBuildings;                      // 0x0870(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CheckForBuildingsForwardDistance;                  // 0x0898(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CheckForBuildingsRadius;                           // 0x08C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CheckForBuildingsTickTime;                         // 0x08E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         GE_Damaged;                                        // 0x0910(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 GE_HealthRegen;                                    // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetMeshRotation_0;                              // 0x0928(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MeshRotationInterpSpped;                           // 0x0934(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_SurfaceChange_Sand_BurrowedMound(int32 EntryPoint);
	void HealthChanged();
	void ReceiveBeginPlay();
	void Damaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void DetachAndDie(const struct FVector& Location);
	void Scale_Sand_Mound__UpdateFunc();
	void Scale_Sand_Mound__FinishedFunc();
	void OnRep_Location();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SurfaceChange_Sand_BurrowedMound_C">();
	}
	static class AB_SurfaceChange_Sand_BurrowedMound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SurfaceChange_Sand_BurrowedMound_C>();
	}
};
static_assert(alignof(AB_SurfaceChange_Sand_BurrowedMound_C) == 0x000008, "Wrong alignment on AB_SurfaceChange_Sand_BurrowedMound_C");
static_assert(sizeof(AB_SurfaceChange_Sand_BurrowedMound_C) == 0x000938, "Wrong size on AB_SurfaceChange_Sand_BurrowedMound_C");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, UberGraphFrame) == 0x000800, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, FortAsyncActorDetection) == 0x000808, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::FortAsyncActorDetection' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, Niagara) == 0x000810, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::Niagara' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, BlockBuildingComponent) == 0x000818, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::BlockBuildingComponent' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, Scale_Sand_Mound_Scale_EB5EB9DA4D72325AAFCB0D981F887604) == 0x000820, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::Scale_Sand_Mound_Scale_EB5EB9DA4D72325AAFCB0D981F887604' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, Scale_Sand_Mound__Direction_EB5EB9DA4D72325AAFCB0D981F887604) == 0x000824, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::Scale_Sand_Mound__Direction_EB5EB9DA4D72325AAFCB0D981F887604' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, Scale_Sand_Mound) == 0x000828, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::Scale_Sand_Mound' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, DetachLocation) == 0x000830, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::DetachLocation' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, AttachParentActor) == 0x000840, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::AttachParentActor' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, DamageVsBuildings) == 0x000848, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::DamageVsBuildings' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, MinVelocityToDamageBuildings) == 0x000870, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::MinVelocityToDamageBuildings' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, CheckForBuildingsForwardDistance) == 0x000898, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::CheckForBuildingsForwardDistance' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, CheckForBuildingsRadius) == 0x0008C0, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::CheckForBuildingsRadius' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, CheckForBuildingsTickTime) == 0x0008E8, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::CheckForBuildingsTickTime' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, GE_Damaged) == 0x000910, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::GE_Damaged' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, GE_HealthRegen) == 0x000920, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::GE_HealthRegen' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, TargetMeshRotation_0) == 0x000928, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::TargetMeshRotation_0' has a wrong offset!");
static_assert(offsetof(AB_SurfaceChange_Sand_BurrowedMound_C, MeshRotationInterpSpped) == 0x000934, "Member 'AB_SurfaceChange_Sand_BurrowedMound_C::MeshRotationInterpSpped' has a wrong offset!");

}

