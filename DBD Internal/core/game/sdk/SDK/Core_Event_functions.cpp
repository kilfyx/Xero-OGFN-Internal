#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Core_Event

#include "Basic.hpp"

#include "Core_Event_classes.hpp"
#include "Core_Event_parameters.hpp"


namespace SDK
{

// Function Core_Event.Context_Event_wait.Update
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UContext_Event_wait::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Context_Event_wait", "Update");

	Params::Context_Event_wait_Update Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Core_Event.Event.$InitCDO
// ()

void UEvent::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Event", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Core_Event.Event.$InitInstance
// ()

void UEvent::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Event", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Core_Event.Event.getWaitCount
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UEvent::getWaitCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Event", "getWaitCount");

	Params::Event_getWaitCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Core_Event.Event.signal
// (Native, Public, BlueprintCallable)

void UEvent::signal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Event", "signal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

