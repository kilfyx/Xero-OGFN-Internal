#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SurfaceChange_Sand

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SurfaceChange_Sand.GA_SurfaceChange_Sand_C
// 0x01C0 (0x0D30 - 0x0B70)
class UGA_SurfaceChange_Sand_C final : public UFortGameplayAbility_SurfaceChange_Sand
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Handle_AddSnareTimer;                              // 0x0B78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Handle_SnareGE;                                    // 0x0B80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Handle_CheckBurrowedAbilityActive;                 // 0x0B88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackCount;                                     // 0x0B90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_Sinking;                                        // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         TimeBetweenAddingSnareStacks;                      // 0x0BA0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_Burrowed;                                       // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Pawn;                                              // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEffectStackChange* Task_WaitSnareGEStackChange;                   // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEffectRemoved* Task_WaitSnareGERemoved;                           // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Sinking;                                       // 0x0BE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         AdjustHeight_Sinking;                              // 0x0BF0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         AdjustSpeed_Sinking;                               // 0x0C18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         AdjustHeight_Snare;                                // 0x0C40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         AdjustSpeed_Snare;                                 // 0x0C68(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Tag_GameplayEvent_Unburrow;                        // 0x0C90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_GameplayEvent_Died;                            // 0x0C98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_GameplayStatus_DBNO;                           // 0x0CA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_GameplayEvent_DBNO;                            // 0x0CA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x0CB0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB1[0x3];                                      // 0x0CB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Tag_GameplayEvent_Jump;                            // 0x0CB4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         AdjustHeight_Burrowed;                             // 0x0CC0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         AdjustSpeed_Burrowed;                              // 0x0CE8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Tag_RemoveAllEffects;                              // 0x0D10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Underwater;                                    // 0x0D18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Burrowed;                                      // 0x0D20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_BurrowedAbilityActive;                         // 0x0D28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_SurfaceChange_Sand(int32 EntryPoint);
	void CancelCheckBurrowedAbilityActive();
	void CheckBurrowedAbilityActive();
	void BurrowedInvisibilityFailsafe();
	void StartSnareMonitor();
	void OnPawnDestroyed(class AActor* DestroyedActor);
	void RepFromClientRemoveGEResetMeshHeight();
	void StartGameplayEventManager();
	void RemoveGEResetMeshHeight();
	void UpdatePawnMeshHeightAdjust(bool Reset);
	void TryStartSnareStackMonitor();
	void ResetSnareStackMonitor();
	void MovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void Added_E21473DC44E694E00ABDE9A9E9868B5E();
	void Added_D67949EA4B1033677D0304BFF633D230();
	void Added_8829590246932C80B18459A512ECD766();
	void Added_709625FA42BD6074A8B324B182388B50();
	void EventReceived_CE83B58349BB8A01393C3494113A5EC8(const struct FGameplayEventData& Payload);
	void Added_73CCC815473BDF85DA373384D45E2E8A();
	void EventReceived_5D2F39E24252C3B3DCD2B78E038DCD75(const struct FGameplayEventData& Payload);
	void EventReceived_DD01A4BF47D0311DCB281E96A78ABD58(const struct FGameplayEventData& Payload);
	void OnChange_0EF820D3457F6F827DD19EB3B581F798(const struct FActiveGameplayEffectHandle& Handle, int32 NewCount, int32 OldCount);
	void InvalidHandle_0EF820D3457F6F827DD19EB3B581F798(const struct FActiveGameplayEffectHandle& Handle, int32 NewCount, int32 OldCount);
	void OnRemoved_A9C3352641C06BD58F07C285B5EE8AF5(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void InvalidHandle_A9C3352641C06BD58F07C285B5EE8AF5(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SurfaceChange_Sand_C">();
	}
	static class UGA_SurfaceChange_Sand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SurfaceChange_Sand_C>();
	}
};
static_assert(alignof(UGA_SurfaceChange_Sand_C) == 0x000008, "Wrong alignment on UGA_SurfaceChange_Sand_C");
static_assert(sizeof(UGA_SurfaceChange_Sand_C) == 0x000D30, "Wrong size on UGA_SurfaceChange_Sand_C");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, UberGraphFrame) == 0x000B70, "Member 'UGA_SurfaceChange_Sand_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Handle_AddSnareTimer) == 0x000B78, "Member 'UGA_SurfaceChange_Sand_C::Handle_AddSnareTimer' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Handle_SnareGE) == 0x000B80, "Member 'UGA_SurfaceChange_Sand_C::Handle_SnareGE' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Handle_CheckBurrowedAbilityActive) == 0x000B88, "Member 'UGA_SurfaceChange_Sand_C::Handle_CheckBurrowedAbilityActive' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, MaxStackCount) == 0x000B90, "Member 'UGA_SurfaceChange_Sand_C::MaxStackCount' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, GE_Sinking) == 0x000B98, "Member 'UGA_SurfaceChange_Sand_C::GE_Sinking' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, TimeBetweenAddingSnareStacks) == 0x000BA0, "Member 'UGA_SurfaceChange_Sand_C::TimeBetweenAddingSnareStacks' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, GE_Burrowed) == 0x000BC8, "Member 'UGA_SurfaceChange_Sand_C::GE_Burrowed' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Pawn) == 0x000BD0, "Member 'UGA_SurfaceChange_Sand_C::Pawn' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Task_WaitSnareGEStackChange) == 0x000BD8, "Member 'UGA_SurfaceChange_Sand_C::Task_WaitSnareGEStackChange' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Task_WaitSnareGERemoved) == 0x000BE0, "Member 'UGA_SurfaceChange_Sand_C::Task_WaitSnareGERemoved' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_Sinking) == 0x000BE8, "Member 'UGA_SurfaceChange_Sand_C::Tag_Sinking' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustHeight_Sinking) == 0x000BF0, "Member 'UGA_SurfaceChange_Sand_C::AdjustHeight_Sinking' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustSpeed_Sinking) == 0x000C18, "Member 'UGA_SurfaceChange_Sand_C::AdjustSpeed_Sinking' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustHeight_Snare) == 0x000C40, "Member 'UGA_SurfaceChange_Sand_C::AdjustHeight_Snare' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustSpeed_Snare) == 0x000C68, "Member 'UGA_SurfaceChange_Sand_C::AdjustSpeed_Snare' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_GameplayEvent_Unburrow) == 0x000C90, "Member 'UGA_SurfaceChange_Sand_C::Tag_GameplayEvent_Unburrow' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_GameplayEvent_Died) == 0x000C98, "Member 'UGA_SurfaceChange_Sand_C::Tag_GameplayEvent_Died' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_GameplayStatus_DBNO) == 0x000CA0, "Member 'UGA_SurfaceChange_Sand_C::Tag_GameplayStatus_DBNO' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_GameplayEvent_DBNO) == 0x000CA8, "Member 'UGA_SurfaceChange_Sand_C::Tag_GameplayEvent_DBNO' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, IsAlive) == 0x000CB0, "Member 'UGA_SurfaceChange_Sand_C::IsAlive' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_GameplayEvent_Jump) == 0x000CB4, "Member 'UGA_SurfaceChange_Sand_C::Tag_GameplayEvent_Jump' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustHeight_Burrowed) == 0x000CC0, "Member 'UGA_SurfaceChange_Sand_C::AdjustHeight_Burrowed' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, AdjustSpeed_Burrowed) == 0x000CE8, "Member 'UGA_SurfaceChange_Sand_C::AdjustSpeed_Burrowed' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_RemoveAllEffects) == 0x000D10, "Member 'UGA_SurfaceChange_Sand_C::Tag_RemoveAllEffects' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_Underwater) == 0x000D18, "Member 'UGA_SurfaceChange_Sand_C::Tag_Underwater' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_Burrowed) == 0x000D20, "Member 'UGA_SurfaceChange_Sand_C::Tag_Burrowed' has a wrong offset!");
static_assert(offsetof(UGA_SurfaceChange_Sand_C, Tag_BurrowedAbilityActive) == 0x000D28, "Member 'UGA_SurfaceChange_Sand_C::Tag_BurrowedAbilityActive' has a wrong offset!");

}

