#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Bow_Athena_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "B_Ranged_Generic_Athena_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Bow_Athena_Parent.B_Bow_Athena_Parent_C
// 0x00F0 (0x12F0 - 0x1200)
class AB_Bow_Athena_Parent_C : public AB_Ranged_Generic_Athena_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Bow_Athena_Parent_C;              // 0x1200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FullCharge_AudioComponent;                         // 0x1208(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Ambient_Charge_AudioComponent;                     // 0x1210(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x1218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          ReachedMaxCharge;                                  // 0x1220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          ReachedMinCharge;                                  // 0x1221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          ReachedHalfCharge;                                 // 0x1222(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          Charging;                                          // 0x1223(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_1224[0x4];                                     // 0x1224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ChargeAudio;                                       // 0x1228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Prj_Dummy;                                         // 0x1230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    DummyProjectile;                                   // 0x1238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x1240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x1244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         ProjectileVelocity;                                // 0x1248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x124C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyBouncieness;                                  // 0x1250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x1254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x1258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x125C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_125D[0x3];                                     // 0x125D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_MaxProjectileSpeed;                            // 0x1260(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 TrajectoryClass;                                   // 0x1288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_Bow_Parent_C*  BowTrajectory;                                     // 0x1290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_UpdateTrajectorySpline;                      // 0x1298(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsBowEquipped;                                     // 0x12A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_12A1[0x7];                                     // 0x12A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             LowTensionFire;                                    // 0x12A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NormalTensionFire;                                 // 0x12B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FullTensionFire;                                   // 0x12B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FullTensionFireP1;                                 // 0x12C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             LowTensionFireP1;                                  // 0x12C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NormalTensionFireP1;                               // 0x12D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_AdditionalFire;                                 // 0x12D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_FullyCharge;                                    // 0x12E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnCharge;                                    // 0x12E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Bow_Athena_Parent(int32 EntryPoint);
	void OnReachedMaxCharge();
	void ReceiveTick(float DeltaSeconds);
	void OnWeaponAttached();
	void IncreaseDrawStrength();
	void ResetCharge();
	void OnEndCharge();
	void OnChargeUp();
	void OnChargeDown();
	void K2_OnUnEquip();
	void EndOfCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnStartCharge();
	void OnReachedMinCharge();
	void SetupTrajectoryProjectile();
	void SetDummyVariables();
	void CalculateTrajectorySpline();
	void StartDrawAudio();
	void StopDrawAudio();

	void CalculateVelocity(float* Velocity) const;
	void SetupProjectileVariables(struct FVector* StartLocation, struct FVector* InitialVelocity, float* ProjectileVelocity_0, struct FRotator* OutRotation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Bow_Athena_Parent_C">();
	}
	static class AB_Bow_Athena_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Bow_Athena_Parent_C>();
	}
};
static_assert(alignof(AB_Bow_Athena_Parent_C) == 0x000008, "Wrong alignment on AB_Bow_Athena_Parent_C");
static_assert(sizeof(AB_Bow_Athena_Parent_C) == 0x0012F0, "Wrong size on AB_Bow_Athena_Parent_C");
static_assert(offsetof(AB_Bow_Athena_Parent_C, UberGraphFrame_B_Bow_Athena_Parent_C) == 0x001200, "Member 'AB_Bow_Athena_Parent_C::UberGraphFrame_B_Bow_Athena_Parent_C' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullCharge_AudioComponent) == 0x001208, "Member 'AB_Bow_Athena_Parent_C::FullCharge_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Ambient_Charge_AudioComponent) == 0x001210, "Member 'AB_Bow_Athena_Parent_C::Ambient_Charge_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, PlayerPawn) == 0x001218, "Member 'AB_Bow_Athena_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedMaxCharge) == 0x001220, "Member 'AB_Bow_Athena_Parent_C::ReachedMaxCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedMinCharge) == 0x001221, "Member 'AB_Bow_Athena_Parent_C::ReachedMinCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedHalfCharge) == 0x001222, "Member 'AB_Bow_Athena_Parent_C::ReachedHalfCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Charging) == 0x001223, "Member 'AB_Bow_Athena_Parent_C::Charging' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ChargeAudio) == 0x001228, "Member 'AB_Bow_Athena_Parent_C::ChargeAudio' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Prj_Dummy) == 0x001230, "Member 'AB_Bow_Athena_Parent_C::Prj_Dummy' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyProjectile) == 0x001238, "Member 'AB_Bow_Athena_Parent_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyExtent) == 0x001240, "Member 'AB_Bow_Athena_Parent_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyMaxSpeed) == 0x001244, "Member 'AB_Bow_Athena_Parent_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ProjectileVelocity) == 0x001248, "Member 'AB_Bow_Athena_Parent_C::ProjectileVelocity' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyFriction) == 0x00124C, "Member 'AB_Bow_Athena_Parent_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyBouncieness) == 0x001250, "Member 'AB_Bow_Athena_Parent_C::DummyBouncieness' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyGravity) == 0x001254, "Member 'AB_Bow_Athena_Parent_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyTimeStep) == 0x001258, "Member 'AB_Bow_Athena_Parent_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyCollisionChannel) == 0x00125C, "Member 'AB_Bow_Athena_Parent_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Row_MaxProjectileSpeed) == 0x001260, "Member 'AB_Bow_Athena_Parent_C::Row_MaxProjectileSpeed' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, TrajectoryClass) == 0x001288, "Member 'AB_Bow_Athena_Parent_C::TrajectoryClass' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, BowTrajectory) == 0x001290, "Member 'AB_Bow_Athena_Parent_C::BowTrajectory' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Timer_UpdateTrajectorySpline) == 0x001298, "Member 'AB_Bow_Athena_Parent_C::Timer_UpdateTrajectorySpline' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, IsBowEquipped) == 0x0012A0, "Member 'AB_Bow_Athena_Parent_C::IsBowEquipped' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, LowTensionFire) == 0x0012A8, "Member 'AB_Bow_Athena_Parent_C::LowTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NormalTensionFire) == 0x0012B0, "Member 'AB_Bow_Athena_Parent_C::NormalTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullTensionFire) == 0x0012B8, "Member 'AB_Bow_Athena_Parent_C::FullTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullTensionFireP1) == 0x0012C0, "Member 'AB_Bow_Athena_Parent_C::FullTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, LowTensionFireP1) == 0x0012C8, "Member 'AB_Bow_Athena_Parent_C::LowTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NormalTensionFireP1) == 0x0012D0, "Member 'AB_Bow_Athena_Parent_C::NormalTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FX_AdditionalFire) == 0x0012D8, "Member 'AB_Bow_Athena_Parent_C::FX_AdditionalFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FX_FullyCharge) == 0x0012E0, "Member 'AB_Bow_Athena_Parent_C::FX_FullyCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Sound_OnCharge) == 0x0012E8, "Member 'AB_Bow_Athena_Parent_C::Sound_OnCharge' has a wrong offset!");

}

