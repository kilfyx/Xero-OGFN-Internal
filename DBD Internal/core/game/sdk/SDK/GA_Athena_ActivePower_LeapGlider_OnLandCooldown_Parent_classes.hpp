#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent.GA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C
// 0x0038 (0x0AF0 - 0x0AB8)
class UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           Tag_SurfaceSwimming;                               // 0x0AC0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_InVehicle;                                     // 0x0AC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Tag_AssetTagToRemove;                              // 0x0AD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent(int32 EntryPoint);
	void K2_ActivateAbility();
	void CallRemove();
	void PawnLanded(const struct FHitResult& Hit);
	void SetUpBinds();
	void SetUpWaits();
	void Added_5E34F7544112B6D9154421AAB17CB5BA();
	void Added_5647B6024F8D299ABD8940AE9C5CE269();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C">();
	}
	static class UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C");
static_assert(sizeof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C) == 0x000AF0, "Wrong size on UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C");
static_assert(offsetof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C, Tag_SurfaceSwimming) == 0x000AC0, "Member 'UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C::Tag_SurfaceSwimming' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C, Tag_InVehicle) == 0x000AC8, "Member 'UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C::Tag_InVehicle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C, Tag_AssetTagToRemove) == 0x000AD0, "Member 'UGA_Athena_ActivePower_LeapGlider_OnLandCooldown_Parent_C::Tag_AssetTagToRemove' has a wrong offset!");

}

