#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemPerksListDetailWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemPerksListDetailWidget.ItemPerksListDetailWidget_C
// 0x0020 (0x0300 - 0x02E0)
class UItemPerksListDetailWidget_C final : public UFortItemDetailElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPerksList_C*                           PerksList;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RootBox;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowActiveAbilitiesOnly;                           // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WrapPerkTextAt;                                    // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetState(EFortPerksWidgetState InState, class UFortHero* InEvolutionOption);
	void HandlePostDifferentItemToDetailSet();
	void Construct();
	void ExecuteUbergraph_ItemPerksListDetailWidget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemPerksListDetailWidget_C">();
	}
	static class UItemPerksListDetailWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemPerksListDetailWidget_C>();
	}
};
static_assert(alignof(UItemPerksListDetailWidget_C) == 0x000008, "Wrong alignment on UItemPerksListDetailWidget_C");
static_assert(sizeof(UItemPerksListDetailWidget_C) == 0x000300, "Wrong size on UItemPerksListDetailWidget_C");
static_assert(offsetof(UItemPerksListDetailWidget_C, UberGraphFrame) == 0x0002E0, "Member 'UItemPerksListDetailWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemPerksListDetailWidget_C, PerksList) == 0x0002E8, "Member 'UItemPerksListDetailWidget_C::PerksList' has a wrong offset!");
static_assert(offsetof(UItemPerksListDetailWidget_C, RootBox) == 0x0002F0, "Member 'UItemPerksListDetailWidget_C::RootBox' has a wrong offset!");
static_assert(offsetof(UItemPerksListDetailWidget_C, ShowActiveAbilitiesOnly) == 0x0002F8, "Member 'UItemPerksListDetailWidget_C::ShowActiveAbilitiesOnly' has a wrong offset!");
static_assert(offsetof(UItemPerksListDetailWidget_C, WrapPerkTextAt) == 0x0002FC, "Member 'UItemPerksListDetailWidget_C::WrapPerkTextAt' has a wrong offset!");

}

