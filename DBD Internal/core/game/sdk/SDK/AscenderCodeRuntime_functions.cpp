#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AscenderCodeRuntime

#include "Basic.hpp"

#include "AscenderCodeRuntime_classes.hpp"
#include "AscenderCodeRuntime_parameters.hpp"


namespace SDK
{

// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandlePlayerStartedUsingHandle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::BP_HandlePlayerStartedUsingHandle(class AFortPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandlePlayerStartedUsingHandle");

	Params::FortAscenderZipline_BP_HandlePlayerStartedUsingHandle Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandlePlayerStoppedUsingHandle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::BP_HandlePlayerStoppedUsingHandle(class AFortPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandlePlayerStoppedUsingHandle");

	Params::FortAscenderZipline_BP_HandlePlayerStoppedUsingHandle Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleStartedLoweringCable
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleStartedLoweringCable()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleStartedLoweringCable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleStartedLoweringHandle
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleStartedLoweringHandle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleStartedLoweringHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleStoppedLoweringCable
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleStoppedLoweringCable()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleStoppedLoweringCable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleStoppedLoweringHandle
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleStoppedLoweringHandle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleStoppedLoweringHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleUpdatedLoweringCable
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleUpdatedLoweringCable()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleUpdatedLoweringCable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.BP_HandleUpdatedLoweringHandle
// (Event, Public, BlueprintEvent)

void AFortAscenderZipline::BP_HandleUpdatedLoweringHandle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_HandleUpdatedLoweringHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.HandleFloorActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::HandleFloorActorDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFloorActorDestroyed");

	Params::FortAscenderZipline_HandleFloorActorDestroyed Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.HandleFloorActorHealthChanged
// (Final, Native, Protected)

void AFortAscenderZipline::HandleFloorActorHealthChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFloorActorHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.HandlePawnUsingHandleDied
// (Final, Native, Protected)
// Parameters:
// class AFortPawn*                        DeadPawn                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::HandlePawnUsingHandleDied(class AFortPawn* DeadPawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePawnUsingHandleDied");

	Params::FortAscenderZipline_HandlePawnUsingHandleDied Parms{};

	Parms.DeadPawn = DeadPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.OnRep_InitialSplineEndLocation
// (Final, Native, Protected)

void AFortAscenderZipline::OnRep_InitialSplineEndLocation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_InitialSplineEndLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.OnRep_PawnUsingHandle
// (Final, Native, Protected)

void AFortAscenderZipline::OnRep_PawnUsingHandle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_PawnUsingHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.OnRep_TargetSplineEndLocation
// (Final, Native, Protected)

void AFortAscenderZipline::OnRep_TargetSplineEndLocation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_TargetSplineEndLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AscenderCodeRuntime.FortAscenderZipline.SetupAscender
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bFromConstruction                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromReplication                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::SetupAscender(const bool bFromConstruction, const bool bFromReplication)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupAscender");

	Params::FortAscenderZipline_SetupAscender Parms{};

	Parms.bFromConstruction = bFromConstruction;
	Parms.bFromReplication = bFromReplication;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.ApplyStructureDamage
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ABuildingSMActor*                 BuildingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageSource                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAscenderZipline::ApplyStructureDamage(class ABuildingSMActor* BuildingActor, class AActor* DamageSource) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplyStructureDamage");

	Params::FortAscenderZipline_ApplyStructureDamage Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.DamageSource = DamageSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AscenderCodeRuntime.FortAscenderZipline.GetHandleComponent
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AFortAscenderZipline::GetHandleComponent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHandleComponent");

	Params::FortAscenderZipline_GetHandleComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AscenderCodeRuntime.FortAscenderZipline.GetInteractComponentOverride
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InteractComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AFortAscenderZipline::GetInteractComponentOverride(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInteractComponentOverride");

	Params::FortAscenderZipline_GetInteractComponentOverride Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractComponent = InteractComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AscenderCodeRuntime.FortAscenderZipline.GetPawnUsingHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* AFortAscenderZipline::GetPawnUsingHandle() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPawnUsingHandle");

	Params::FortAscenderZipline_GetPawnUsingHandle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AscenderCodeRuntime.FortAscenderZipline.GetTopComponent
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AFortAscenderZipline::GetTopComponent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTopComponent");

	Params::FortAscenderZipline_GetTopComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

