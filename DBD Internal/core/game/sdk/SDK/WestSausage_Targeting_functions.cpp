#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WestSausage_Targeting

#include "Basic.hpp"

#include "WestSausage_Targeting_classes.hpp"
#include "WestSausage_Targeting_parameters.hpp"


namespace SDK
{

// Function WestSausage_Targeting.WestSausage_Targeting_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWestSausage_Targeting_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.ExecuteUbergraph_WestSausage_Targeting
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausage_Targeting_C::ExecuteUbergraph_WestSausage_Targeting(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "ExecuteUbergraph_WestSausage_Targeting");

	Params::WestSausage_Targeting_C_ExecuteUbergraph_WestSausage_Targeting Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.OnPawnChanged
// (BlueprintCallable, BlueprintEvent)

void UWestSausage_Targeting_C::OnPawnChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "OnPawnChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.OnWeaponEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortWeapon*                      PrevWeapon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausage_Targeting_C::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "OnWeaponEquipped");

	Params::WestSausage_Targeting_C_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.ReticleStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LockedOn_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attached_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausage_Targeting_C::ReticleStateChanged(bool LockedOn_0, bool Attached_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "ReticleStateChanged");

	Params::WestSausage_Targeting_C_ReticleStateChanged Parms{};

	Parms.LockedOn_0 = LockedOn_0;
	Parms.Attached_0 = Attached_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.ReticleUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AbleToUse_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausage_Targeting_C::ReticleUpdate(const struct FVector& Position, bool AbleToUse_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "ReticleUpdate");

	Params::WestSausage_Targeting_C_ReticleUpdate Parms{};

	Parms.Position = std::move(Position);
	Parms.AbleToUse_0 = AbleToUse_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.UpdateVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWestSausage_Targeting_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WestSausage_Targeting.WestSausage_Targeting_C.WorldToScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       ScreenLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausage_Targeting_C::WorldToScreen(const struct FVector& WorldLocation, struct FVector2D* ScreenLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WestSausage_Targeting_C", "WorldToScreen");

	Params::WestSausage_Targeting_C_WorldToScreen Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenLocation != nullptr)
		*ScreenLocation = std::move(Parms.ScreenLocation);
}

}

