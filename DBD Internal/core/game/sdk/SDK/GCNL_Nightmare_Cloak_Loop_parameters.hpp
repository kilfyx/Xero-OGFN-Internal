#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Nightmare_Cloak_Loop

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop
// 0x0358 (0x0358 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0020(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_1;                 // 0x00D8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x00E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TickMovementOpacity_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Velocity;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldRenderAsLocalPlayer_ReturnValue;    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x01F0(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x02A8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x02B8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x02F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_7;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetSkeletalMeshesForAllParts_ReturnValue; // 0x0340(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop) == 0x000358, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, EntryPoint) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_MyTarget_1) == 0x000018, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_Parameters_1) == 0x000020, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_ParticleComponents_1) == 0x0000D8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_AudioComponents_1) == 0x0000E8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000F8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_DeltaSeconds) == 0x000104, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_TickMovementOpacity_ReturnValue) == 0x000108, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_TickMovementOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00011C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CustomEvent_Velocity) == 0x000120, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000124, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_MapRangeClamped_ReturnValue) == 0x000128, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_2) == 0x00012C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_3) == 0x00013C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_4) == 0x00014C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_5) == 0x00015C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_IsValid_ReturnValue) == 0x00016C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_SetTimer_ReturnValue) == 0x000170, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000178, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000180, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Array_Get_Item) == 0x000188, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_IsValid_ReturnValue_1) == 0x000190, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000191, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000198, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, Temp_bool_Has_Been_Initd_Variable) == 0x0001A0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, Temp_bool_IsClosed_Variable) == 0x0001A1, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001A4, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Array_Length_ReturnValue) == 0x0001B4, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001B8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_IsValid_ReturnValue_2) == 0x0001C1, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_ShouldRenderAsLocalPlayer_ReturnValue) == 0x0001C2, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_ShouldRenderAsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001C4, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0001C8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x0001CC, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001D0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x0001D4, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001D8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_MyTarget) == 0x0001E8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_Parameters) == 0x0001F0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_ParticleComponents) == 0x0002A8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_AudioComponents) == 0x0002B8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_BurstCameraShakeInstance) == 0x0002C8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_Event_BurstDecalInstance) == 0x0002D0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_FInterpTo_ReturnValue) == 0x0002D8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x0002E0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, K2Node_DynamicCast_bSuccess_1) == 0x0002E8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0002F0, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x0002F8, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x0002FC, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x000300, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetValueAtLevel_ReturnValue_7) == 0x000304, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetValueAtLevel_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000308, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00030C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000310, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Add_FloatFloat_ReturnValue) == 0x000314, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000318, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000320, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_IsValid_ReturnValue_3) == 0x000328, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetVelocity_ReturnValue) == 0x00032C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_IsValid_ReturnValue_4) == 0x000338, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_VSize_ReturnValue) == 0x00033C, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_GetSkeletalMeshesForAllParts_ReturnValue) == 0x000340, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_GetSkeletalMeshesForAllParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Array_Length_ReturnValue_1) == 0x000350, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop, CallFunc_Greater_IntInt_ReturnValue) == 0x000354, "Member 'GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.OnRemovalGeneric
// 0x00F0 (0x00F0 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric) == 0x0000F0, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, MyTarget) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, Parameters) == 0x000008, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, ParticleComponents) == 0x0000C0, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, AudioComponents) == 0x0000D0, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric, BurstDecalInstance) == 0x0000E8, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.Audio Tick
// 0x0004 (0x0004 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_Audio_Tick final
{
public:
	float                                         Velocity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_Audio_Tick) == 0x000004, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_Audio_Tick");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_Audio_Tick) == 0x000004, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_Audio_Tick");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_Audio_Tick, Velocity) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_Audio_Tick::Velocity' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_ReceiveTick) == 0x000004, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_ReceiveTick");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_ReceiveTick) == 0x000004, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_ReceiveTick");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.OnLoopingStartGeneric
// 0x00E0 (0x00E0 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric) == 0x0000E0, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000C0, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric, AudioComponents) == 0x0000D0, "Member 'GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ShouldRenderAsLocalPlayer
// 0x0007 (0x0007 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsBroadcastClient_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPlayingReplay_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer) == 0x000001, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer) == 0x000007, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, ReturnValue) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_IsLocallyControlled_ReturnValue) == 0x000002, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_GetIsBroadcastClient_ReturnValue) == 0x000003, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_GetIsBroadcastClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_GetIsPlayingReplay_ReturnValue) == 0x000004, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_GetIsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.IsPlayerControllerFriendly
// 0x0010 (0x0010 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly final
{
public:
	class AController*                            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Friendly_Player;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly) == 0x000010, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly, PlayerController) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly::PlayerController' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly, Is_Friendly_Player) == 0x000008, "Member 'GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly::Is_Friendly_Player' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly, CallFunc_OnSameTeam_ReturnValue) == 0x00000A, "Member 'GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ApplyCloakMaterialOverride
// 0x0040 (0x0040 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0008(0x0028)(HasGetValueTypeHash)
	struct FGuid                                  CallFunc_ApplyMaterialOverrideLocal_ReturnValue;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride) == 0x000040, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000008, "Member 'GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride, CallFunc_ApplyMaterialOverrideLocal_ReturnValue) == 0x000030, "Member 'GCNL_Nightmare_Cloak_Loop_C_ApplyCloakMaterialOverride::CallFunc_ApplyMaterialOverrideLocal_ReturnValue' has a wrong offset!");

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.RemoveCloakMaterialOverride
// 0x0018 (0x0018 - 0x0000)
struct GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveMaterialOverrideLocal_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride) == 0x000008, "Wrong alignment on GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride");
static_assert(sizeof(GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride) == 0x000018, "Wrong size on GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000008, "Member 'GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride, CallFunc_RemoveMaterialOverrideLocal_ReturnValue) == 0x000010, "Member 'GCNL_Nightmare_Cloak_Loop_C_RemoveCloakMaterialOverride::CallFunc_RemoveMaterialOverrideLocal_ReturnValue' has a wrong offset!");

}

