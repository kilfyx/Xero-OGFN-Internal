#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassSelectionButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PassSelectionButton.PassSelectionButton_C.ExecuteUbergraph_PassSelectionButton
// 0x0088 (0x0088 - 0x0000)
struct PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHoverState;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsUsingTouch;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_2;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton) == 0x000008, "Wrong alignment on PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton");
static_assert(sizeof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton) == 0x000088, "Wrong size on PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, EntryPoint) == 0x000000, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_bool_Variable) == 0x000004, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_float_Variable) == 0x000008, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_float_Variable_1) == 0x00000C, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_bool_Variable_1) == 0x000010, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Event_bInHoverState) == 0x000011, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Event_bInHoverState' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Event_bIsUsingTouch) == 0x000012, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Event_bIsUsingTouch' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Event_IsDesignTime) == 0x000013, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_bool_Variable_2) == 0x000020, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Select_Default) == 0x000030, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_IsMobileGame_ReturnValue) == 0x000034, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000038, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Select_Default_1) == 0x000048, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_byte_Variable) == 0x000050, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, Temp_byte_Variable_1) == 0x000060, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, K2Node_Select_Default_2) == 0x000070, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_PlayAnimation_ReturnValue_2) == 0x000078, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton, CallFunc_PlayAnimation_ReturnValue_3) == 0x000080, "Member 'PassSelectionButton_C_ExecuteUbergraph_PassSelectionButton::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");

// Function PassSelectionButton.PassSelectionButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PassSelectionButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PassSelectionButton_C_PreConstruct) == 0x000001, "Wrong alignment on PassSelectionButton_C_PreConstruct");
static_assert(sizeof(PassSelectionButton_C_PreConstruct) == 0x000001, "Wrong size on PassSelectionButton_C_PreConstruct");
static_assert(offsetof(PassSelectionButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PassSelectionButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PassSelectionButton.PassSelectionButton_C.BP_OnHoverStateChanged
// 0x0002 (0x0002 - 0x0000)
struct PassSelectionButton_C_BP_OnHoverStateChanged final
{
public:
	bool                                          bInHoverState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsUsingTouch;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PassSelectionButton_C_BP_OnHoverStateChanged) == 0x000001, "Wrong alignment on PassSelectionButton_C_BP_OnHoverStateChanged");
static_assert(sizeof(PassSelectionButton_C_BP_OnHoverStateChanged) == 0x000002, "Wrong size on PassSelectionButton_C_BP_OnHoverStateChanged");
static_assert(offsetof(PassSelectionButton_C_BP_OnHoverStateChanged, bInHoverState) == 0x000000, "Member 'PassSelectionButton_C_BP_OnHoverStateChanged::bInHoverState' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_BP_OnHoverStateChanged, bIsUsingTouch) == 0x000001, "Member 'PassSelectionButton_C_BP_OnHoverStateChanged::bIsUsingTouch' has a wrong offset!");

// Function PassSelectionButton.PassSelectionButton_C.SetMaterialColors
// 0x0038 (0x0038 - 0x0000)
struct PassSelectionButton_C_SetMaterialColors final
{
public:
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassSelectionButton_C_SetMaterialColors) == 0x000008, "Wrong alignment on PassSelectionButton_C_SetMaterialColors");
static_assert(sizeof(PassSelectionButton_C_SetMaterialColors) == 0x000038, "Wrong size on PassSelectionButton_C_SetMaterialColors");
static_assert(offsetof(PassSelectionButton_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000000, "Member 'PassSelectionButton_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000010, "Member 'PassSelectionButton_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_SetMaterialColors, CallFunc_LinearColorLerp_ReturnValue) == 0x000020, "Member 'PassSelectionButton_C_SetMaterialColors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassSelectionButton_C_SetMaterialColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'PassSelectionButton_C_SetMaterialColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

