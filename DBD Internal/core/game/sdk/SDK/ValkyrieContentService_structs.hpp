#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValkyrieContentService

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct ValkyrieContentService.ValkyrieContentServiceListInfoMeta
// 0x0020 (0x0020 - 0x0000)
struct FValkyrieContentServiceListInfoMeta final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FValkyrieContentServiceListInfoMeta) == 0x000008, "Wrong alignment on FValkyrieContentServiceListInfoMeta");
static_assert(sizeof(FValkyrieContentServiceListInfoMeta) == 0x000020, "Wrong size on FValkyrieContentServiceListInfoMeta");
static_assert(offsetof(FValkyrieContentServiceListInfoMeta, Title) == 0x000000, "Member 'FValkyrieContentServiceListInfoMeta::Title' has a wrong offset!");
static_assert(offsetof(FValkyrieContentServiceListInfoMeta, Description) == 0x000010, "Member 'FValkyrieContentServiceListInfoMeta::Description' has a wrong offset!");

// ScriptStruct ValkyrieContentService.ValkyrieContentServiceListInfo
// 0x0038 (0x0038 - 0x0000)
struct FValkyrieContentServiceListInfo final
{
public:
	class FString                                 ModuleId;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              Created;                                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValkyrieContentServiceListInfoMeta    Meta;                                              // 0x0018(0x0020)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FValkyrieContentServiceListInfo) == 0x000008, "Wrong alignment on FValkyrieContentServiceListInfo");
static_assert(sizeof(FValkyrieContentServiceListInfo) == 0x000038, "Wrong size on FValkyrieContentServiceListInfo");
static_assert(offsetof(FValkyrieContentServiceListInfo, ModuleId) == 0x000000, "Member 'FValkyrieContentServiceListInfo::ModuleId' has a wrong offset!");
static_assert(offsetof(FValkyrieContentServiceListInfo, Created) == 0x000010, "Member 'FValkyrieContentServiceListInfo::Created' has a wrong offset!");
static_assert(offsetof(FValkyrieContentServiceListInfo, Meta) == 0x000018, "Member 'FValkyrieContentServiceListInfo::Meta' has a wrong offset!");

// ScriptStruct ValkyrieContentService.ValkyrieContentServiceListResults
// 0x0018 (0x0018 - 0x0000)
struct FValkyrieContentServiceListResults final
{
public:
	int32                                         Limit;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FValkyrieContentServiceListInfo> Results;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FValkyrieContentServiceListResults) == 0x000008, "Wrong alignment on FValkyrieContentServiceListResults");
static_assert(sizeof(FValkyrieContentServiceListResults) == 0x000018, "Wrong size on FValkyrieContentServiceListResults");
static_assert(offsetof(FValkyrieContentServiceListResults, Limit) == 0x000000, "Member 'FValkyrieContentServiceListResults::Limit' has a wrong offset!");
static_assert(offsetof(FValkyrieContentServiceListResults, Results) == 0x000008, "Member 'FValkyrieContentServiceListResults::Results' has a wrong offset!");

}

