#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Nightmare_Cloak

#include "Basic.hpp"

#include "GA_Athena_ActivePower_GenericTargetApplyEffectToSelf_Parent_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Nightmare_Cloak.GA_Nightmare_Cloak_C
// 0x0098 (0x0D50 - 0x0CB8)
class UGA_Nightmare_Cloak_C final : public UGA_Athena_ActivePower_GenericTargetApplyEffectToSelf_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Nightmare_Cloak_C;               // 0x0CB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  Tags_PreventActivation;                            // 0x0CC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_EnableWaterDepthChecks;                        // 0x0CE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_MaxAllowedWaterImmersionDepth;                 // 0x0D08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Tag_FailedReasonBlocked;                           // 0x0D30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Nightmare_Cloak(int32 EntryPoint);
	void K2_ActivateAbility();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Nightmare_Cloak_C">();
	}
	static class UGA_Nightmare_Cloak_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Nightmare_Cloak_C>();
	}
};
static_assert(alignof(UGA_Nightmare_Cloak_C) == 0x000008, "Wrong alignment on UGA_Nightmare_Cloak_C");
static_assert(sizeof(UGA_Nightmare_Cloak_C) == 0x000D50, "Wrong size on UGA_Nightmare_Cloak_C");
static_assert(offsetof(UGA_Nightmare_Cloak_C, UberGraphFrame_GA_Nightmare_Cloak_C) == 0x000CB8, "Member 'UGA_Nightmare_Cloak_C::UberGraphFrame_GA_Nightmare_Cloak_C' has a wrong offset!");
static_assert(offsetof(UGA_Nightmare_Cloak_C, Tags_PreventActivation) == 0x000CC0, "Member 'UGA_Nightmare_Cloak_C::Tags_PreventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Nightmare_Cloak_C, Row_EnableWaterDepthChecks) == 0x000CE0, "Member 'UGA_Nightmare_Cloak_C::Row_EnableWaterDepthChecks' has a wrong offset!");
static_assert(offsetof(UGA_Nightmare_Cloak_C, Row_MaxAllowedWaterImmersionDepth) == 0x000D08, "Member 'UGA_Nightmare_Cloak_C::Row_MaxAllowedWaterImmersionDepth' has a wrong offset!");
static_assert(offsetof(UGA_Nightmare_Cloak_C, Tag_FailedReasonBlocked) == 0x000D30, "Member 'UGA_Nightmare_Cloak_C::Tag_FailedReasonBlocked' has a wrong offset!");

}

