#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_TacticalScuba_PostPhysics_CtrlRig

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass M_MED_TacticalScuba_PostPhysics_CtrlRig.M_MED_TacticalScuba_PostPhysics_CtrlRig_C
// 0x06A8 (0x0A10 - 0x0368)
class UM_MED_TacticalScuba_PostPhysics_CtrlRig_C final : public UControlRig
{
public:
	struct FRigUnit_BeginExecution                BeginExecution;                                    // 0x0368(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform;                          // 0x0390(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms;                              // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0;                                  // 0x0440(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler;                             // 0x0470(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap;                                    // 0x04A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_0;                            // 0x04C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_GetBoneTransform              GetBoneTransform_1;                                // 0x0520(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_0;                                // 0x0580(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionGetAxis         MathQuaternionGetAxis_0;                           // 0x05E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSub                 MathVectorSub_0;                                   // 0x0610(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromTwoVectors  MathQuaternionFromTwoVectors_0;                    // 0x0640(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionMul             MathQuaternionMul_0;                               // 0x0670(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_0;                                 // 0x06B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformTransformVector  MathTransformTransformVector_0;                    // 0x0700(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSub                 MathVectorSub_0_0;                                 // 0x0760(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionGetAxis         MathQuaternionGetAxis_0_0;                         // 0x0790(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformTransformVector  MathTransformTransformVector_0_0;                  // 0x07C0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromTwoVectors  MathQuaternionFromTwoVectors_0_0;                  // 0x0820(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionMul             MathQuaternionMul_0_0;                             // 0x0850(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_0_0;                               // 0x0890(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorNegate              MathVectorNegate_0_0;                              // 0x08E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform_0;                        // 0x0900(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler_0;                           // 0x0960(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_1;                                  // 0x0990(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_1;                            // 0x09B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_TacticalScuba_PostPhysics_CtrlRig_C">();
	}
	static class UM_MED_TacticalScuba_PostPhysics_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_TacticalScuba_PostPhysics_CtrlRig_C>();
	}
};
static_assert(alignof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C) == 0x000010, "Wrong alignment on UM_MED_TacticalScuba_PostPhysics_CtrlRig_C");
static_assert(sizeof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C) == 0x000A10, "Wrong size on UM_MED_TacticalScuba_PostPhysics_CtrlRig_C");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, BeginExecution) == 0x000368, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::BeginExecution' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, GetRelativeBoneTransform) == 0x000390, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::GetRelativeBoneTransform' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, ModifyBoneTransforms) == 0x0003F0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::ModifyBoneTransforms' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathFloatRemap_0) == 0x000440, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathFloatRemap_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionToEuler) == 0x000470, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionToEuler' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathFloatRemap) == 0x0004A0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathFloatRemap' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, ModifyBoneTransforms_0) == 0x0004C8, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::ModifyBoneTransforms_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, GetBoneTransform_1) == 0x000520, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::GetBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, GetBoneTransform_0) == 0x000580, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::GetBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionGetAxis_0) == 0x0005E0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionGetAxis_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathVectorSub_0) == 0x000610, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathVectorSub_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionFromTwoVectors_0) == 0x000640, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionFromTwoVectors_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionMul_0) == 0x000670, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionMul_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, SetBoneRotation_0) == 0x0006B0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::SetBoneRotation_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathTransformTransformVector_0) == 0x000700, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathTransformTransformVector_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathVectorSub_0_0) == 0x000760, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathVectorSub_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionGetAxis_0_0) == 0x000790, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionGetAxis_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathTransformTransformVector_0_0) == 0x0007C0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathTransformTransformVector_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionFromTwoVectors_0_0) == 0x000820, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionFromTwoVectors_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionMul_0_0) == 0x000850, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionMul_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, SetBoneRotation_0_0) == 0x000890, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::SetBoneRotation_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathVectorNegate_0_0) == 0x0008E0, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathVectorNegate_0_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, GetRelativeBoneTransform_0) == 0x000900, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::GetRelativeBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathQuaternionToEuler_0) == 0x000960, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathQuaternionToEuler_0' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, MathFloatRemap_1) == 0x000990, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::MathFloatRemap_1' has a wrong offset!");
static_assert(offsetof(UM_MED_TacticalScuba_PostPhysics_CtrlRig_C, ModifyBoneTransforms_1) == 0x0009B8, "Member 'UM_MED_TacticalScuba_PostPhysics_CtrlRig_C::ModifyBoneTransforms_1' has a wrong offset!");

}

