#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_AthenaDBNO

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_AthenaDBNO.GAB_AthenaDBNO_C
// 0x0110 (0x0BC8 - 0x0AB8)
class UGAB_AthenaDBNO_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           DeathMontage;                                      // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathHitDirection;                                 // 0x0AC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             DeathHitResult;                                    // 0x0AD4(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0B60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  GameplayStatusAfflicted;                           // 0x0B80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           DeathMontageSkydive;                               // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            DBNOBleedGEHandle;                                 // 0x0BA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   HolsterId;                                         // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DeathMontageSwimming;                              // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  Pawn;                                              // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_AthenaDBNO(int32 EntryPoint);
	void DropHeldObjects();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnFinish_4C169D40441E45B462D83CBBA67F6E45();
	void OnStateEnded_C85094F843D5075FE4872C95AFC5D6B6();
	void OnStateInterrupted_C85094F843D5075FE4872C95AFC5D6B6();
	void OnCompleted_F0F6785443BD2E74F5591884CB19F35F();
	void OnBlendOut_F0F6785443BD2E74F5591884CB19F35F();
	void OnInterrupted_F0F6785443BD2E74F5591884CB19F35F();
	void OnCancelled_F0F6785443BD2E74F5591884CB19F35F();
	void InitializeDeathHitDirection(const struct FGameplayEventData& EventHitData);
	void GetInitialHealAmount(float* Health);
	class UAnimMontage* Get_DBNO_Montage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_AthenaDBNO_C">();
	}
	static class UGAB_AthenaDBNO_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_AthenaDBNO_C>();
	}
};
static_assert(alignof(UGAB_AthenaDBNO_C) == 0x000008, "Wrong alignment on UGAB_AthenaDBNO_C");
static_assert(sizeof(UGAB_AthenaDBNO_C) == 0x000BC8, "Wrong size on UGAB_AthenaDBNO_C");
static_assert(offsetof(UGAB_AthenaDBNO_C, UberGraphFrame) == 0x000AB8, "Member 'UGAB_AthenaDBNO_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DeathMontage) == 0x000AC0, "Member 'UGAB_AthenaDBNO_C::DeathMontage' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DeathHitDirection) == 0x000AC8, "Member 'UGAB_AthenaDBNO_C::DeathHitDirection' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DeathHitResult) == 0x000AD4, "Member 'UGAB_AthenaDBNO_C::DeathHitResult' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DamageTags) == 0x000B60, "Member 'UGAB_AthenaDBNO_C::DamageTags' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, GameplayStatusAfflicted) == 0x000B80, "Member 'UGAB_AthenaDBNO_C::GameplayStatusAfflicted' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DeathMontageSkydive) == 0x000BA0, "Member 'UGAB_AthenaDBNO_C::DeathMontageSkydive' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DBNOBleedGEHandle) == 0x000BA8, "Member 'UGAB_AthenaDBNO_C::DBNOBleedGEHandle' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, HolsterId) == 0x000BB0, "Member 'UGAB_AthenaDBNO_C::HolsterId' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, DeathMontageSwimming) == 0x000BB8, "Member 'UGAB_AthenaDBNO_C::DeathMontageSwimming' has a wrong offset!");
static_assert(offsetof(UGAB_AthenaDBNO_C, Pawn) == 0x000BC0, "Member 'UGAB_AthenaDBNO_C::Pawn' has a wrong offset!");

}

