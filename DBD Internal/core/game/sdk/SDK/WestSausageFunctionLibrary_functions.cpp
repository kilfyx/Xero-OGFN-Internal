#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WestSausageFunctionLibrary

#include "Basic.hpp"

#include "WestSausageFunctionLibrary_classes.hpp"
#include "WestSausageFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.CalculateDetachmentForce
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerPawn_Athena_C*             PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   VectorToAttachPoint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Launch                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   LaunchVector                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UWestSausageFunctionLibrary_C::CalculateDetachmentForce(class APlayerPawn_Athena_C* PlayerPawn, const struct FVector& VectorToAttachPoint, bool Launch, const struct FVector& LaunchVector, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WestSausageFunctionLibrary_C", "CalculateDetachmentForce");

	Params::WestSausageFunctionLibrary_C_CalculateDetachmentForce Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.VectorToAttachPoint = std::move(VectorToAttachPoint);
	Parms.Launch = Launch;
	Parms.LaunchVector = std::move(LaunchVector);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.ShouldDetach
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerPawn_Athena_C*             PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWestSausageFunctionLibrary_C::ShouldDetach(class APlayerPawn_Athena_C* PlayerPawn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WestSausageFunctionLibrary_C", "ShouldDetach");

	Params::WestSausageFunctionLibrary_C_ShouldDetach Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.WestSausage_ShouldRotate
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldRotate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWestSausageFunctionLibrary_C::WestSausage_ShouldRotate(class UObject* __WorldContext, bool* ShouldRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WestSausageFunctionLibrary_C", "WestSausage_ShouldRotate");

	Params::WestSausageFunctionLibrary_C_WestSausage_ShouldRotate Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ShouldRotate != nullptr)
		*ShouldRotate = Parms.ShouldRotate;
}

}

