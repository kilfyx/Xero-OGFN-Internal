#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_DataTracker

#include "Basic.hpp"

#include "DataTrackerParameterData_structs.hpp"
#include "Engine_structs.hpp"
#include "E_DataTrackerTagTypes_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker
// 0x0100 (0x0100 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0018(0x0020)(ConstParm)
	TDelegate<void(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate; // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0048(0x0020)()
	class UFortPlaylist*                          Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UFortGameplayDataTrackerComponent*> CallFunc_GetRegisteredDataTrackerComponents_OutDataTrackerComponents; // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponent*      CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFortGameplayDataTrackerComponent* DataTrackerComponent, bool bHasEventValues)> K2Node_CreateDelegate_OutputDelegate_2; // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFortGameplayDataTrackerComponent* RegisteredDataTracker)> K2Node_CreateDelegate_OutputDelegate_3; // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker) == 0x000100, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, EntryPoint) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CustomEvent_GameState) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CustomEvent_Playlist) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CustomEvent_PlaylistContextTags) == 0x000018, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, Temp_struct_Variable) == 0x000048, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, Temp_object_Variable) == 0x000068, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, Temp_object_Variable_1) == 0x000070, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000078, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_GetCurrent_ReturnValue) == 0x000090, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_GetCurrent_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_GetRegisteredDataTrackerComponents_OutDataTrackerComponents) == 0x0000B0, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_GetRegisteredDataTrackerComponents_OutDataTrackerComponents' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_GetObjectClass_ReturnValue) == 0x0000D0, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000D8, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000DC, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, CallFunc_BooleanAND_ReturnValue) == 0x0000ED, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'QuartzMusicTrackComponent_DataTracker_C_ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.OnReady_EAA166EB4AA20B4778C921B5F15F1C62
// 0x0030 (0x0030 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62 final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62) == 0x000030, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62, GameState) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62::GameState' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62, Playlist) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62::Playlist' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62, PlaylistContextTags) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnReady_EAA166EB4AA20B4778C921B5F15F1C62::PlaylistContextTags' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.On Changed Has Any Event Value
// 0x0030 (0x0030 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value final
{
public:
	class UFortGameplayDataTrackerComponent*      DataTrackerComponent_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasEventValues;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value) == 0x000030, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value, DataTrackerComponent_0) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value::DataTrackerComponent_0' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value, bHasEventValues) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value::bHasEventValues' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value, CallFunc_Conv_BoolToString_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'QuartzMusicTrackComponent_DataTracker_C_On_Changed_Has_Any_Event_Value::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.OnDataTrackerComponentRegistered
// 0x0028 (0x0028 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered final
{
public:
	class UFortGameplayDataTrackerComponent*      RegisteredDataTracker;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortGameplayDataTrackerComponent* DataTrackerComponent, bool bHasEventValues)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered) == 0x000028, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, RegisteredDataTracker) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::RegisteredDataTracker' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000021, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerComponentRegistered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.DataTrackerStart_Internal
// 0x0020 (0x0020 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestTrackPlayback_Result;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal) == 0x000020, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal, CallFunc_RequestTrackPlayback_Result) == 0x000018, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerStart_Internal::CallFunc_RequestTrackPlayback_Result' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.DataTrackerUpdate_Internal
// 0x0050 (0x0050 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DataTrackerTagTypes                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTrackerParameterValueTotal_Value;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccumulationValue_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestTrackPlayback_Result;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal) == 0x000050, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, Temp_bool_Variable) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, Temp_byte_Variable) == 0x000001, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, Temp_int_Variable) == 0x000004, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_GetDataTrackerParameterValueTotal_Value) == 0x00000C, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_GetDataTrackerParameterValueTotal_Value' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_GetDataTrackerComponent_DataTracker) == 0x000020, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_GetDataTrackerComponent_DataTracker' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_GetAccumulationValue_ReturnValue) == 0x000030, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_GetAccumulationValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_GetEventValue_ReturnValue) == 0x000034, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_GetEventValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, K2Node_Select_Default) == 0x000038, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, K2Node_Select_Default_1) == 0x000040, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_FInterpTo_ReturnValue) == 0x000044, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal, CallFunc_RequestTrackPlayback_Result) == 0x000048, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerUpdate_Internal::CallFunc_RequestTrackPlayback_Result' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.DataTrackerStop_Internal
// 0x0018 (0x0018 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal) == 0x000018, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_DataTrackerStop_Internal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.OnDataTrackerUpdate
// 0x0018 (0x0018 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataTrackerParameterValue_Value;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate) == 0x000004, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate) == 0x000018, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, Temp_int_Variable) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_GetDataTrackerParameterValue_Value) == 0x000004, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_GetDataTrackerParameterValue_Value' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000015, "Member 'QuartzMusicTrackComponent_DataTracker_C_OnDataTrackerUpdate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.GetDataTrackerComponent
// 0x0008 (0x0008 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent final
{
public:
	class UFortGameplayDataTrackerComponent*      DataTracker;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent) == 0x000008, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent, DataTracker) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerComponent::DataTracker' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.GetDataTrackerParameterValue
// 0x0008 (0x0008 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue) == 0x000004, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue) == 0x000008, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue, Index_0) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue::Index_0' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue, Value) == 0x000004, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValue::Value' has a wrong offset!");

// Function QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C.GetDataTrackerParameterValueTotal
// 0x0038 (0x0038 - 0x0000)
struct QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Total;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTrackerParameterData              CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal) == 0x000004, "Wrong alignment on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal");
static_assert(sizeof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal) == 0x000038, "Wrong size on QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, Value) == 0x000000, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::Value' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, Total) == 0x000004, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::Total' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, Temp_int_Array_Index_Variable) == 0x000008, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, CallFunc_Array_Get_Item) == 0x000018, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'QuartzMusicTrackComponent_DataTracker_C_GetDataTrackerParameterValueTotal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}

