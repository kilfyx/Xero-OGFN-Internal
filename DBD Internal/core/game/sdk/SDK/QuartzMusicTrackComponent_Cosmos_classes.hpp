#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_Cosmos

#include "Basic.hpp"

#include "QuartzMusicTrackComponent_DataTracker_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusicTrackComponent_Cosmos.QuartzMusicTrackComponent_Cosmos_C
// 0x0020 (0x01D8 - 0x01B8)
class UQuartzMusicTrackComponent_Cosmos_C final : public UQuartzMusicTrackComponent_DataTracker_C
{
public:
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Interp_Unaware;                                    // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_Threatened;                                 // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Unaware;                                       // 0x01BC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Alerted;                                       // 0x01C4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_Threatened;                                    // 0x01CC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void OnDataTrackerUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusicTrackComponent_Cosmos_C">();
	}
	static class UQuartzMusicTrackComponent_Cosmos_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusicTrackComponent_Cosmos_C>();
	}
};
static_assert(alignof(UQuartzMusicTrackComponent_Cosmos_C) == 0x000008, "Wrong alignment on UQuartzMusicTrackComponent_Cosmos_C");
static_assert(sizeof(UQuartzMusicTrackComponent_Cosmos_C) == 0x0001D8, "Wrong size on UQuartzMusicTrackComponent_Cosmos_C");
static_assert(offsetof(UQuartzMusicTrackComponent_Cosmos_C, Interp_Unaware) == 0x0001B4, "Member 'UQuartzMusicTrackComponent_Cosmos_C::Interp_Unaware' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_Cosmos_C, Interp_Threatened) == 0x0001B8, "Member 'UQuartzMusicTrackComponent_Cosmos_C::Interp_Threatened' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_Cosmos_C, Tag_Unaware) == 0x0001BC, "Member 'UQuartzMusicTrackComponent_Cosmos_C::Tag_Unaware' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_Cosmos_C, Tag_Alerted) == 0x0001C4, "Member 'UQuartzMusicTrackComponent_Cosmos_C::Tag_Alerted' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_Cosmos_C, Tag_Threatened) == 0x0001CC, "Member 'UQuartzMusicTrackComponent_Cosmos_C::Tag_Threatened' has a wrong offset!");

}

