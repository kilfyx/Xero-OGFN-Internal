#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAugmentsUI

#include "Basic.hpp"

#include "PlayerAugmentsUI_classes.hpp"
#include "PlayerAugmentsUI_parameters.hpp"


namespace SDK
{

// Function PlayerAugmentsUI.FortPlayerAugmentInventoryInfoWidget.OnItemNewOrBorrowedSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsNew                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBorrowed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryInfoWidget::OnItemNewOrBorrowedSet(const bool bIsNew, const bool bIsBorrowed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemNewOrBorrowedSet");

	Params::FortPlayerAugmentInventoryInfoWidget_OnItemNewOrBorrowedSet Parms{};

	Parms.bIsNew = bIsNew;
	Parms.bIsBorrowed = bIsBorrowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryInfoWidget.OnItemRaritySet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortRarity                             Rarity                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortRarityItemData              RarityItemData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryInfoWidget::OnItemRaritySet(const EFortRarity Rarity, const struct FFortRarityItemData& RarityItemData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemRaritySet");

	Params::FortPlayerAugmentInventoryInfoWidget_OnItemRaritySet Parms{};

	Parms.Rarity = Rarity;
	Parms.RarityItemData = std::move(RarityItemData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortMobileButtonBehaviorComponent_AugmentsListIconPicker.OnAugmentToolViewSwap
// (Final, Native, Private)
// Parameters:
// bool                                    bIsInInventoryView                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileButtonBehaviorComponent_AugmentsListIconPicker::OnAugmentToolViewSwap(const bool bIsInInventoryView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentToolViewSwap");

	Params::FortMobileButtonBehaviorComponent_AugmentsListIconPicker_OnAugmentToolViewSwap Parms{};

	Parms.bIsInInventoryView = bIsInInventoryView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortMobileButtonBehaviorComponent_AugmentsListVisibility.HandleAugmentToolOpenedStatusChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsInventoryView                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileButtonBehaviorComponent_AugmentsListVisibility::HandleAugmentToolOpenedStatusChanged(const bool bIsOpened, const bool bInIsInventoryView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentToolOpenedStatusChanged");

	Params::FortMobileButtonBehaviorComponent_AugmentsListVisibility_HandleAugmentToolOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;
	Parms.bInIsInventoryView = bInIsInventoryView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortMobileButtonBehaviorComponent_AugmentsListVisibility.HandleAugmentToolViewSwap
// (Final, Native, Private)
// Parameters:
// bool                                    bInIsInventoryView                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileButtonBehaviorComponent_AugmentsListVisibility::HandleAugmentToolViewSwap(const bool bInIsInventoryView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentToolViewSwap");

	Params::FortMobileButtonBehaviorComponent_AugmentsListVisibility_HandleAugmentToolViewSwap Parms{};

	Parms.bInIsInventoryView = bInIsInventoryView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.CloseWidget
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerAugmentSpecialAcquiredNotificationWidget::CloseWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CloseWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.OnEventAdded
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentSpecialAcquiredNotificationWidget::OnEventAdded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.OnStompedByOtherWidget
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentSpecialAcquiredNotificationWidget::OnStompedByOtherWidget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStompedByOtherWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.OpenWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPlayerAugmentItemDefinition* ItemDef                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentSpecialAcquiredNotificationWidget::OpenWidget(const class UFortPlayerAugmentItemDefinition* ItemDef)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenWidget");

	Params::FortPlayerAugmentSpecialAcquiredNotificationWidget_OpenWidget Parms{};

	Parms.ItemDef = ItemDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.ConstructEventDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPlayerAugmentItemDefinition* ItemDef                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortPlayerAugmentSpecialAcquiredNotificationWidget::ConstructEventDescription(const class UFortPlayerAugmentItemDefinition* ItemDef) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConstructEventDescription");

	Params::FortPlayerAugmentSpecialAcquiredNotificationWidget_ConstructEventDescription Parms{};

	Parms.ItemDef = ItemDef;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentSpecialAcquiredNotificationWidget.HasMoreAugmentEvents
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerAugmentSpecialAcquiredNotificationWidget::HasMoreAugmentEvents() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasMoreAugmentEvents");

	Params::FortPlayerAugmentSpecialAcquiredNotificationWidget_HasMoreAugmentEvents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortMobilePlayerAugmentTimer.HandleAugmentSelectionMenuOpenedStatusChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsInventoryView                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobilePlayerAugmentTimer::HandleAugmentSelectionMenuOpenedStatusChanged(const bool bIsOpened, const bool bInIsInventoryView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentSelectionMenuOpenedStatusChanged");

	Params::FortMobilePlayerAugmentTimer_HandleAugmentSelectionMenuOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;
	Parms.bInIsInventoryView = bInIsInventoryView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortMobilePlayerAugmentTimer.HandlePlayerLandedAfterSkydive
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerZone*        FortPCZone                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobilePlayerAugmentTimer::HandlePlayerLandedAfterSkydive(class AFortPlayerControllerZone* FortPCZone)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePlayerLandedAfterSkydive");

	Params::FortMobilePlayerAugmentTimer_HandlePlayerLandedAfterSkydive Parms{};

	Parms.FortPCZone = FortPCZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleAugmentHighlighted
// (Final, Native, Private)
// Parameters:
// int32                                   HighlightedAugmentIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleAugmentHighlighted(int32 HighlightedAugmentIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentHighlighted");

	Params::FortPlayerAugmentGranterWidget_HandleAugmentHighlighted Parms{};

	Parms.HighlightedAugmentIndex = HighlightedAugmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleAugmentSelectionStarted
// (Final, Native, Private)
// Parameters:
// int32                                   SelectedAugmentIndex                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleAugmentSelectionStarted(const int32 SelectedAugmentIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentSelectionStarted");

	Params::FortPlayerAugmentGranterWidget_HandleAugmentSelectionStarted Parms{};

	Parms.SelectedAugmentIndex = SelectedAugmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleAugmentSelectorOpenedStatusChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bViewingAugmentInventory                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleAugmentSelectorOpenedStatusChanged(const bool bIsOpened, const bool bViewingAugmentInventory)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentSelectorOpenedStatusChanged");

	Params::FortPlayerAugmentGranterWidget_HandleAugmentSelectorOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;
	Parms.bViewingAugmentInventory = bViewingAugmentInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleAugmentSelectorToolViewSwapped
// (Final, Native, Private)
// Parameters:
// bool                                    bViewingAugmentsInventory                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleAugmentSelectorToolViewSwapped(const bool bViewingAugmentsInventory)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentSelectorToolViewSwapped");

	Params::FortPlayerAugmentGranterWidget_HandleAugmentSelectorToolViewSwapped Parms{};

	Parms.bViewingAugmentsInventory = bViewingAugmentsInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleAvailableAugmentsForGrantingUpdated
// (Final, Native, Private)
// Parameters:
// class UFortControllerComponent_AugmentGrantingSystem*GrantingComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleAvailableAugmentsForGrantingUpdated(class UFortControllerComponent_AugmentGrantingSystem* GrantingComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAvailableAugmentsForGrantingUpdated");

	Params::FortPlayerAugmentGranterWidget_HandleAvailableAugmentsForGrantingUpdated Parms{};

	Parms.GrantingComponent = GrantingComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleCanSelectAugmentChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCanSelectAugment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleCanSelectAugmentChanged(bool bCanSelectAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCanSelectAugmentChanged");

	Params::FortPlayerAugmentGranterWidget_HandleCanSelectAugmentChanged Parms{};

	Parms.bCanSelectAugment = bCanSelectAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleRerollAugments
// (Final, Native, Private)

void UFortPlayerAugmentGranterWidget::HandleRerollAugments()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRerollAugments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleSelectedAugmentForGrant
// (Final, Native, Private)
// Parameters:
// class UFortPlayerAugmentItemDefinition* SelectedAugment                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleSelectedAugmentForGrant(class UFortPlayerAugmentItemDefinition* SelectedAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectedAugmentForGrant");

	Params::FortPlayerAugmentGranterWidget_HandleSelectedAugmentForGrant Parms{};

	Parms.SelectedAugment = SelectedAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.HandleTimerUpdated
// (Final, Native, Private)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::HandleTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTimerUpdated");

	Params::FortPlayerAugmentGranterWidget_HandleTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentHighlighted
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   HighlightedAugmentIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnAugmentHighlighted(int32 HighlightedAugmentIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentHighlighted");

	Params::FortPlayerAugmentGranterWidget_OnAugmentHighlighted Parms{};

	Parms.HighlightedAugmentIndex = HighlightedAugmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentScrollDownEvent
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentGranterWidget::OnAugmentScrollDownEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentScrollDownEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentScrollUpEvent
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentGranterWidget::OnAugmentScrollUpEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentScrollUpEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentSelectionStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SelectedAugmentIndex                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnAugmentSelectionStarted(const int32 SelectedAugmentIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentSelectionStarted");

	Params::FortPlayerAugmentGranterWidget_OnAugmentSelectionStarted Parms{};

	Parms.SelectedAugmentIndex = SelectedAugmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentSelectorOpenedStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bViewingAugmentInventory                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnAugmentSelectorOpenedStatusChanged(const bool bIsOpened, const bool bViewingAugmentInventory)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentSelectorOpenedStatusChanged");

	Params::FortPlayerAugmentGranterWidget_OnAugmentSelectorOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;
	Parms.bViewingAugmentInventory = bViewingAugmentInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnAugmentSelectorToolViewSwapped
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bViewingAugmentInventory                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnAugmentSelectorToolViewSwapped(const bool bViewingAugmentInventory)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentSelectorToolViewSwapped");

	Params::FortPlayerAugmentGranterWidget_OnAugmentSelectorToolViewSwapped Parms{};

	Parms.bViewingAugmentInventory = bViewingAugmentInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnCanSelectAugmentChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanSelectAugment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnCanSelectAugmentChanged(bool bCanSelectAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCanSelectAugmentChanged");

	Params::FortPlayerAugmentGranterWidget_OnCanSelectAugmentChanged Parms{};

	Parms.bCanSelectAugment = bCanSelectAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnInputTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        NewInputType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnInputTypeChanged(const ECommonInputType NewInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputTypeChanged");

	Params::FortPlayerAugmentGranterWidget_OnInputTypeChanged Parms{};

	Parms.NewInputType = NewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnPopulateAvailableAugmentsHUD
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortPlayerAugmentItemDefinition*>AugmentItemDefinition                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnPopulateAvailableAugmentsHUD(const TArray<class UFortPlayerAugmentItemDefinition*>& AugmentItemDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPopulateAvailableAugmentsHUD");

	Params::FortPlayerAugmentGranterWidget_OnPopulateAvailableAugmentsHUD Parms{};

	Parms.AugmentItemDefinition = std::move(AugmentItemDefinition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnRerollAugments
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentGranterWidget::OnRerollAugments()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRerollAugments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnSelectedAugmentForGrant
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPlayerAugmentItemDefinition* HighlightedAugment                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnSelectedAugmentForGrant(class UFortPlayerAugmentItemDefinition* HighlightedAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSelectedAugmentForGrant");

	Params::FortPlayerAugmentGranterWidget_OnSelectedAugmentForGrant Parms{};

	Parms.HighlightedAugment = HighlightedAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.OnTimerUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentGranterWidget::OnTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTimerUpdated");

	Params::FortPlayerAugmentGranterWidget_OnTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentGranterWidget.GetPendingAugmentsToGrant
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerAugmentGranterWidget::GetPendingAugmentsToGrant() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPendingAugmentsToGrant");

	Params::FortPlayerAugmentGranterWidget_GetPendingAugmentsToGrant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDQuickbarWidget.OnAugmentsUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortPlayerAugmentItemDefinition*>ActiveAugments                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDQuickbarWidget::OnAugmentsUpdated(const TArray<class UFortPlayerAugmentItemDefinition*>& ActiveAugments)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentsUpdated");

	Params::FortPlayerAugmentHUDQuickbarWidget_OnAugmentsUpdated Parms{};

	Parms.ActiveAugments = std::move(ActiveAugments);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.EndRerollHoldProgress
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerAugmentHUDRerollWidget::EndRerollHoldProgress()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EndRerollHoldProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.HandleFreeRerollsUpdated
// (Final, Native, Private)
// Parameters:
// int32                                   NewNumFreeRerolls                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDRerollWidget::HandleFreeRerollsUpdated(const int32 NewNumFreeRerolls)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFreeRerollsUpdated");

	Params::FortPlayerAugmentHUDRerollWidget_HandleFreeRerollsUpdated Parms{};

	Parms.NewNumFreeRerolls = NewNumFreeRerolls;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.HandleRerollAugments
// (Final, Native, Private)

void UFortPlayerAugmentHUDRerollWidget::HandleRerollAugments()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRerollAugments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.OnFreeRerollsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewNumFreeRerolls                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDRerollWidget::OnFreeRerollsUpdated(const int32 NewNumFreeRerolls)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnFreeRerollsUpdated");

	Params::FortPlayerAugmentHUDRerollWidget_OnFreeRerollsUpdated Parms{};

	Parms.NewNumFreeRerolls = NewNumFreeRerolls;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.OnRerollAugments
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentHUDRerollWidget::OnRerollAugments()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRerollAugments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.OnUpdateCurrency
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OwnedCurrency                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RerollCost                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDRerollWidget::OnUpdateCurrency(const int32 OwnedCurrency, const int32 RerollCost)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateCurrency");

	Params::FortPlayerAugmentHUDRerollWidget_OnUpdateCurrency Parms{};

	Parms.OwnedCurrency = OwnedCurrency;
	Parms.RerollCost = RerollCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDRerollWidget.StartRerollHoldProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDRerollWidget::StartRerollHoldProgress(const float Duration)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartRerollHoldProgress");

	Params::FortPlayerAugmentHUDRerollWidget_StartRerollHoldProgress Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleAugmentGrantingTimersFinishedForMatch
// (Final, Native, Private)

void UFortPlayerAugmentHUDTimerWidget::HandleAugmentGrantingTimersFinishedForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentGrantingTimersFinishedForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleAugmentGrantingTimersResetForMatch
// (Final, Native, Private)

void UFortPlayerAugmentHUDTimerWidget::HandleAugmentGrantingTimersResetForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentGrantingTimersResetForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleAugmentSelectorOpenedStatusChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bViewingAugmentInventory                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleAugmentSelectorOpenedStatusChanged(const bool bIsOpened, const bool bViewingAugmentInventory)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentSelectorOpenedStatusChanged");

	Params::FortPlayerAugmentHUDTimerWidget_HandleAugmentSelectorOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;
	Parms.bViewingAugmentInventory = bViewingAugmentInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleCanSelectAugmentChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCanSelectAugment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleCanSelectAugmentChanged(bool bCanSelectAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCanSelectAugmentChanged");

	Params::FortPlayerAugmentHUDTimerWidget_HandleCanSelectAugmentChanged Parms{};

	Parms.bCanSelectAugment = bCanSelectAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleHUDElementVisibilityChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTagContainer            HiddenElementTagContainer                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenElementTagContainer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleHUDElementVisibilityChanged");

	Params::FortPlayerAugmentHUDTimerWidget_HandleHUDElementVisibilityChanged Parms{};

	Parms.HiddenElementTagContainer = std::move(HiddenElementTagContainer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleMovementModeChanged
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMovementModeChanged");

	Params::FortPlayerAugmentHUDTimerWidget_HandleMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleNumPendingAugmentsToGrantUpdated
// (Final, Native, Private)
// Parameters:
// int8                                    NumPendingAugmentsToGrant                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleNumPendingAugmentsToGrantUpdated(int8 NumPendingAugmentsToGrant)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleNumPendingAugmentsToGrantUpdated");

	Params::FortPlayerAugmentHUDTimerWidget_HandleNumPendingAugmentsToGrantUpdated Parms{};

	Parms.NumPendingAugmentsToGrant = NumPendingAugmentsToGrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleSelectedAugmentForGrant
// (Final, Native, Private)
// Parameters:
// class UFortPlayerAugmentItemDefinition* SelectedAugment                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleSelectedAugmentForGrant(class UFortPlayerAugmentItemDefinition* SelectedAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSelectedAugmentForGrant");

	Params::FortPlayerAugmentHUDTimerWidget_HandleSelectedAugmentForGrant Parms{};

	Parms.SelectedAugment = SelectedAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.HandleTimerUpdated
// (Final, Native, Private)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::HandleTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTimerUpdated");

	Params::FortPlayerAugmentHUDTimerWidget_HandleTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnAugmentGrantingTimersFinishedForMatch
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentHUDTimerWidget::OnAugmentGrantingTimersFinishedForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentGrantingTimersFinishedForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnAugmentGrantingTimersResetForMatch
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentHUDTimerWidget::OnAugmentGrantingTimersResetForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentGrantingTimersResetForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnAugmentSelectorOpenedStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnAugmentSelectorOpenedStatusChanged(const bool bIsOpened)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentSelectorOpenedStatusChanged");

	Params::FortPlayerAugmentHUDTimerWidget_OnAugmentSelectorOpenedStatusChanged Parms{};

	Parms.bIsOpened = bIsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnCanSelectAugmentChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanSelectAugment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnCanSelectAugmentChanged(bool bCanSelectAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCanSelectAugmentChanged");

	Params::FortPlayerAugmentHUDTimerWidget_OnCanSelectAugmentChanged Parms{};

	Parms.bCanSelectAugment = bCanSelectAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnHUDElementVisibilityChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            HiddenElementTagContainer                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenElementTagContainer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnHUDElementVisibilityChanged");

	Params::FortPlayerAugmentHUDTimerWidget_OnHUDElementVisibilityChanged Parms{};

	Parms.HiddenElementTagContainer = std::move(HiddenElementTagContainer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnMovementModeChanged
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentHUDTimerWidget::OnMovementModeChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMovementModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnNumPendingAugmentsToGrantUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumPendingAugmentsToGrant                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnNumPendingAugmentsToGrantUpdated(int32 NumPendingAugmentsToGrant)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNumPendingAugmentsToGrantUpdated");

	Params::FortPlayerAugmentHUDTimerWidget_OnNumPendingAugmentsToGrantUpdated Parms{};

	Parms.NumPendingAugmentsToGrant = NumPendingAugmentsToGrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnSelectedAugmentForGrant
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPlayerAugmentItemDefinition* HighlightedAugment                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnSelectedAugmentForGrant(class UFortPlayerAugmentItemDefinition* HighlightedAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSelectedAugmentForGrant");

	Params::FortPlayerAugmentHUDTimerWidget_OnSelectedAugmentForGrant Parms{};

	Parms.HighlightedAugment = HighlightedAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.OnTimerUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentHUDTimerWidget::OnTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTimerUpdated");

	Params::FortPlayerAugmentHUDTimerWidget_OnTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.CanEquipSelectionTool
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerAugmentHUDTimerWidget::CanEquipSelectionTool() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanEquipSelectionTool");

	Params::FortPlayerAugmentHUDTimerWidget_CanEquipSelectionTool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.CanSelectAugment
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerAugmentHUDTimerWidget::CanSelectAugment() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanSelectAugment");

	Params::FortPlayerAugmentHUDTimerWidget_CanSelectAugment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentHUDTimerWidget.GetPendingAugmentsToGrant
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerAugmentHUDTimerWidget::GetPendingAugmentsToGrant() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPendingAugmentsToGrant");

	Params::FortPlayerAugmentHUDTimerWidget_GetPendingAugmentsToGrant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentInfoEntryWidget.OnItemNewOrBorrowedSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsNew                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBorrowed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInfoEntryWidget::OnItemNewOrBorrowedSet(const bool bIsNew, const bool bIsBorrowed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemNewOrBorrowedSet");

	Params::FortPlayerAugmentInfoEntryWidget_OnItemNewOrBorrowedSet Parms{};

	Parms.bIsNew = bIsNew;
	Parms.bIsBorrowed = bIsBorrowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInfoEntryWidget.OnItemPinColorSet
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     PinColor                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInfoEntryWidget::OnItemPinColorSet(const struct FLinearColor& PinColor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemPinColorSet");

	Params::FortPlayerAugmentInfoEntryWidget_OnItemPinColorSet Parms{};

	Parms.PinColor = std::move(PinColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInfoEntryWidget.OnItemRaritySet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortRarity                             Rarity                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortRarityItemData              RarityItemData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInfoEntryWidget::OnItemRaritySet(const EFortRarity Rarity, const struct FFortRarityItemData& RarityItemData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemRaritySet");

	Params::FortPlayerAugmentInfoEntryWidget_OnItemRaritySet Parms{};

	Parms.Rarity = Rarity;
	Parms.RarityItemData = std::move(RarityItemData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInfoEntryWidget.UpdateAugment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortPlayerAugmentItemDefinition* AugmentItemDefinition                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInfoEntryWidget::UpdateAugment(const class UFortPlayerAugmentItemDefinition* AugmentItemDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateAugment");

	Params::FortPlayerAugmentInfoEntryWidget_UpdateAugment Parms{};

	Parms.AugmentItemDefinition = AugmentItemDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInGameCarriedWidget.HandleExitBus
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerZone*        FortPCZone                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInGameCarriedWidget::HandleExitBus(class AFortPlayerControllerZone* FortPCZone)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleExitBus");

	Params::FortPlayerAugmentInGameCarriedWidget_HandleExitBus Parms{};

	Parms.FortPCZone = FortPCZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInGameCarriedWidget.OnShowInitialAugment
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPlayerAugmentItemDefinition* PlayerAugmentItemDefinition                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInGameCarriedWidget::OnShowInitialAugment(const class UFortPlayerAugmentItemDefinition* PlayerAugmentItemDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowInitialAugment");

	Params::FortPlayerAugmentInGameCarriedWidget_OnShowInitialAugment Parms{};

	Parms.PlayerAugmentItemDefinition = PlayerAugmentItemDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryListEntry.OnAugmentListItemSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryListEntry::OnAugmentListItemSet(const class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentListItemSet");

	Params::FortPlayerAugmentInventoryListEntry_OnAugmentListItemSet Parms{};

	Parms.ItemDefinition = ItemDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.HandleAugmentGrantingTimersFinishedForMatch
// (Final, Native, Private)

void UFortPlayerAugmentInventoryTab::HandleAugmentGrantingTimersFinishedForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentGrantingTimersFinishedForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.HandleAugmentGrantingTimersResetForMatch
// (Final, Native, Private)

void UFortPlayerAugmentInventoryTab::HandleAugmentGrantingTimersResetForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAugmentGrantingTimersResetForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.HandleNumPendingAugmentsToGrantUpdated
// (Final, Native, Private)
// Parameters:
// int8                                    NumPendingAugmentsToGrant                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryTab::HandleNumPendingAugmentsToGrantUpdated(int8 NumPendingAugmentsToGrant)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleNumPendingAugmentsToGrantUpdated");

	Params::FortPlayerAugmentInventoryTab_HandleNumPendingAugmentsToGrantUpdated Parms{};

	Parms.NumPendingAugmentsToGrant = NumPendingAugmentsToGrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.HandleTimerUpdated
// (Final, Native, Private)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryTab::HandleTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleTimerUpdated");

	Params::FortPlayerAugmentInventoryTab_HandleTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.OnAugmentGrantingTimersFinishedForMatch
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentInventoryTab::OnAugmentGrantingTimersFinishedForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentGrantingTimersFinishedForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.OnAugmentGrantingTimersResetForMatch
// (Event, Protected, BlueprintEvent)

void UFortPlayerAugmentInventoryTab::OnAugmentGrantingTimersResetForMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentGrantingTimersResetForMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.OnAugmentListUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumAugments                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryTab::OnAugmentListUpdated(const int32 NumAugments)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAugmentListUpdated");

	Params::FortPlayerAugmentInventoryTab_OnAugmentListUpdated Parms{};

	Parms.NumAugments = NumAugments;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.OnNumPendingAugmentsToGrantUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumPendingAugmentsToGrant                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryTab::OnNumPendingAugmentsToGrantUpdated(int32 NumPendingAugmentsToGrant)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNumPendingAugmentsToGrantUpdated");

	Params::FortPlayerAugmentInventoryTab_OnNumPendingAugmentsToGrantUpdated Parms{};

	Parms.NumPendingAugmentsToGrant = NumPendingAugmentsToGrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.OnTimerUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentInventoryTab::OnTimerUpdated(float TimeRemaining, float TimePercentage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTimerUpdated");

	Params::FortPlayerAugmentInventoryTab_OnTimerUpdated Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TimePercentage = TimePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.RequestOpenSelector
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerAugmentInventoryTab::RequestOpenSelector()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestOpenSelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerAugmentsUI.FortPlayerAugmentInventoryTab.GetPendingAugmentsToGrant
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerAugmentInventoryTab::GetPendingAugmentsToGrant() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPendingAugmentsToGrant");

	Params::FortPlayerAugmentInventoryTab_GetPendingAugmentsToGrant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerAugmentsUI.FortPlayerAugmentLobbyWidget.OnShowInitialAugment
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPlayerAugmentItemDefinition* CarriedAugment                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAugmentLobbyWidget::OnShowInitialAugment(const class UFortPlayerAugmentItemDefinition* CarriedAugment)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowInitialAugment");

	Params::FortPlayerAugmentLobbyWidget_OnShowInitialAugment Parms{};

	Parms.CarriedAugment = CarriedAugment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAugmentsUI.FortPlayerAugmentPostMatchUnlocksWidget.OnShowUnlockedAugments
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortPlayerAugmentItemDefinition*>UnlockedAugments                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPlayerAugmentPostMatchUnlocksWidget::OnShowUnlockedAugments(const TArray<class UFortPlayerAugmentItemDefinition*>& UnlockedAugments)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowUnlockedAugments");

	Params::FortPlayerAugmentPostMatchUnlocksWidget_OnShowUnlockedAugments Parms{};

	Parms.UnlockedAugments = std::move(UnlockedAugments);

	UObject::ProcessEvent(Func, &Parms);
}

}

