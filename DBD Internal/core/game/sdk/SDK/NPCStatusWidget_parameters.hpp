#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCStatusWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NPCStatusWidget.NPCStatusWidget_C.ExecuteUbergraph_NPCStatusWidget
// 0x0028 (0x0028 - 0x0000)
struct NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_StatusWidgetVisibleDuration;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_health;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget) == 0x000008, "Wrong alignment on NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget");
static_assert(sizeof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget) == 0x000028, "Wrong size on NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget");
static_assert(offsetof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget, EntryPoint) == 0x000000, "Member 'NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget, K2Node_CustomEvent_StatusWidgetVisibleDuration) == 0x000004, "Member 'NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget::K2Node_CustomEvent_StatusWidgetVisibleDuration' has a wrong offset!");
static_assert(offsetof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget, K2Node_CustomEvent_health) == 0x000008, "Member 'NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'NPCStatusWidget_C_ExecuteUbergraph_NPCStatusWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function NPCStatusWidget.NPCStatusWidget_C.ChangeWidgetVisibleDuration
// 0x0004 (0x0004 - 0x0000)
struct NPCStatusWidget_C_ChangeWidgetVisibleDuration final
{
public:
	float                                         StatusWidgetVisibleDuration_0;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidget_C_ChangeWidgetVisibleDuration) == 0x000004, "Wrong alignment on NPCStatusWidget_C_ChangeWidgetVisibleDuration");
static_assert(sizeof(NPCStatusWidget_C_ChangeWidgetVisibleDuration) == 0x000004, "Wrong size on NPCStatusWidget_C_ChangeWidgetVisibleDuration");
static_assert(offsetof(NPCStatusWidget_C_ChangeWidgetVisibleDuration, StatusWidgetVisibleDuration_0) == 0x000000, "Member 'NPCStatusWidget_C_ChangeWidgetVisibleDuration::StatusWidgetVisibleDuration_0' has a wrong offset!");

// Function NPCStatusWidget.NPCStatusWidget_C.EventUpdateStatus
// 0x0004 (0x0004 - 0x0000)
struct NPCStatusWidget_C_EventUpdateStatus final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidget_C_EventUpdateStatus) == 0x000004, "Wrong alignment on NPCStatusWidget_C_EventUpdateStatus");
static_assert(sizeof(NPCStatusWidget_C_EventUpdateStatus) == 0x000004, "Wrong size on NPCStatusWidget_C_EventUpdateStatus");
static_assert(offsetof(NPCStatusWidget_C_EventUpdateStatus, Health) == 0x000000, "Member 'NPCStatusWidget_C_EventUpdateStatus::Health' has a wrong offset!");

}

