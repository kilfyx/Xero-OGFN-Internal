#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicUI

#include "Basic.hpp"

#include "DynamicUI_classes.hpp"
#include "DynamicUI_parameters.hpp"


namespace SDK
{

// Function DynamicUI.DynamicUIManager.AddScene
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UDynamicUIScene*            Scene                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalContext                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicUIManager::AddScene(const class UDynamicUIScene* Scene, const class UObject* OptionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicUIManager", "AddScene");

	Params::DynamicUIManager_AddScene Parms{};

	Parms.Scene = Scene;
	Parms.OptionalContext = OptionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DynamicUI.DynamicUIManager.AddScenes
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const TArray<class UDynamicUIScene*>&   Scenes                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalContext                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicUIManager::AddScenes(const TArray<class UDynamicUIScene*>& Scenes, const class UObject* OptionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicUIManager", "AddScenes");

	Params::DynamicUIManager_AddScenes Parms{};

	Parms.Scenes = std::move(Scenes);
	Parms.OptionalContext = OptionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DynamicUI.DynamicUIManager.RemoveScene
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UDynamicUIScene*            Scene                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalContext                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicUIManager::RemoveScene(const class UDynamicUIScene* Scene, const class UObject* OptionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicUIManager", "RemoveScene");

	Params::DynamicUIManager_RemoveScene Parms{};

	Parms.Scene = Scene;
	Parms.OptionalContext = OptionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DynamicUI.DynamicUIManager.RemoveScenes
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const TArray<class UDynamicUIScene*>&   Scenes                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalContext                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicUIManager::RemoveScenes(const TArray<class UDynamicUIScene*>& Scenes, const class UObject* OptionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicUIManager", "RemoveScenes");

	Params::DynamicUIManager_RemoveScenes Parms{};

	Parms.Scenes = std::move(Scenes);
	Parms.OptionalContext = OptionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

