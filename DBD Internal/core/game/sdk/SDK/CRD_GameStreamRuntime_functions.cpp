#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_GameStreamRuntime

#include "Basic.hpp"

#include "CRD_GameStreamRuntime_classes.hpp"
#include "CRD_GameStreamRuntime_parameters.hpp"


namespace SDK
{

// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent.AddToEndGameQueue
// (Final, Native, Public, BlueprintCallable)

void UCreativeGameStreamDeviceComponent::AddToEndGameQueue()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddToEndGameQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMinigameLogicComponent*      InMinigameLogicComponent                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeGameStreamDeviceComponent::Init(class UFortMinigameLogicComponent* InMinigameLogicComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Init");

	Params::CreativeGameStreamDeviceComponent_Init Parms{};

	Parms.InMinigameLogicComponent = InMinigameLogicComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent.OnMinigameStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortMinigame*                    Minigame                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMinigameState                      NewMinigameState                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeGameStreamDeviceComponent::OnMinigameStateChanged(class AFortMinigame* Minigame, const EFortMinigameState NewMinigameState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMinigameStateChanged");

	Params::CreativeGameStreamDeviceComponent_OnMinigameStateChanged Parms{};

	Parms.Minigame = Minigame;
	Parms.NewMinigameState = NewMinigameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent.RemoveFromEndGameQueue
// (Final, Native, Public, BlueprintCallable)

void UCreativeGameStreamDeviceComponent::RemoveFromEndGameQueue()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveFromEndGameQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent.IsWithinPublishedPlayspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCreativeGameStreamDeviceComponent::IsWithinPublishedPlayspace() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsWithinPublishedPlayspace");

	Params::CreativeGameStreamDeviceComponent_IsWithinPublishedPlayspace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CRD_GameStreamRuntime.CreativeGameStreamDeviceCoordinatorComponent.OnMinigameStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortMinigame*                    InMinigame                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMinigameState                      NewMinigameState                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeGameStreamDeviceCoordinatorComponent::OnMinigameStateChanged(class AFortMinigame* InMinigame, const EFortMinigameState NewMinigameState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMinigameStateChanged");

	Params::CreativeGameStreamDeviceCoordinatorComponent_OnMinigameStateChanged Parms{};

	Parms.InMinigame = InMinigame;
	Parms.NewMinigameState = NewMinigameState;

	UObject::ProcessEvent(Func, &Parms);
}

}

