#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_PlaysetGrenade

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "ECardinalDirection_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_PlaysetGrenade.B_Prj_Athena_PlaysetGrenade_C
// 0x00D8 (0x0950 - 0x0878)
class AB_Prj_Athena_PlaysetGrenade_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        PopupGrenade_ThrowLoop_AudioComponent;             // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseDestination;                                   // 0x08A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_BuildBuilding;                                   // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GridExplosionOffset;                               // 0x08C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeXY;                                        // 0x08D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeZ;                                         // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridYOffset;                                       // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridZOffset;                                       // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirection                            CardinalDirection;                                 // 0x08E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E5[0x3];                                      // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECardinalDirection, float>               OrientationYawOffsets;                             // 0x08E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         BuildDelay;                                        // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93C[0x4];                                      // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPlaysetItemDefinition*             CachedPlayset;                                     // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PlayspaceActorToSpawn;                             // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Athena_PlaysetGrenade(int32 EntryPoint);
	void Play_Spawn_Prefab_Sound(const struct FVector& Location);
	void SpawnPlayspaceServer(class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnStop(const struct FHitResult& Hit);
	void OnLoaded_3645F4484F4ECED813C69D92F55C7A1F(class UObject* Loaded);
	void UserConstructionScript();
	void SetBaseDestination(const struct FHitResult& Hit);
	void CalculateCardinalDirection();
	void SetPlaysetData(class UFortPlaysetItemDefinition* NewPlayset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_PlaysetGrenade_C">();
	}
	static class AB_Prj_Athena_PlaysetGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_PlaysetGrenade_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_PlaysetGrenade_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_PlaysetGrenade_C");
static_assert(sizeof(AB_Prj_Athena_PlaysetGrenade_C) == 0x000950, "Wrong size on AB_Prj_Athena_PlaysetGrenade_C");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, UberGraphFrame) == 0x000878, "Member 'AB_Prj_Athena_PlaysetGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, PopupGrenade_ThrowLoop_AudioComponent) == 0x000880, "Member 'AB_Prj_Athena_PlaysetGrenade_C::PopupGrenade_ThrowLoop_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, ParticleSystem) == 0x000888, "Member 'AB_Prj_Athena_PlaysetGrenade_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, Mesh) == 0x000890, "Member 'AB_Prj_Athena_PlaysetGrenade_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, RotatingMovement) == 0x000898, "Member 'AB_Prj_Athena_PlaysetGrenade_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, BaseDestination) == 0x0008A0, "Member 'AB_Prj_Athena_PlaysetGrenade_C::BaseDestination' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, P_BuildBuilding) == 0x0008B0, "Member 'AB_Prj_Athena_PlaysetGrenade_C::P_BuildBuilding' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, Cue_CloseSound) == 0x0008B8, "Member 'AB_Prj_Athena_PlaysetGrenade_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, Cue_DistantSound) == 0x0008C0, "Member 'AB_Prj_Athena_PlaysetGrenade_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, GridExplosionOffset) == 0x0008C8, "Member 'AB_Prj_Athena_PlaysetGrenade_C::GridExplosionOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, GridSizeXY) == 0x0008D4, "Member 'AB_Prj_Athena_PlaysetGrenade_C::GridSizeXY' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, GridSizeZ) == 0x0008D8, "Member 'AB_Prj_Athena_PlaysetGrenade_C::GridSizeZ' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, GridYOffset) == 0x0008DC, "Member 'AB_Prj_Athena_PlaysetGrenade_C::GridYOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, GridZOffset) == 0x0008E0, "Member 'AB_Prj_Athena_PlaysetGrenade_C::GridZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, CardinalDirection) == 0x0008E4, "Member 'AB_Prj_Athena_PlaysetGrenade_C::CardinalDirection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, OrientationYawOffsets) == 0x0008E8, "Member 'AB_Prj_Athena_PlaysetGrenade_C::OrientationYawOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, BuildDelay) == 0x000938, "Member 'AB_Prj_Athena_PlaysetGrenade_C::BuildDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, CachedPlayset) == 0x000940, "Member 'AB_Prj_Athena_PlaysetGrenade_C::CachedPlayset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_PlaysetGrenade_C, PlayspaceActorToSpawn) == 0x000948, "Member 'AB_Prj_Athena_PlaysetGrenade_C::PlayspaceActorToSpawn' has a wrong offset!");

}

