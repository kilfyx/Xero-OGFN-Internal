#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ActivePower_Leap_Parent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Athena_Power_Leap_Type_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent
// 0x0730 (0x0730 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0018(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x0050(0x0028)()
	TDelegate<void(const struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x00E8(0x0028)()
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ApplyEffectLevel;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x0120(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_NotifyTag;                            // 0x013C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayCueParameters                 CallFunc_LandGCParams_ReturnValue;                 // 0x0148(0x00B8)(ContainsInstancedReference)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0200(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x0228(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_LeapGCParams_ReturnValue;                 // 0x0230(0x00B8)(ContainsInstancedReference)
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue_1;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_TargetGCParams_ReturnValue;               // 0x02F8(0x00B8)(ContainsInstancedReference)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x03B4(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_7; // 0x0440(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerPawn*                        K2Node_Event_FortPlayerPawn;                       // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0458(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0508(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchVelocity_ReturnValue;            // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0545(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0546(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0547(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayCueParameters                 CallFunc_LeapingLoopGCParams_ReturnValue;          // 0x0548(0x00B8)(ContainsInstancedReference)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_4;                   // 0x0600(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_4;               // 0x0628(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_8; // 0x0630(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_SelectArcLocation_TargetLocation;         // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish; // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish_1; // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSetVelocityOnFinish_SetVelOnFinish;    // 0x0654(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSetVelocityOnFinish_SetVelOnFinish_1;  // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeapDuration_ReturnValue;              // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_ApplyRootMotionConstantForce* CallFunc_ApplyRootMotionConstantForce_ReturnValue; // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x3];                                      // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLeapDuration_ReturnValue_1;            // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_ApplyRootMotionMoveToForce* CallFunc_ApplyRootMotionMoveToForce_ReturnValue;  // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMultiForObjects_OutHits;      // 0x0690(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CapsuleTraceMultiForObjects_ReturnValue;  // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A2[0x6];                                      // 0x06A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_2;                            // 0x06A8(0x0028)()
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x06DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_3;                   // 0x06E8(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_3;               // 0x0710(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_9; // 0x0718(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x072D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x072E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x072F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent) == 0x000730, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, EntryPoint) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_TargetData_1) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplicationTag_1) == 0x000040, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_struct_Variable) == 0x000048, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_struct_Variable_1) == 0x000050, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000098, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_VSize_ReturnValue) == 0x0000C8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Normal_ReturnValue) == 0x0000CC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000D8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_TargetData) == 0x0000E8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplicationTag) == 0x000110, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplyEffectLevel) == 0x000118, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplyEffectLevel' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x000120, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_WaitTargetSelection_ReturnValue) == 0x000130, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_WaitTargetSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_Event_NotifyTag) == 0x00013C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_Event_NotifyTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000144, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000145, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000146, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_BooleanAND_ReturnValue) == 0x000147, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_LandGCParams_ReturnValue) == 0x000148, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_LandGCParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_TargetData_2) == 0x000200, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplicationTag_2) == 0x000228, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_LeapGCParams_ReturnValue) == 0x000230, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_LeapGCParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_WaitTargetSelection_ReturnValue_1) == 0x0002E8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_WaitTargetSelection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsValid_ReturnValue_1) == 0x0002F0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_TargetGCParams_ReturnValue) == 0x0002F8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_TargetGCParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_K2_CommitAbility_ReturnValue) == 0x0003B0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_Hit) == 0x0003B4, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_7) == 0x000440, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_Event_FortPlayerPawn) == 0x000450, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_Event_FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_MakeHitResult_ReturnValue) == 0x000458, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0004E4, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetValueAtLevel_ReturnValue) == 0x0004E8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0004EC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0004F0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x0004F4, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetVelocity_ReturnValue) == 0x0004F8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000508, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000510, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00051C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Add_VectorVector_ReturnValue) == 0x000528, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_Array_Add_ReturnValue) == 0x000534, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetLaunchVelocity_ReturnValue) == 0x000538, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetLaunchVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_SwitchEnum_CmpSuccess) == 0x000544, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_bool_Has_Been_Initd_Variable) == 0x000545, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_Event_bWasCancelled) == 0x000546, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsServer_ReturnValue) == 0x000547, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_LeapingLoopGCParams_ReturnValue) == 0x000548, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_LeapingLoopGCParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_TargetData_4) == 0x000600, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_TargetData_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplicationTag_4) == 0x000628, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplicationTag_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_8) == 0x000630, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_SelectArcLocation_TargetLocation) == 0x000640, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_SelectArcLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish) == 0x00064C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish_1) == 0x000650, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetClampVelocityOnFinish_ClampVelOnFinish_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetSetVelocityOnFinish_SetVelOnFinish) == 0x000654, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetSetVelocityOnFinish_SetVelOnFinish' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetSetVelocityOnFinish_SetVelOnFinish_1) == 0x000660, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetSetVelocityOnFinish_SetVelOnFinish_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetLeapDuration_ReturnValue) == 0x00066C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetLeapDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_ApplyRootMotionConstantForce_ReturnValue) == 0x000670, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_ApplyRootMotionConstantForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsValid_ReturnValue_2) == 0x000678, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetLeapDuration_ReturnValue_1) == 0x00067C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetLeapDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_ApplyRootMotionMoveToForce_ReturnValue) == 0x000680, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_ApplyRootMotionMoveToForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsValid_ReturnValue_3) == 0x000688, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_CapsuleTraceMultiForObjects_OutHits) == 0x000690, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_CapsuleTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_CapsuleTraceMultiForObjects_ReturnValue) == 0x0006A0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_CapsuleTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_bool_IsClosed_Variable) == 0x0006A1, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_struct_Variable_2) == 0x0006A8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x0006D0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_IsValid_ReturnValue_4) == 0x0006D8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, Temp_struct_Variable_3) == 0x0006DC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_TargetData_3) == 0x0006E8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_TargetData_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CustomEvent_ApplicationTag_3) == 0x000710, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CustomEvent_ApplicationTag_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, K2Node_CreateDelegate_OutputDelegate_9) == 0x000718, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x000728, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00072C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_BooleanAND_ReturnValue_1) == 0x00072D, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_BooleanOR_ReturnValue) == 0x00072E, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent, CallFunc_BooleanAND_ReturnValue_2) == 0x00072F, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ExecuteUbergraph_GA_Athena_ActivePower_Leap_Parent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.PlayerEnterWater
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater) == 0x000008, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater, FortPlayerPawn) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_PlayerEnterWater::FortPlayerPawn' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.OnLand
// 0x008C (0x008C - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_OnLand final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_OnLand) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_OnLand");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_OnLand) == 0x00008C, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_OnLand");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_OnLand, Hit) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_OnLand::Hit' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.CastMontageNotifyStart
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart) == 0x000008, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart, NotifyTag) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_CastMontageNotifyStart::NotifyTag' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.ApplyEffect
// 0x0038 (0x0038 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         ApplyEffectLevel;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect) == 0x000038, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect, TargetData) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect, ApplicationTag) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect::ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect, ApplyEffectLevel) == 0x000030, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffect::ApplyEffectLevel' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.Targeted_99BB82FC44E77279564E1682CE7A7B69
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69) == 0x000030, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69, TargetData) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69, ApplicationTag) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Targeted_99BB82FC44E77279564E1682CE7A7B69::ApplicationTag' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.Cancelled_99BB82FC44E77279564E1682CE7A7B69
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69) == 0x000030, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69, TargetData) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69, ApplicationTag) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Cancelled_99BB82FC44E77279564E1682CE7A7B69::ApplicationTag' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.Targeted_2DF7971548860AB5EB1DD2BB833D040D
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D) == 0x000030, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D, TargetData) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D, ApplicationTag) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Targeted_2DF7971548860AB5EB1DD2BB833D040D::ApplicationTag' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.Cancelled_2DF7971548860AB5EB1DD2BB833D040D
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D) == 0x000030, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D, TargetData) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D, ApplicationTag) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Cancelled_2DF7971548860AB5EB1DD2BB833D040D::ApplicationTag' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.TargetGCParams
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams) == 0x0000B8, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_TargetGCParams::ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.LandGCParams
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_LandGCParams final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_LandGCParams) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_LandGCParams");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_LandGCParams) == 0x0000B8, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_LandGCParams");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_LandGCParams, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_LandGCParams::ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.LeapGCParams
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams) == 0x0000B8, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_LeapGCParams::ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetLaunchVelocity
// 0x008C (0x008C - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRowAtLevel_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRowAtLevel_ReturnValue_1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyLaunchMagWithCharge_ReturnValue;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyLaunchMagWithCharge_ReturnValue_1;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthena_Power_Leap_Type                       Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAccelerationValue_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocityPercent_ReturnValue;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity) == 0x00008C, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, Temp_float_Variable) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, Temp_float_Variable_1) == 0x000010, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_GetRowAtLevel_ReturnValue) == 0x000014, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_GetRowAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_GetRowAtLevel_ReturnValue_1) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_GetRowAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_ModifyLaunchMagWithCharge_ReturnValue) == 0x00001C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_ModifyLaunchMagWithCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_ModifyLaunchMagWithCharge_ReturnValue_1) == 0x000020, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_ModifyLaunchMagWithCharge_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, Temp_byte_Variable) == 0x000024, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, K2Node_Select_Default) == 0x00002C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_GetAccelerationValue_ReturnValue) == 0x000030, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_GetAccelerationValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_GetActorForwardVector_ReturnValue) == 0x00003C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_GetVelocityPercent_ReturnValue) == 0x000048, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_GetVelocityPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_SelectVector_ReturnValue) == 0x000054, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_BreakVector_X) == 0x000060, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_BreakVector_Y) == 0x000064, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_BreakVector_Z) == 0x000068, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000070, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLaunchVelocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetVelocityPercent
// 0x0058 (0x0058 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthena_Power_Leap_Type                       Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRowAtLevel_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRowAtLevel_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent) == 0x000058, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, Temp_bool_Variable) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, Temp_bool_Variable_1) == 0x00000D, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, Temp_bool_Variable_2) == 0x00000E, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, Temp_float_Variable) == 0x000010, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, Temp_byte_Variable) == 0x000014, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_GetRowAtLevel_ReturnValue) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_GetRowAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_GetRowAtLevel_ReturnValue_1) == 0x00001C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_GetRowAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_BreakVector_X) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_BreakVector_Y) == 0x00002C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_BreakVector_Z) == 0x000030, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000041, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, K2Node_Select_Default) == 0x000042, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, K2Node_Select_Default_1) == 0x000048, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetVelocityPercent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetArcTargetLocation
// 0x0198 (0x0198 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRowAtLevel_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetRowAtLevel_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyLaunchMagWithCharge_ReturnValue;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0070(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation) == 0x000198, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_GetRowAtLevel_ReturnValue) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_GetRowAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, K2Node_MakeArray_Array) == 0x000010, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_GetRowAtLevel_ReturnValue_1) == 0x000020, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_GetRowAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_ModifyLaunchMagWithCharge_ReturnValue) == 0x000024, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_ModifyLaunchMagWithCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x000028, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x000034, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000064, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_SphereTraceSingle_OutHit) == 0x000070, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_SphereTraceSingle_ReturnValue) == 0x0000FC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000100, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x00010C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010D, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_Time) == 0x000110, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_Distance) == 0x000114, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000124, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x00013C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_ElementIndex) == 0x00016C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000170, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_TraceStart) == 0x000174, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000180, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation, CallFunc_SelectVector_ReturnValue) == 0x00018C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcTargetLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.ModifyLaunchMagWithCharge
// 0x0014 (0x0014 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge final
{
public:
	float                                         Mag;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Modify;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge) == 0x000014, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge, Mag) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge::Mag' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge, Modify) == 0x000004, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge::Modify' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge, ReturnValue) == 0x000008, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ModifyLaunchMagWithCharge::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetAccelerationValue
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue final
{
public:
	class ACharacter*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue) == 0x000050, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, Pawn) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, ReturnValue) == 0x000008, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, Temp_bool_Variable) == 0x000014, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000024, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, CallFunc_Normal_ReturnValue) == 0x000030, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x00003C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue, K2Node_Select_Default) == 0x000040, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetAccelerationValue::K2Node_Select_Default' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.ApplyEffectToWhileLeapingTargets
// 0x0188 (0x0188 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets final
{
public:
	TArray<struct FHitResult>                     Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0018(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0138(0x0028)()
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0160(0x0010)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets) == 0x000188, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, Array) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::Array' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_Array_Get_Item) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A4, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A5, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_Time) == 0x0000A8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_Distance) == 0x0000AC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_Location) == 0x0000B0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_ImpactPoint) == 0x0000BC, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_Normal) == 0x0000C8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D4, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_ElementIndex) == 0x000104, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_FaceIndex) == 0x000108, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_TraceStart) == 0x00010C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_BreakHitResult_TraceEnd) == 0x000118, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_Array_AddUnique_ReturnValue) == 0x000128, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000138, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000160, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_IsValidClass_ReturnValue) == 0x000170, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000178, "Member 'GA_Athena_ActivePower_Leap_Parent_C_ApplyEffectToWhileLeapingTargets::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.LeapingLoopGCParams
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams) == 0x000008, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams) == 0x0000B8, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_LeapingLoopGCParams::ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetArcCustomLocation
// 0x0024 (0x0024 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation) == 0x000024, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation, Location) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation::Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetArcCustomLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.SelectArcLocation
// 0x0034 (0x0034 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArcCustomLocation_Location;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArcTargetLocation_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation) == 0x000034, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation, TargetLocation) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation, Location) == 0x00000C, "Member 'GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation::Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation, CallFunc_GetArcCustomLocation_Location) == 0x000018, "Member 'GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation::CallFunc_GetArcCustomLocation_Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation, CallFunc_GetArcTargetLocation_ReturnValue) == 0x000024, "Member 'GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation::CallFunc_GetArcTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'GA_Athena_ActivePower_Leap_Parent_C_SelectArcLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetClampVelocityOnFinish
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish final
{
public:
	float                                         ClampVelOnFinish_0;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish) == 0x000004, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish, ClampVelOnFinish_0) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetClampVelocityOnFinish::ClampVelOnFinish_0' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetSetVelocityOnFinish
// 0x000C (0x000C - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish final
{
public:
	struct FVector                                SetVelOnFinish_0;                                  // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish) == 0x00000C, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish, SetVelOnFinish_0) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetSetVelocityOnFinish::SetVelOnFinish_0' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.GetLeapDuration
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration) == 0x000008, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration, ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration, CallFunc_GetValueAtLevel_ReturnValue) == 0x000004, "Member 'GA_Athena_ActivePower_Leap_Parent_C_GetLeapDuration::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");

// Function GA_Athena_ActivePower_Leap_Parent.GA_Athena_ActivePower_Leap_Parent_C.Give Till Land Fall Immunity
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity) == 0x000004, "Wrong alignment on GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity");
static_assert(sizeof(GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity) == 0x000008, "Wrong size on GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity");
static_assert(offsetof(GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000000, "Member 'GA_Athena_ActivePower_Leap_Parent_C_Give_Till_Land_Fall_Immunity::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

}

