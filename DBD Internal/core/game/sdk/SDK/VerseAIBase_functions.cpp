#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseAIBase

#include "Basic.hpp"

#include "VerseAIBase_classes.hpp"
#include "VerseAIBase_parameters.hpp"


namespace SDK
{

// Function VerseAIBase.AIComponent.OnControllerEndPlay
// (Final, Native, Public)
// Parameters:
// class AActor*                           InSource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIComponent::OnControllerEndPlay(class AActor* InSource, EEndPlayReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnControllerEndPlay");

	Params::AIComponent_OnControllerEndPlay Parms{};

	Parms.InSource = InSource;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.AIComponent.OnPossessedPawnChanged
// (Final, Native, Public)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIComponent::OnPossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPossessedPawnChanged");

	Params::AIComponent_OnPossessedPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.AIBehaviorScript.OnControllerEndPlay
// (Final, Native, Public)
// Parameters:
// class AActor*                           InSource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIBehaviorScript::OnControllerEndPlay(class AActor* InSource, EEndPlayReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnControllerEndPlay");

	Params::AIBehaviorScript_OnControllerEndPlay Parms{};

	Parms.InSource = InSource;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.AIBehaviorScript.OnPossessedPawnChanged
// (Final, Native, Public)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIBehaviorScript::OnPossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPossessedPawnChanged");

	Params::AIBehaviorScript_OnPossessedPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.AIBehaviorScriptComponent.GetBehaviorScript
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIBehaviorScript*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIBehaviorScript* UAIBehaviorScriptComponent::GetBehaviorScript()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBehaviorScript");

	Params::AIBehaviorScriptComponent_GetBehaviorScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseAIBase.FortAthenaAISpawnerDataComponent_Verse.AddUniqueEntityComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UEntityComponent>     EntityComponent                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAISpawnerDataComponent_Verse::AddUniqueEntityComponent(TSubclassOf<class UEntityComponent> EntityComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddUniqueEntityComponent");

	Params::FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent Parms{};

	Parms.EntityComponent = EntityComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.FortAthenaAISpawnerDataComponent_Verse.AddUniqueEntityComponentInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEntityComponent*                 EntityComponent                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAISpawnerDataComponent_Verse::AddUniqueEntityComponentInstance(class UEntityComponent* EntityComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddUniqueEntityComponentInstance");

	Params::FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponentInstance Parms{};

	Parms.EntityComponent = EntityComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.InternalOnAIDied
// (Final, Native, Private)
// Parameters:
// class AController*                      KilledController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsABot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        KilledAIPawn                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  KilledPlayerPawn                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      KillerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerseAISpawner::InternalOnAIDied(class AController* KilledController, bool bIsABot, class AFortPawn* KilledAIPawn, class AFortPlayerPawn* KilledPlayerPawn, class AController* KillerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InternalOnAIDied");

	Params::VerseAISpawner_InternalOnAIDied Parms{};

	Parms.KilledController = KilledController;
	Parms.bIsABot = bIsABot;
	Parms.KilledAIPawn = KilledAIPawn;
	Parms.KilledPlayerPawn = KilledPlayerPawn;
	Parms.KillerController = KillerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.InternalOnSpawned
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerseAISpawner::InternalOnSpawned(class APawn* Pawn, const int32 RequestID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InternalOnSpawned");

	Params::VerseAISpawner_InternalOnSpawned Parms{};

	Parms.Pawn = Pawn;
	Parms.RequestID = RequestID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.KillAllBots
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bForceDoNotDropLoot                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerseAISpawner::KillAllBots(const bool bForceDoNotDropLoot)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("KillAllBots");

	Params::VerseAISpawner_KillAllBots Parms{};

	Parms.bForceDoNotDropLoot = bForceDoNotDropLoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.OnEQSFinished
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector>                  QueryResultLocations                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AVerseAISpawner::OnEQSFinished(const TArray<struct FVector>& QueryResultLocations)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEQSFinished");

	Params::VerseAISpawner_OnEQSFinished Parms{};

	Parms.QueryResultLocations = std::move(QueryResultLocations);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.OnPreSpawn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortAthenaAISpawnerDataComponentList*ComponentList                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerseAISpawner::OnPreSpawn(class UFortAthenaAISpawnerDataComponentList* ComponentList)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreSpawn");

	Params::VerseAISpawner_OnPreSpawn Parms{};

	Parms.ComponentList = ComponentList;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.OnPropertiesLoaded
// (Final, Native, Private)

void AVerseAISpawner::OnPropertiesLoaded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPropertiesLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAIBase.VerseAISpawner.OnSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerseAISpawner::OnSpawned(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSpawned");

	Params::VerseAISpawner_OnSpawned Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseAIBase.VerseAISpawner.RequestSpawn
// (Final, Native, Public, BlueprintCallable)

void AVerseAISpawner::RequestSpawn()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RequestSpawn");

	UObject::ProcessEvent(Func, nullptr);
}

}

