#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Assets_SkeletalMesh_V

#include "Basic.hpp"


namespace SDK::Params
{

// Function Assets_SkeletalMesh_V.SkeletalMesh_V.Create
// 0x0028 (0x0028 - 0x0000)
struct SkeletalMesh_V_Create final
{
public:
	class FString                                 __verse_0x5D4EDCE6_pathToAsset;                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMesh_V*                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsset*                                 _TEMP_0;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsset*                                 _TEMP_1;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkeletalMesh_V_Create) == 0x000008, "Wrong alignment on SkeletalMesh_V_Create");
static_assert(sizeof(SkeletalMesh_V_Create) == 0x000028, "Wrong size on SkeletalMesh_V_Create");
static_assert(offsetof(SkeletalMesh_V_Create, __verse_0x5D4EDCE6_pathToAsset) == 0x000000, "Member 'SkeletalMesh_V_Create::__verse_0x5D4EDCE6_pathToAsset' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_Create, RetVal) == 0x000010, "Member 'SkeletalMesh_V_Create::RetVal' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_Create, _TEMP_0) == 0x000018, "Member 'SkeletalMesh_V_Create::_TEMP_0' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_Create, _TEMP_1) == 0x000020, "Member 'SkeletalMesh_V_Create::_TEMP_1' has a wrong offset!");

// Function Assets_SkeletalMesh_V.SkeletalMesh_V.createAndLoad
// 0x0030 (0x0030 - 0x0000)
struct SkeletalMesh_V_createAndLoad final
{
public:
	class FString                                 __verse_0x5D4EDCE6_pathToAsset;                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMesh_V*                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh_V*                        __verse_0xC53A5C85_NewAsset_0;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsset*                                 _TEMP_0;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsset*                                 _TEMP_1;                                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkeletalMesh_V_createAndLoad) == 0x000008, "Wrong alignment on SkeletalMesh_V_createAndLoad");
static_assert(sizeof(SkeletalMesh_V_createAndLoad) == 0x000030, "Wrong size on SkeletalMesh_V_createAndLoad");
static_assert(offsetof(SkeletalMesh_V_createAndLoad, __verse_0x5D4EDCE6_pathToAsset) == 0x000000, "Member 'SkeletalMesh_V_createAndLoad::__verse_0x5D4EDCE6_pathToAsset' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_createAndLoad, RetVal) == 0x000010, "Member 'SkeletalMesh_V_createAndLoad::RetVal' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_createAndLoad, __verse_0xC53A5C85_NewAsset_0) == 0x000018, "Member 'SkeletalMesh_V_createAndLoad::__verse_0xC53A5C85_NewAsset_0' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_createAndLoad, _TEMP_0) == 0x000020, "Member 'SkeletalMesh_V_createAndLoad::_TEMP_0' has a wrong offset!");
static_assert(offsetof(SkeletalMesh_V_createAndLoad, _TEMP_1) == 0x000028, "Member 'SkeletalMesh_V_createAndLoad::_TEMP_1' has a wrong offset!");

}

