#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortSelectableRadialEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FortSelectableRadialEntry.FortSelectableRadialEntry_C
// 0x0030 (0x0C20 - 0x0BF0)
class UFortSelectableRadialEntry_C final : public UFortRadialPickerEntry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BF0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selected;                                          // 0x0BF8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultSelectedColor;                              // 0x0C00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultUnselectedColor;                            // 0x0C10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_UpdateSelectionColor(bool Selected_0);
	void BP_OnSelected();
	void BP_OnDeselected();
	void OnAvailabilityChanged(bool bIsAvailable);
	void ExecuteUbergraph_FortSelectableRadialEntry(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FortSelectableRadialEntry_C">();
	}
	static class UFortSelectableRadialEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSelectableRadialEntry_C>();
	}
};
static_assert(alignof(UFortSelectableRadialEntry_C) == 0x000008, "Wrong alignment on UFortSelectableRadialEntry_C");
static_assert(sizeof(UFortSelectableRadialEntry_C) == 0x000C20, "Wrong size on UFortSelectableRadialEntry_C");
static_assert(offsetof(UFortSelectableRadialEntry_C, UberGraphFrame) == 0x000BF0, "Member 'UFortSelectableRadialEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFortSelectableRadialEntry_C, Selected) == 0x000BF8, "Member 'UFortSelectableRadialEntry_C::Selected' has a wrong offset!");
static_assert(offsetof(UFortSelectableRadialEntry_C, DefaultSelectedColor) == 0x000C00, "Member 'UFortSelectableRadialEntry_C::DefaultSelectedColor' has a wrong offset!");
static_assert(offsetof(UFortSelectableRadialEntry_C, DefaultUnselectedColor) == 0x000C10, "Member 'UFortSelectableRadialEntry_C::DefaultUnselectedColor' has a wrong offset!");

}

