#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseCore

#include "Basic.hpp"

#include "NetworkPrediction_structs.hpp"


namespace SDK::Params
{

// Function VerseCore.VUIActor.OnDrawHUD
// 0x0010 (0x0010 - 0x0000)
struct VUIActor_OnDrawHUD final
{
public:
	class AHUD*                                   HUD;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvas*                                Canvas;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_OnDrawHUD) == 0x000008, "Wrong alignment on VUIActor_OnDrawHUD");
static_assert(sizeof(VUIActor_OnDrawHUD) == 0x000010, "Wrong size on VUIActor_OnDrawHUD");
static_assert(offsetof(VUIActor_OnDrawHUD, HUD) == 0x000000, "Member 'VUIActor_OnDrawHUD::HUD' has a wrong offset!");
static_assert(offsetof(VUIActor_OnDrawHUD, Canvas) == 0x000008, "Member 'VUIActor_OnDrawHUD::Canvas' has a wrong offset!");

// Function VerseCore.VUIActor.OnPossessed
// 0x0008 (0x0008 - 0x0000)
struct VUIActor_OnPossessed final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_OnPossessed) == 0x000008, "Wrong alignment on VUIActor_OnPossessed");
static_assert(sizeof(VUIActor_OnPossessed) == 0x000008, "Wrong size on VUIActor_OnPossessed");
static_assert(offsetof(VUIActor_OnPossessed, Controller) == 0x000000, "Member 'VUIActor_OnPossessed::Controller' has a wrong offset!");

// Function VerseCore.VUIActor.OnRep_PlayerController
// 0x0008 (0x0008 - 0x0000)
struct VUIActor_OnRep_PlayerController final
{
public:
	class APlayerController*                      OldPC;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_OnRep_PlayerController) == 0x000008, "Wrong alignment on VUIActor_OnRep_PlayerController");
static_assert(sizeof(VUIActor_OnRep_PlayerController) == 0x000008, "Wrong size on VUIActor_OnRep_PlayerController");
static_assert(offsetof(VUIActor_OnRep_PlayerController, OldPC) == 0x000000, "Member 'VUIActor_OnRep_PlayerController::OldPC' has a wrong offset!");

// Function VerseCore.VUIActor.OnUnPossessed
// 0x0008 (0x0008 - 0x0000)
struct VUIActor_OnUnPossessed final
{
public:
	class APlayerController*                      OldController;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_OnUnPossessed) == 0x000008, "Wrong alignment on VUIActor_OnUnPossessed");
static_assert(sizeof(VUIActor_OnUnPossessed) == 0x000008, "Wrong size on VUIActor_OnUnPossessed");
static_assert(offsetof(VUIActor_OnUnPossessed, OldController) == 0x000000, "Member 'VUIActor_OnUnPossessed::OldController' has a wrong offset!");

// Function VerseCore.VUIActor.ServerReceiveClientInput
// 0x0018 (0x0018 - 0x0000)
struct VUIActor_ServerReceiveClientInput final
{
public:
	struct FServerReplicationRPCParameter         ProxyParameter;                                    // 0x0000(0x0018)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_ServerReceiveClientInput) == 0x000008, "Wrong alignment on VUIActor_ServerReceiveClientInput");
static_assert(sizeof(VUIActor_ServerReceiveClientInput) == 0x000018, "Wrong size on VUIActor_ServerReceiveClientInput");
static_assert(offsetof(VUIActor_ServerReceiveClientInput, ProxyParameter) == 0x000000, "Member 'VUIActor_ServerReceiveClientInput::ProxyParameter' has a wrong offset!");

// Function VerseCore.VUIActor.GetController
// 0x0008 (0x0008 - 0x0000)
struct VUIActor_GetController final
{
public:
	class APlayerController*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_GetController) == 0x000008, "Wrong alignment on VUIActor_GetController");
static_assert(sizeof(VUIActor_GetController) == 0x000008, "Wrong size on VUIActor_GetController");
static_assert(offsetof(VUIActor_GetController, ReturnValue) == 0x000000, "Member 'VUIActor_GetController::ReturnValue' has a wrong offset!");

// Function VerseCore.VUIActor.GetVUIMode
// 0x0004 (0x0004 - 0x0000)
struct VUIActor_GetVUIMode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_GetVUIMode) == 0x000004, "Wrong alignment on VUIActor_GetVUIMode");
static_assert(sizeof(VUIActor_GetVUIMode) == 0x000004, "Wrong size on VUIActor_GetVUIMode");
static_assert(offsetof(VUIActor_GetVUIMode, ReturnValue) == 0x000000, "Member 'VUIActor_GetVUIMode::ReturnValue' has a wrong offset!");

// Function VerseCore.VUIActor.K2_GetSpawnedBrainObject
// 0x0008 (0x0008 - 0x0000)
struct VUIActor_K2_GetSpawnedBrainObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VUIActor_K2_GetSpawnedBrainObject) == 0x000008, "Wrong alignment on VUIActor_K2_GetSpawnedBrainObject");
static_assert(sizeof(VUIActor_K2_GetSpawnedBrainObject) == 0x000008, "Wrong size on VUIActor_K2_GetSpawnedBrainObject");
static_assert(offsetof(VUIActor_K2_GetSpawnedBrainObject, ReturnValue) == 0x000000, "Member 'VUIActor_K2_GetSpawnedBrainObject::ReturnValue' has a wrong offset!");

}

