#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveStreamAnimation

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "LiveStreamAnimation_structs.hpp"


namespace SDK
{

// Class LiveStreamAnimation.LiveStreamAnimationChannel
// 0x0010 (0x0078 - 0x0068)
class ULiveStreamAnimationChannel final : public UChannel
{
public:
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationChannel">();
	}
	static class ULiveStreamAnimationChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationChannel>();
	}
};
static_assert(alignof(ULiveStreamAnimationChannel) == 0x000008, "Wrong alignment on ULiveStreamAnimationChannel");
static_assert(sizeof(ULiveStreamAnimationChannel) == 0x000078, "Wrong size on ULiveStreamAnimationChannel");

// Class LiveStreamAnimation.LiveStreamAnimationDataHandler
// 0x0010 (0x0038 - 0x0028)
class ULiveStreamAnimationDataHandler : public UObject
{
public:
	class ULiveStreamAnimationSubsystem*          OwningSubsystem;                                   // 0x0028(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationDataHandler">();
	}
	static class ULiveStreamAnimationDataHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationDataHandler>();
	}
};
static_assert(alignof(ULiveStreamAnimationDataHandler) == 0x000008, "Wrong alignment on ULiveStreamAnimationDataHandler");
static_assert(sizeof(ULiveStreamAnimationDataHandler) == 0x000038, "Wrong size on ULiveStreamAnimationDataHandler");
static_assert(offsetof(ULiveStreamAnimationDataHandler, OwningSubsystem) == 0x000028, "Member 'ULiveStreamAnimationDataHandler::OwningSubsystem' has a wrong offset!");

// Class LiveStreamAnimation.LiveStreamAnimationSettings
// 0x0038 (0x0070 - 0x0038)
class ULiveStreamAnimationSettings final : public UDeveloperSettings
{
public:
	TArray<class FName>                           HandleNames;                                       // 0x0038(0x0010)(Edit, ZeroConstructor, Transient, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSoftClassPath>                 ConfiguredDataHandlers;                            // 0x0048(0x0010)(Edit, ZeroConstructor, Transient, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationSettings">();
	}
	static class ULiveStreamAnimationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationSettings>();
	}
};
static_assert(alignof(ULiveStreamAnimationSettings) == 0x000008, "Wrong alignment on ULiveStreamAnimationSettings");
static_assert(sizeof(ULiveStreamAnimationSettings) == 0x000070, "Wrong size on ULiveStreamAnimationSettings");
static_assert(offsetof(ULiveStreamAnimationSettings, HandleNames) == 0x000038, "Member 'ULiveStreamAnimationSettings::HandleNames' has a wrong offset!");
static_assert(offsetof(ULiveStreamAnimationSettings, ConfiguredDataHandlers) == 0x000048, "Member 'ULiveStreamAnimationSettings::ConfiguredDataHandlers' has a wrong offset!");

// Class LiveStreamAnimation.LiveStreamAnimationSubsystem
// 0x0048 (0x0078 - 0x0030)
class ULiveStreamAnimationSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnabled;                                          // 0x0050(0x0001)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_51[0x17];                                      // 0x0051(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULiveStreamAnimationDataHandler*> ConfiguredDataHandlers;                           // 0x0068(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetAcceptClientPackets_Private(bool bInShouldAcceptClientPackets);
	void SetRole(const ELiveStreamAnimationRole NewRole);

	class ULiveStreamAnimationDataHandler* GetDataHandler(TSubclassOf<class ULiveStreamAnimationDataHandler> Type) const;
	ELiveStreamAnimationRole GetRole() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationSubsystem">();
	}
	static class ULiveStreamAnimationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationSubsystem>();
	}
};
static_assert(alignof(ULiveStreamAnimationSubsystem) == 0x000008, "Wrong alignment on ULiveStreamAnimationSubsystem");
static_assert(sizeof(ULiveStreamAnimationSubsystem) == 0x000078, "Wrong size on ULiveStreamAnimationSubsystem");
static_assert(offsetof(ULiveStreamAnimationSubsystem, bEnabled) == 0x000050, "Member 'ULiveStreamAnimationSubsystem::bEnabled' has a wrong offset!");
static_assert(offsetof(ULiveStreamAnimationSubsystem, ConfiguredDataHandlers) == 0x000068, "Member 'ULiveStreamAnimationSubsystem::ConfiguredDataHandlers' has a wrong offset!");

}

