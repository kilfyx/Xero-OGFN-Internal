#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wumba_Gadget_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Wumba_Gadget_AnimBP.Wumba_Gadget_AnimBP_C
// 0x0580 (0x0840 - 0x02C0)
class UWumba_Gadget_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimInstanceSubsystemData             AnimBlueprintClassSubsystem_PropertyAccess;        // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D0(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0300(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0348(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0370(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x03E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0418(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0490(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04C0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0538(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0568(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0618(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x06E0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0758(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0788(0x00B0)()
	float                                         PegBoard_Speed;                                    // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasFinishedUpgrading;                             // 0x083C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Wumba_Gadget_AnimBP(int32 EntryPoint);
	void UpdateUpgradingVisuals(bool NewValue);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Wumba_Gadget_AnimBP_C">();
	}
	static class UWumba_Gadget_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWumba_Gadget_AnimBP_C>();
	}
};
static_assert(alignof(UWumba_Gadget_AnimBP_C) == 0x000010, "Wrong alignment on UWumba_Gadget_AnimBP_C");
static_assert(sizeof(UWumba_Gadget_AnimBP_C) == 0x000840, "Wrong size on UWumba_Gadget_AnimBP_C");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UWumba_Gadget_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimBlueprintClassSubsystem_PropertyAccess) == 0x0002C8, "Member 'UWumba_Gadget_AnimBP_C::AnimBlueprintClassSubsystem_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_Root) == 0x0002D0, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_Slot) == 0x000300, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000348, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000370, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0003E8, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000418, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000490, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0004C0, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000538, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x000568, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000618, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0006E0, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateResult) == 0x000758, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, AnimGraphNode_StateMachine) == 0x000788, "Member 'UWumba_Gadget_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, PegBoard_Speed) == 0x000838, "Member 'UWumba_Gadget_AnimBP_C::PegBoard_Speed' has a wrong offset!");
static_assert(offsetof(UWumba_Gadget_AnimBP_C, bHasFinishedUpgrading) == 0x00083C, "Member 'UWumba_Gadget_AnimBP_C::bHasFinishedUpgrading' has a wrong offset!");

}

