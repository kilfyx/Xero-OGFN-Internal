#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownTournamentPosterFront

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ShowdownTournamentPosterFront.ShowdownTournamentPosterFront_C
// 0x0110 (0x07C8 - 0x06B8)
class UShowdownTournamentPosterFront_C final : public UFortShowdownDetailView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Alert;                                      // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LockIcon;                                    // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LockIconWorldCup;                            // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PosterShadow;                                // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_318;                               // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_431;                               // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_551;                               // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_676;                               // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEventLocked;                                // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEventLockedWorldCup;                        // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownPin_C*                         ShowdownPin;                                       // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StandardLayout;                                    // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  Switcher_PosterTextLayout;                         // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_EventAlert;                                   // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentDateText;                                // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentDateTextWorldCup;                        // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle1;                                  // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle1WorldCup;                          // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle2;                                  // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle2WorldCup;                          // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WorldCupLayout;                                    // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            TitleColor;                                        // 0x0768(0x0028)(Edit, BlueprintVisible)
	bool                                          HiddenWhileLoading;                                // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SubColor;                                          // 0x0798(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HidePin;                                           // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void GetTournamentDateText(class FText* TournamentDate);
	void RefreshDataBP();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__Image_PosterFront_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature();
	void ExecuteUbergraph_ShowdownTournamentPosterFront(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShowdownTournamentPosterFront_C">();
	}
	static class UShowdownTournamentPosterFront_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowdownTournamentPosterFront_C>();
	}
};
static_assert(alignof(UShowdownTournamentPosterFront_C) == 0x000008, "Wrong alignment on UShowdownTournamentPosterFront_C");
static_assert(sizeof(UShowdownTournamentPosterFront_C) == 0x0007C8, "Wrong size on UShowdownTournamentPosterFront_C");
static_assert(offsetof(UShowdownTournamentPosterFront_C, UberGraphFrame) == 0x0006B8, "Member 'UShowdownTournamentPosterFront_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Border_Alert) == 0x0006C0, "Member 'UShowdownTournamentPosterFront_C::Border_Alert' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_LockIcon) == 0x0006C8, "Member 'UShowdownTournamentPosterFront_C::Image_LockIcon' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_LockIconWorldCup) == 0x0006D0, "Member 'UShowdownTournamentPosterFront_C::Image_LockIconWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_PosterShadow) == 0x0006D8, "Member 'UShowdownTournamentPosterFront_C::Image_PosterShadow' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_318) == 0x0006E0, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_318' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_431) == 0x0006E8, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_431' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_551) == 0x0006F0, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_551' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_676) == 0x0006F8, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_676' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, OverlayEventLocked) == 0x000700, "Member 'UShowdownTournamentPosterFront_C::OverlayEventLocked' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, OverlayEventLockedWorldCup) == 0x000708, "Member 'UShowdownTournamentPosterFront_C::OverlayEventLockedWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, ShowdownPin) == 0x000710, "Member 'UShowdownTournamentPosterFront_C::ShowdownPin' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, StandardLayout) == 0x000718, "Member 'UShowdownTournamentPosterFront_C::StandardLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Switcher_PosterTextLayout) == 0x000720, "Member 'UShowdownTournamentPosterFront_C::Switcher_PosterTextLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Text_EventAlert) == 0x000728, "Member 'UShowdownTournamentPosterFront_C::Text_EventAlert' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentDateText) == 0x000730, "Member 'UShowdownTournamentPosterFront_C::TournamentDateText' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentDateTextWorldCup) == 0x000738, "Member 'UShowdownTournamentPosterFront_C::TournamentDateTextWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle1) == 0x000740, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle1' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle1WorldCup) == 0x000748, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle1WorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle2) == 0x000750, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle2' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle2WorldCup) == 0x000758, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle2WorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, WorldCupLayout) == 0x000760, "Member 'UShowdownTournamentPosterFront_C::WorldCupLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TitleColor) == 0x000768, "Member 'UShowdownTournamentPosterFront_C::TitleColor' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, HiddenWhileLoading) == 0x000790, "Member 'UShowdownTournamentPosterFront_C::HiddenWhileLoading' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, SubColor) == 0x000798, "Member 'UShowdownTournamentPosterFront_C::SubColor' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, HidePin) == 0x0007C0, "Member 'UShowdownTournamentPosterFront_C::HidePin' has a wrong offset!");

}

