#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhosphorusWipeoutRuntime

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct PhosphorusWipeoutRuntime.PhosphorusWipeoutKnockBackData
// 0x0010 (0x0010 - 0x0000)
struct FPhosphorusWipeoutKnockBackData final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KnockBackMultiplier;                               // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPhosphorusWipeoutKnockBackData) == 0x000008, "Wrong alignment on FPhosphorusWipeoutKnockBackData");
static_assert(sizeof(FPhosphorusWipeoutKnockBackData) == 0x000010, "Wrong size on FPhosphorusWipeoutKnockBackData");
static_assert(offsetof(FPhosphorusWipeoutKnockBackData, Pawn) == 0x000000, "Member 'FPhosphorusWipeoutKnockBackData::Pawn' has a wrong offset!");
static_assert(offsetof(FPhosphorusWipeoutKnockBackData, KnockBackMultiplier) == 0x000008, "Member 'FPhosphorusWipeoutKnockBackData::KnockBackMultiplier' has a wrong offset!");

// ScriptStruct PhosphorusWipeoutRuntime.ModifyIncomingPawnDamageDefinition
// 0x0070 (0x0070 - 0x0000)
struct FModifyIncomingPawnDamageDefinition final
{
public:
	struct FGameplayTagContainer                  IncludeDamageTags;                                 // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ExcludeDamageTags;                                 // 0x0020(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Event;                                             // 0x0040(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         DamageMultiplier;                                  // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModifyIncomingPawnDamageDefinition) == 0x000008, "Wrong alignment on FModifyIncomingPawnDamageDefinition");
static_assert(sizeof(FModifyIncomingPawnDamageDefinition) == 0x000070, "Wrong size on FModifyIncomingPawnDamageDefinition");
static_assert(offsetof(FModifyIncomingPawnDamageDefinition, IncludeDamageTags) == 0x000000, "Member 'FModifyIncomingPawnDamageDefinition::IncludeDamageTags' has a wrong offset!");
static_assert(offsetof(FModifyIncomingPawnDamageDefinition, ExcludeDamageTags) == 0x000020, "Member 'FModifyIncomingPawnDamageDefinition::ExcludeDamageTags' has a wrong offset!");
static_assert(offsetof(FModifyIncomingPawnDamageDefinition, Event) == 0x000040, "Member 'FModifyIncomingPawnDamageDefinition::Event' has a wrong offset!");
static_assert(offsetof(FModifyIncomingPawnDamageDefinition, DamageMultiplier) == 0x000048, "Member 'FModifyIncomingPawnDamageDefinition::DamageMultiplier' has a wrong offset!");

// ScriptStruct PhosphorusWipeoutRuntime.ReroutePlayerEventQueueEntry
// 0x00C0 (0x00C0 - 0x0000)
struct FReroutePlayerEventQueueEntry final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0008(0x00B0)(NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FReroutePlayerEventQueueEntry) == 0x000008, "Wrong alignment on FReroutePlayerEventQueueEntry");
static_assert(sizeof(FReroutePlayerEventQueueEntry) == 0x0000C0, "Wrong size on FReroutePlayerEventQueueEntry");
static_assert(offsetof(FReroutePlayerEventQueueEntry, GameplayEventData) == 0x000008, "Member 'FReroutePlayerEventQueueEntry::GameplayEventData' has a wrong offset!");

// ScriptStruct PhosphorusWipeoutRuntime.ReroutePlayerEventDefinition
// 0x0070 (0x0070 - 0x0000)
struct FReroutePlayerEventDefinition final
{
public:
	struct FGameplayTagContainer                  IncomingEventTags;                                 // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  IncludeTags;                                       // 0x0020(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ExcludeTags;                                       // 0x0040(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ImmediateOutgoingEventTag;                         // 0x0060(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MergedOutgoingEventTag;                            // 0x0068(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FReroutePlayerEventDefinition) == 0x000008, "Wrong alignment on FReroutePlayerEventDefinition");
static_assert(sizeof(FReroutePlayerEventDefinition) == 0x000070, "Wrong size on FReroutePlayerEventDefinition");
static_assert(offsetof(FReroutePlayerEventDefinition, IncomingEventTags) == 0x000000, "Member 'FReroutePlayerEventDefinition::IncomingEventTags' has a wrong offset!");
static_assert(offsetof(FReroutePlayerEventDefinition, IncludeTags) == 0x000020, "Member 'FReroutePlayerEventDefinition::IncludeTags' has a wrong offset!");
static_assert(offsetof(FReroutePlayerEventDefinition, ExcludeTags) == 0x000040, "Member 'FReroutePlayerEventDefinition::ExcludeTags' has a wrong offset!");
static_assert(offsetof(FReroutePlayerEventDefinition, ImmediateOutgoingEventTag) == 0x000060, "Member 'FReroutePlayerEventDefinition::ImmediateOutgoingEventTag' has a wrong offset!");
static_assert(offsetof(FReroutePlayerEventDefinition, MergedOutgoingEventTag) == 0x000068, "Member 'FReroutePlayerEventDefinition::MergedOutgoingEventTag' has a wrong offset!");

}

