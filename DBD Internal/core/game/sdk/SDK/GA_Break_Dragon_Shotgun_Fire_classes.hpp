#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Break_Dragon_Shotgun_Fire

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Break_Dragon_Shotgun_Fire.GA_Break_Dragon_Shotgun_Fire_C
// 0x0058 (0x0B10 - 0x0AB8)
class UGA_Break_Dragon_Shotgun_Fire_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   SpawnSocket;                                       // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceForwardOffset;                                // 0x0AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceHeightOffset;                                 // 0x0ACC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireTraceRange;                                    // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Angles;                                            // 0x0AE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CrouchTraceOffset;                                 // 0x0AF8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 FireBGA;                                           // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Break_Dragon_Shotgun_Fire(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	struct FVector GetStartTraceLocation(class ACharacter* Pawn);
	struct FVector GetTraceAngleOffset(class AFortPawn* Pawn, int32 AngleIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Break_Dragon_Shotgun_Fire_C">();
	}
	static class UGA_Break_Dragon_Shotgun_Fire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Break_Dragon_Shotgun_Fire_C>();
	}
};
static_assert(alignof(UGA_Break_Dragon_Shotgun_Fire_C) == 0x000008, "Wrong alignment on UGA_Break_Dragon_Shotgun_Fire_C");
static_assert(sizeof(UGA_Break_Dragon_Shotgun_Fire_C) == 0x000B10, "Wrong size on UGA_Break_Dragon_Shotgun_Fire_C");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, SpawnSocket) == 0x000AC0, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::SpawnSocket' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, TraceForwardOffset) == 0x000AC8, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::TraceForwardOffset' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, TraceHeightOffset) == 0x000ACC, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::TraceHeightOffset' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, FireTraceRange) == 0x000AD8, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::FireTraceRange' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, Angles) == 0x000AE0, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::Angles' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, PlayerPawn) == 0x000AF0, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, CrouchTraceOffset) == 0x000AF8, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::CrouchTraceOffset' has a wrong offset!");
static_assert(offsetof(UGA_Break_Dragon_Shotgun_Fire_C, FireBGA) == 0x000B08, "Member 'UGA_Break_Dragon_Shotgun_Fire_C::FireBGA' has a wrong offset!");

}

