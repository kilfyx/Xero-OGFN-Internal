#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseCore

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct VerseCore.VUIRuntimeInputMapping
// 0x0008 (0x0008 - 0x0000)
struct FVUIRuntimeInputMapping final
{
public:
	class UFunction*                              VerseFunction;                                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVUIRuntimeInputMapping) == 0x000008, "Wrong alignment on FVUIRuntimeInputMapping");
static_assert(sizeof(FVUIRuntimeInputMapping) == 0x000008, "Wrong size on FVUIRuntimeInputMapping");
static_assert(offsetof(FVUIRuntimeInputMapping, VerseFunction) == 0x000000, "Member 'FVUIRuntimeInputMapping::VerseFunction' has a wrong offset!");

// ScriptStruct VerseCore.VUIRuntimeEventMapping
// 0x0010 (0x0010 - 0x0000)
struct FVUIRuntimeEventMapping final
{
public:
	class UFunction*                              VerseFunction;                                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFunction*                              VUIFunction;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVUIRuntimeEventMapping) == 0x000008, "Wrong alignment on FVUIRuntimeEventMapping");
static_assert(sizeof(FVUIRuntimeEventMapping) == 0x000010, "Wrong size on FVUIRuntimeEventMapping");
static_assert(offsetof(FVUIRuntimeEventMapping, VerseFunction) == 0x000000, "Member 'FVUIRuntimeEventMapping::VerseFunction' has a wrong offset!");
static_assert(offsetof(FVUIRuntimeEventMapping, VUIFunction) == 0x000008, "Member 'FVUIRuntimeEventMapping::VUIFunction' has a wrong offset!");

// ScriptStruct VerseCore.VUIRuntimeMapping
// 0x0030 (0x0030 - 0x0000)
struct FVUIRuntimeMapping final
{
public:
	class UFunction*                              CallableFunction;                                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x28];                                       // 0x0008(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FVUIRuntimeMapping) == 0x000008, "Wrong alignment on FVUIRuntimeMapping");
static_assert(sizeof(FVUIRuntimeMapping) == 0x000030, "Wrong size on FVUIRuntimeMapping");
static_assert(offsetof(FVUIRuntimeMapping, CallableFunction) == 0x000000, "Member 'FVUIRuntimeMapping::CallableFunction' has a wrong offset!");

// ScriptStruct VerseCore.VUIDynamicEventBindingData
// 0x0040 (0x0040 - 0x0000)
struct FVUIDynamicEventBindingData final
{
public:
	class FName                                   FunctionNameToBind;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMemberReference                       ExternalSourceReference;                           // 0x0008(0x0038)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FVUIDynamicEventBindingData) == 0x000008, "Wrong alignment on FVUIDynamicEventBindingData");
static_assert(sizeof(FVUIDynamicEventBindingData) == 0x000040, "Wrong size on FVUIDynamicEventBindingData");
static_assert(offsetof(FVUIDynamicEventBindingData, FunctionNameToBind) == 0x000000, "Member 'FVUIDynamicEventBindingData::FunctionNameToBind' has a wrong offset!");
static_assert(offsetof(FVUIDynamicEventBindingData, ExternalSourceReference) == 0x000008, "Member 'FVUIDynamicEventBindingData::ExternalSourceReference' has a wrong offset!");

}

