#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NearestNeighborModel

#include "Basic.hpp"

#include "NearestNeighborModel_classes.hpp"
#include "NearestNeighborModel_parameters.hpp"


namespace SDK
{

// Function NearestNeighborModel.NearestNeighborModel.SetNeighborCoeffs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           NeighborCoeffs                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModel::SetNeighborCoeffs(int32 PartId, const TArray<float>& NeighborCoeffs)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNeighborCoeffs");

	Params::NearestNeighborModel_SetNeighborCoeffs Parms{};

	Parms.PartId = PartId;
	Parms.NeighborCoeffs = std::move(NeighborCoeffs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NearestNeighborModel.NearestNeighborModel.SetNeighborOffsets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           NeighborOffsets                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModel::SetNeighborOffsets(int32 PartId, const TArray<float>& NeighborOffsets)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNeighborOffsets");

	Params::NearestNeighborModel_SetNeighborOffsets Parms{};

	Parms.PartId = PartId;
	Parms.NeighborOffsets = std::move(NeighborOffsets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NearestNeighborModel.NearestNeighborModel.SetNumNeighbors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNumNeighbors                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNearestNeighborModel::SetNumNeighbors(int32 PartId, int32 InNumNeighbors)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumNeighbors");

	Params::NearestNeighborModel_SetNumNeighbors Parms{};

	Parms.PartId = PartId;
	Parms.InNumNeighbors = InNumNeighbors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NearestNeighborModel.NearestNeighborModel.SetPCABasis
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           PCABasis                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModel::SetPCABasis(int32 PartId, const TArray<float>& PCABasis)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPCABasis");

	Params::NearestNeighborModel_SetPCABasis Parms{};

	Parms.PartId = PartId;
	Parms.PCABasis = std::move(PCABasis);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NearestNeighborModel.NearestNeighborModel.SetVertexMean
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           VertexMean_0                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModel::SetVertexMean(int32 PartId, const TArray<float>& VertexMean_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetVertexMean");

	Params::NearestNeighborModel_SetVertexMean Parms{};

	Parms.PartId = PartId;
	Parms.VertexMean_0 = std::move(VertexMean_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NearestNeighborModel.NearestNeighborModel.ClipInputs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                           Input                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UNearestNeighborModel::ClipInputs(const TArray<float>& Input) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClipInputs");

	Params::NearestNeighborModel_ClipInputs Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetNumNeighbors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetNumNeighbors(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumNeighbors");

	Params::NearestNeighborModel_GetNumNeighbors Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetNumParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetNumParts() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumParts");

	Params::NearestNeighborModel_GetNumParts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetPartNumVerts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetPartNumVerts(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartNumVerts");

	Params::NearestNeighborModel_GetPartNumVerts Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetPCACoeffNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetPCACoeffNum(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPCACoeffNum");

	Params::NearestNeighborModel_GetPCACoeffNum Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetPCACoeffStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetPCACoeffStart(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPCACoeffStart");

	Params::NearestNeighborModel_GetPCACoeffStart Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.NeighborCoeffs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModel::NeighborCoeffs(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NeighborCoeffs");

	Params::NearestNeighborModel_NeighborCoeffs Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.NeighborOffsets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModel::NeighborOffsets(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NeighborOffsets");

	Params::NearestNeighborModel_NeighborOffsets Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.PCABasis
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModel::PCABasis(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PCABasis");

	Params::NearestNeighborModel_PCABasis Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.VertexMean
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModel::VertexMean(int32 PartId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("VertexMean");

	Params::NearestNeighborModel_VertexMean Parms{};

	Parms.PartId = PartId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

