#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_ChBrowserDeviceTile

#include "Basic.hpp"

#include "Cr_ChBrowserDeviceTile_classes.hpp"
#include "Cr_ChBrowserDeviceTile_parameters.hpp"


namespace SDK
{

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.UpdateName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InName                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UCr_ChBrowserDeviceTile_C::UpdateName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "UpdateName");

	Params::Cr_ChBrowserDeviceTile_C_UpdateName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.UpdateArt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       inTexture2D                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSlateBrush&               inSlateBrush                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UCr_ChBrowserDeviceTile_C::UpdateArt(class UTexture2D* inTexture2D, const struct FSlateBrush& inSlateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "UpdateArt");

	Params::Cr_ChBrowserDeviceTile_C_UpdateArt Parms{};

	Parms.inTexture2D = inTexture2D;
	Parms.inSlateBrush = std::move(inSlateBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.Populate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InName                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class FText>&                    inTxMessages                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>&                    inRxMessages                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCr_ChBrowserDeviceTile_C::Populate(const class FText& InName, TArray<class FText>& inTxMessages, TArray<class FText>& inRxMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "Populate");

	Params::Cr_ChBrowserDeviceTile_C_Populate Parms{};

	Parms.InName = std::move(InName);
	Parms.inTxMessages = std::move(inTxMessages);
	Parms.inRxMessages = std::move(inRxMessages);

	UObject::ProcessEvent(Func, &Parms);

	inTxMessages = std::move(Parms.inTxMessages);
	inRxMessages = std::move(Parms.inRxMessages);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCr_ChBrowserDeviceTile_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "OnMouseLeave");

	Params::Cr_ChBrowserDeviceTile_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCr_ChBrowserDeviceTile_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "OnMouseEnter");

	Params::Cr_ChBrowserDeviceTile_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.Focus
// (Public, BlueprintCallable, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::Focus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "Focus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.ExecuteUbergraph_Cr_ChBrowserDeviceTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCr_ChBrowserDeviceTile_C::ExecuteUbergraph_Cr_ChBrowserDeviceTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "ExecuteUbergraph_Cr_ChBrowserDeviceTile");

	Params::Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BeginFlying
// (Public, BlueprintCallable, BlueprintEvent)

void UCr_ChBrowserDeviceTile_C::BeginFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "BeginFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.AddTxMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InMessage                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      InChannel                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UCr_ChBrowserDeviceTile_C::AddTxMessage(const class FText& InMessage, const class FText& InChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "AddTxMessage");

	Params::Cr_ChBrowserDeviceTile_C_AddTxMessage Parms{};

	Parms.InMessage = std::move(InMessage);
	Parms.InChannel = std::move(InChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.Add Rx Message
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InMessage                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      InChannel                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UCr_ChBrowserDeviceTile_C::Add_Rx_Message(const class FText& InMessage, const class FText& InChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cr_ChBrowserDeviceTile_C", "Add Rx Message");

	Params::Cr_ChBrowserDeviceTile_C_Add_Rx_Message Parms{};

	Parms.InMessage = std::move(InMessage);
	Parms.InChannel = std::move(InChannel);

	UObject::ProcessEvent(Func, &Parms);
}

}

