#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FloatingInteraction_Indicator_S14_Tracking

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FloatingInteraction_Indicator_S14_Tracking.FloatingInteraction_Indicator_S14_Tracking_C
// 0x00E0 (0x0398 - 0x02B8)
class UFloatingInteraction_Indicator_S14_Tracking_C final : public UFortEventLevelNavigationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LoopingHoverState;                                 // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unhover;                                           // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PopluateIn;                                        // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleBurst;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DigitalPattern;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FloatingPip;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InputActionMask;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InputActionRing;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    InputActionWidget;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OverlayLeft;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OverlayRight;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Select;                                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SelectionStateBox;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            NoBang;                                            // 0x0348(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            Bang;                                              // 0x0370(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_FloatingInteraction_Indicator_S14_Tracking(int32 EntryPoint);
	void SetBangState(bool bShowBang);
	void Construct();
	void TriggerLoopingHoverStateAnim();
	void OnObjectHoverEnd();
	void OnObjectHoverBegin();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FloatingInteraction_Indicator_S14_Tracking_C">();
	}
	static class UFloatingInteraction_Indicator_S14_Tracking_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFloatingInteraction_Indicator_S14_Tracking_C>();
	}
};
static_assert(alignof(UFloatingInteraction_Indicator_S14_Tracking_C) == 0x000008, "Wrong alignment on UFloatingInteraction_Indicator_S14_Tracking_C");
static_assert(sizeof(UFloatingInteraction_Indicator_S14_Tracking_C) == 0x000398, "Wrong size on UFloatingInteraction_Indicator_S14_Tracking_C");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, UberGraphFrame) == 0x0002B8, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, LoopingHoverState) == 0x0002C0, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::LoopingHoverState' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Unhover) == 0x0002C8, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Unhover' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Hover) == 0x0002D0, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Hover' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, PopluateIn) == 0x0002D8, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::PopluateIn' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Arrow) == 0x0002E0, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Arrow' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, CircleBurst) == 0x0002E8, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::CircleBurst' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, DigitalPattern) == 0x0002F0, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::DigitalPattern' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Divider) == 0x0002F8, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Divider' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, FloatingPip) == 0x000300, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::FloatingPip' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, InputActionMask) == 0x000308, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::InputActionMask' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, InputActionRing) == 0x000310, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::InputActionRing' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, InputActionWidget) == 0x000318, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::InputActionWidget' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, OverlayLeft) == 0x000320, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::OverlayLeft' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, OverlayRight) == 0x000328, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::OverlayRight' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, SafeZone_0) == 0x000330, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Select) == 0x000338, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Select' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, SelectionStateBox) == 0x000340, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::SelectionStateBox' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, NoBang) == 0x000348, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::NoBang' has a wrong offset!");
static_assert(offsetof(UFloatingInteraction_Indicator_S14_Tracking_C, Bang) == 0x000370, "Member 'UFloatingInteraction_Indicator_S14_Tracking_C::Bang' has a wrong offset!");

}

