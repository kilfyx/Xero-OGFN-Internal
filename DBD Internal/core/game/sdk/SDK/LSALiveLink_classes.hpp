#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LSALiveLink

#include "Basic.hpp"

#include "LiveStreamAnimation_structs.hpp"
#include "LiveStreamAnimation_classes.hpp"
#include "LSALiveLink_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "LiveLinkInterface_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class LSALiveLink.LSALiveLinkDataHandler
// 0x0010 (0x0048 - 0x0038)
class ULSALiveLinkDataHandler final : public ULiveStreamAnimationDataHandler
{
public:
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool StartTrackingLiveLinkSubject(const class FName LiveLinkSubject, const struct FLiveStreamAnimationHandleWrapper& RegisteredName, const struct FLSALiveLinkSourceOptions& Options, const struct FLiveStreamAnimationHandleWrapper& TranslationProfile);
	void StopTrackingLiveLinkSubject(const struct FLiveStreamAnimationHandleWrapper& RegisteredName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LSALiveLinkDataHandler">();
	}
	static class ULSALiveLinkDataHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULSALiveLinkDataHandler>();
	}
};
static_assert(alignof(ULSALiveLinkDataHandler) == 0x000008, "Wrong alignment on ULSALiveLinkDataHandler");
static_assert(sizeof(ULSALiveLinkDataHandler) == 0x000048, "Wrong size on ULSALiveLinkDataHandler");

// Class LSALiveLink.LSALiveLinkFrameTranslator
// 0x0060 (0x0088 - 0x0028)
class ULSALiveLinkFrameTranslator final : public ULiveLinkFrameTranslator
{
public:
	TMap<struct FLiveStreamAnimationHandleWrapper, struct FLSALiveLinkTranslationProfile> TranslationProfiles; // 0x0028(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x10];                                      // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LSALiveLinkFrameTranslator">();
	}
	static class ULSALiveLinkFrameTranslator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULSALiveLinkFrameTranslator>();
	}
};
static_assert(alignof(ULSALiveLinkFrameTranslator) == 0x000008, "Wrong alignment on ULSALiveLinkFrameTranslator");
static_assert(sizeof(ULSALiveLinkFrameTranslator) == 0x000088, "Wrong size on ULSALiveLinkFrameTranslator");
static_assert(offsetof(ULSALiveLinkFrameTranslator, TranslationProfiles) == 0x000028, "Member 'ULSALiveLinkFrameTranslator::TranslationProfiles' has a wrong offset!");

// Class LSALiveLink.LSALiveLinkRole
// 0x0000 (0x0028 - 0x0028)
class ULSALiveLinkRole final : public ULiveLinkBasicRole
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LSALiveLinkRole">();
	}
	static class ULSALiveLinkRole* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULSALiveLinkRole>();
	}
};
static_assert(alignof(ULSALiveLinkRole) == 0x000008, "Wrong alignment on ULSALiveLinkRole");
static_assert(sizeof(ULSALiveLinkRole) == 0x000028, "Wrong size on ULSALiveLinkRole");

// Class LSALiveLink.LSALiveLinkSettings
// 0x0040 (0x0078 - 0x0038)
class ULSALiveLinkSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class ULSALiveLinkFrameTranslator> FrameTranslator;                               // 0x0038(0x0028)(Edit, Transient, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LSALiveLinkSettings">();
	}
	static class ULSALiveLinkSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULSALiveLinkSettings>();
	}
};
static_assert(alignof(ULSALiveLinkSettings) == 0x000008, "Wrong alignment on ULSALiveLinkSettings");
static_assert(sizeof(ULSALiveLinkSettings) == 0x000078, "Wrong size on ULSALiveLinkSettings");
static_assert(offsetof(ULSALiveLinkSettings, FrameTranslator) == 0x000038, "Member 'ULSALiveLinkSettings::FrameTranslator' has a wrong offset!");

// Class LSALiveLink.LiveLinkTestSkelMeshTrackerComponent
// 0x00D0 (0x0180 - 0x00B0)
class ULiveLinkTestSkelMeshTrackerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TranslationProfile;                                // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FComponentReference                    SkelMeshComp;                                      // 0x00C0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class USkeletalMeshComponent>  WeakSkelMeshComp;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FBoneReference>                 BonesToTrack;                                      // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_100[0x80];                                     // 0x0100(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartTrackingSkelMesh(class FName InSubjectName);
	void StopTrackingSkelMesh();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveLinkTestSkelMeshTrackerComponent">();
	}
	static class ULiveLinkTestSkelMeshTrackerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveLinkTestSkelMeshTrackerComponent>();
	}
};
static_assert(alignof(ULiveLinkTestSkelMeshTrackerComponent) == 0x000008, "Wrong alignment on ULiveLinkTestSkelMeshTrackerComponent");
static_assert(sizeof(ULiveLinkTestSkelMeshTrackerComponent) == 0x000180, "Wrong size on ULiveLinkTestSkelMeshTrackerComponent");
static_assert(offsetof(ULiveLinkTestSkelMeshTrackerComponent, TranslationProfile) == 0x0000B8, "Member 'ULiveLinkTestSkelMeshTrackerComponent::TranslationProfile' has a wrong offset!");
static_assert(offsetof(ULiveLinkTestSkelMeshTrackerComponent, SkelMeshComp) == 0x0000C0, "Member 'ULiveLinkTestSkelMeshTrackerComponent::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(ULiveLinkTestSkelMeshTrackerComponent, WeakSkelMeshComp) == 0x0000E8, "Member 'ULiveLinkTestSkelMeshTrackerComponent::WeakSkelMeshComp' has a wrong offset!");
static_assert(offsetof(ULiveLinkTestSkelMeshTrackerComponent, BonesToTrack) == 0x0000F0, "Member 'ULiveLinkTestSkelMeshTrackerComponent::BonesToTrack' has a wrong offset!");

}

