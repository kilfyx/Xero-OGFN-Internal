#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Playspace_PlayspaceComponent

#include "Basic.hpp"

#include "Playspace_PlayerType_structs.hpp"


namespace SDK::Params
{

// Function Playspace_PlayspaceComponent.Context_PlayspaceComponent_WaitForSetupComplete.Update
// 0x0004 (0x0004 - 0x0000)
struct Context_PlayspaceComponent_WaitForSetupComplete_Update final
{
public:
	int32                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_PlayspaceComponent_WaitForSetupComplete_Update) == 0x000004, "Wrong alignment on Context_PlayspaceComponent_WaitForSetupComplete_Update");
static_assert(sizeof(Context_PlayspaceComponent_WaitForSetupComplete_Update) == 0x000004, "Wrong size on Context_PlayspaceComponent_WaitForSetupComplete_Update");
static_assert(offsetof(Context_PlayspaceComponent_WaitForSetupComplete_Update, RetVal) == 0x000000, "Member 'Context_PlayspaceComponent_WaitForSetupComplete_Update::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.Context_PlayspaceComponent_WaitForMatchEnd.Update
// 0x0004 (0x0004 - 0x0000)
struct Context_PlayspaceComponent_WaitForMatchEnd_Update final
{
public:
	int32                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_PlayspaceComponent_WaitForMatchEnd_Update) == 0x000004, "Wrong alignment on Context_PlayspaceComponent_WaitForMatchEnd_Update");
static_assert(sizeof(Context_PlayspaceComponent_WaitForMatchEnd_Update) == 0x000004, "Wrong size on Context_PlayspaceComponent_WaitForMatchEnd_Update");
static_assert(offsetof(Context_PlayspaceComponent_WaitForMatchEnd_Update, RetVal) == 0x000000, "Member 'Context_PlayspaceComponent_WaitForMatchEnd_Update::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.PlayspaceComponent.GetPlayerCount
// 0x0008 (0x0008 - 0x0000)
struct PlayspaceComponent_GetPlayerCount final
{
public:
	EPlayerType                                   __verse_0x0F99A7FE_type;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetVal;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayspaceComponent_GetPlayerCount) == 0x000004, "Wrong alignment on PlayspaceComponent_GetPlayerCount");
static_assert(sizeof(PlayspaceComponent_GetPlayerCount) == 0x000008, "Wrong size on PlayspaceComponent_GetPlayerCount");
static_assert(offsetof(PlayspaceComponent_GetPlayerCount, __verse_0x0F99A7FE_type) == 0x000000, "Member 'PlayspaceComponent_GetPlayerCount::__verse_0x0F99A7FE_type' has a wrong offset!");
static_assert(offsetof(PlayspaceComponent_GetPlayerCount, RetVal) == 0x000004, "Member 'PlayspaceComponent_GetPlayerCount::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.PlayspaceComponent.getPlayers
// 0x0018 (0x0018 - 0x0000)
struct PlayspaceComponent_getPlayers final
{
public:
	EPlayerType                                   __verse_0x0F99A7FE_type;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPlayerComponent*>               RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(PlayspaceComponent_getPlayers) == 0x000008, "Wrong alignment on PlayspaceComponent_getPlayers");
static_assert(sizeof(PlayspaceComponent_getPlayers) == 0x000018, "Wrong size on PlayspaceComponent_getPlayers");
static_assert(offsetof(PlayspaceComponent_getPlayers, __verse_0x0F99A7FE_type) == 0x000000, "Member 'PlayspaceComponent_getPlayers::__verse_0x0F99A7FE_type' has a wrong offset!");
static_assert(offsetof(PlayspaceComponent_getPlayers, RetVal) == 0x000008, "Member 'PlayspaceComponent_getPlayers::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.PlayspaceComponent.setQueueUserForRespawnWhenAdded
// 0x0001 (0x0001 - 0x0000)
struct PlayspaceComponent_setQueueUserForRespawnWhenAdded final
{
public:
	uint8                                         __verse_0xD0767376_spawnWhenAdded : 1;             // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
};
static_assert(alignof(PlayspaceComponent_setQueueUserForRespawnWhenAdded) == 0x000001, "Wrong alignment on PlayspaceComponent_setQueueUserForRespawnWhenAdded");
static_assert(sizeof(PlayspaceComponent_setQueueUserForRespawnWhenAdded) == 0x000001, "Wrong size on PlayspaceComponent_setQueueUserForRespawnWhenAdded");

// Function Playspace_PlayspaceComponent.Context_PlayspaceComponent_WaitForMatchStart.Update
// 0x0004 (0x0004 - 0x0000)
struct Context_PlayspaceComponent_WaitForMatchStart_Update final
{
public:
	int32                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_PlayspaceComponent_WaitForMatchStart_Update) == 0x000004, "Wrong alignment on Context_PlayspaceComponent_WaitForMatchStart_Update");
static_assert(sizeof(Context_PlayspaceComponent_WaitForMatchStart_Update) == 0x000004, "Wrong size on Context_PlayspaceComponent_WaitForMatchStart_Update");
static_assert(offsetof(Context_PlayspaceComponent_WaitForMatchStart_Update, RetVal) == 0x000000, "Member 'Context_PlayspaceComponent_WaitForMatchStart_Update::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.Context_PlayspaceComponent_WaitForPlayerAdded.Update
// 0x0004 (0x0004 - 0x0000)
struct Context_PlayspaceComponent_WaitForPlayerAdded_Update final
{
public:
	int32                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_PlayspaceComponent_WaitForPlayerAdded_Update) == 0x000004, "Wrong alignment on Context_PlayspaceComponent_WaitForPlayerAdded_Update");
static_assert(sizeof(Context_PlayspaceComponent_WaitForPlayerAdded_Update) == 0x000004, "Wrong size on Context_PlayspaceComponent_WaitForPlayerAdded_Update");
static_assert(offsetof(Context_PlayspaceComponent_WaitForPlayerAdded_Update, RetVal) == 0x000000, "Member 'Context_PlayspaceComponent_WaitForPlayerAdded_Update::RetVal' has a wrong offset!");

// Function Playspace_PlayspaceComponent.Context_PlayspaceComponent_WaitForPlayerRemoved.Update
// 0x0004 (0x0004 - 0x0000)
struct Context_PlayspaceComponent_WaitForPlayerRemoved_Update final
{
public:
	int32                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_PlayspaceComponent_WaitForPlayerRemoved_Update) == 0x000004, "Wrong alignment on Context_PlayspaceComponent_WaitForPlayerRemoved_Update");
static_assert(sizeof(Context_PlayspaceComponent_WaitForPlayerRemoved_Update) == 0x000004, "Wrong size on Context_PlayspaceComponent_WaitForPlayerRemoved_Update");
static_assert(offsetof(Context_PlayspaceComponent_WaitForPlayerRemoved_Update, RetVal) == 0x000000, "Member 'Context_PlayspaceComponent_WaitForPlayerRemoved_Update::RetVal' has a wrong offset!");

}

