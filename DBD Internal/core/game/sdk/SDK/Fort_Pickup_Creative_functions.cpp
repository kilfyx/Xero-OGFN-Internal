#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Fort_Pickup_Creative

#include "Basic.hpp"

#include "Fort_Pickup_Creative_classes.hpp"
#include "Fort_Pickup_Creative_parameters.hpp"


namespace SDK
{

// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.ApplySubscriptionToPlayerChangesTeamOrClass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Subscribe                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFort_Pickup_Creative_C::ApplySubscriptionToPlayerChangesTeamOrClass(bool Subscribe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "ApplySubscriptionToPlayerChangesTeamOrClass");

	Params::Fort_Pickup_Creative_C_ApplySubscriptionToPlayerChangesTeamOrClass Parms{};

	Parms.Subscribe = Subscribe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.BndEvt__PickupSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AFort_Pickup_Creative_C::BndEvt__PickupSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "BndEvt__PickupSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Fort_Pickup_Creative_C_BndEvt__PickupSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.ExecuteUbergraph_Fort_Pickup_Creative
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFort_Pickup_Creative_C::ExecuteUbergraph_Fort_Pickup_Creative(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "ExecuteUbergraph_Fort_Pickup_Creative");

	Params::Fort_Pickup_Creative_C_ExecuteUbergraph_Fort_Pickup_Creative Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.OnRep_AffectsClass
// (BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::OnRep_AffectsClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "OnRep_AffectsClass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.OnRep_AffectsTeam
// (BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::OnRep_AffectsTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "OnRep_AffectsTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.OnRep_Allowed Class
// (BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::OnRep_Allowed_Class()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "OnRep_Allowed Class");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.OnRep_Allowed Team
// (BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::OnRep_Allowed_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "OnRep_Allowed Team");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.OnRep_ItemsVisibleToAllowedOnly
// (BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::OnRep_ItemsVisibleToAllowedOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "OnRep_ItemsVisibleToAllowedOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AFort_Pickup_Creative_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.Set Pickup Settings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewAllowedTeam                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewAllowedClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewAffectsTeam                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewAffectsClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewItemsVisibleToAllowedOnly                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFort_Pickup_Creative_C::Set_Pickup_Settings(int32 NewAllowedTeam, int32 NewAllowedClass, int32 NewAffectsTeam, int32 NewAffectsClass, int32 NewItemsVisibleToAllowedOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "Set Pickup Settings");

	Params::Fort_Pickup_Creative_C_Set_Pickup_Settings Parms{};

	Parms.NewAllowedTeam = NewAllowedTeam;
	Parms.NewAllowedClass = NewAllowedClass;
	Parms.NewAffectsTeam = NewAffectsTeam;
	Parms.NewAffectsClass = NewAffectsClass;
	Parms.NewItemsVisibleToAllowedOnly = NewItemsVisibleToAllowedOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.UpdateAllowedClassSettings
// (Public, BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::UpdateAllowedClassSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "UpdateAllowedClassSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.UpdateAllowedTeamSettings
// (Public, BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::UpdateAllowedTeamSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "UpdateAllowedTeamSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.UpdateVisibilityAndCollision
// (Public, BlueprintCallable, BlueprintEvent)

void AFort_Pickup_Creative_C::UpdateVisibilityAndCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "UpdateVisibilityAndCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.BlueprintClassAllowed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class AFortPawn*                  Pawn                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AFort_Pickup_Creative_C::BlueprintClassAllowed(const class AFortPawn* Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "BlueprintClassAllowed");

	Params::Fort_Pickup_Creative_C_BlueprintClassAllowed Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Fort_Pickup_Creative.Fort_Pickup_Creative_C.BlueprintTeamAllowed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class AFortPawn*                  Pawn                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AFort_Pickup_Creative_C::BlueprintTeamAllowed(const class AFortPawn* Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Fort_Pickup_Creative_C", "BlueprintTeamAllowed");

	Params::Fort_Pickup_Creative_C_BlueprintTeamAllowed Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

