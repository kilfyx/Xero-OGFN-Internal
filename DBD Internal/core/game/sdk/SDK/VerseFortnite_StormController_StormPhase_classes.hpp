#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite_StormController_StormPhase

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// SolarisGeneratedClass VerseFortnite_StormController_StormPhase.StormPhase
// 0x0030 (0x0058 - 0x0028)
class UStormPhase final : public UObject
{
public:
	float                                         __verse_0x4CDBEC4D_waitTime;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0xDFEF9A4E_shrinkTime;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x96A9475A_endRadius;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x61AAA523_endRadiusPercentage;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x7781DBF3_damageIndex;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x3902DD0B_moves : 1;                      // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor))
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         __verse_0xA376E20D_minMovementDistance;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x2C327F1D_maxMovementDistance;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0xDA5EE7C4_minMovementDistancePercentage;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x7B63CDBA_maxMovementDistancePercentage;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector4_V*                             __verse_0xD6F5A7B7_endLocation;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StormPhase">();
	}
	static class UStormPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStormPhase>();
	}
};
static_assert(alignof(UStormPhase) == 0x000008, "Wrong alignment on UStormPhase");
static_assert(sizeof(UStormPhase) == 0x000058, "Wrong size on UStormPhase");
static_assert(offsetof(UStormPhase, __verse_0x4CDBEC4D_waitTime) == 0x000028, "Member 'UStormPhase::__verse_0x4CDBEC4D_waitTime' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0xDFEF9A4E_shrinkTime) == 0x00002C, "Member 'UStormPhase::__verse_0xDFEF9A4E_shrinkTime' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0x96A9475A_endRadius) == 0x000030, "Member 'UStormPhase::__verse_0x96A9475A_endRadius' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0x61AAA523_endRadiusPercentage) == 0x000034, "Member 'UStormPhase::__verse_0x61AAA523_endRadiusPercentage' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0x7781DBF3_damageIndex) == 0x000038, "Member 'UStormPhase::__verse_0x7781DBF3_damageIndex' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0xA376E20D_minMovementDistance) == 0x000040, "Member 'UStormPhase::__verse_0xA376E20D_minMovementDistance' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0x2C327F1D_maxMovementDistance) == 0x000044, "Member 'UStormPhase::__verse_0x2C327F1D_maxMovementDistance' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0xDA5EE7C4_minMovementDistancePercentage) == 0x000048, "Member 'UStormPhase::__verse_0xDA5EE7C4_minMovementDistancePercentage' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0x7B63CDBA_maxMovementDistancePercentage) == 0x00004C, "Member 'UStormPhase::__verse_0x7B63CDBA_maxMovementDistancePercentage' has a wrong offset!");
static_assert(offsetof(UStormPhase, __verse_0xD6F5A7B7_endLocation) == 0x000050, "Member 'UStormPhase::__verse_0xD6F5A7B7_endLocation' has a wrong offset!");

}

