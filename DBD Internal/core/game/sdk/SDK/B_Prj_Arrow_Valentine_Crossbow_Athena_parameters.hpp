#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Arrow_Valentine_Crossbow_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_Arrow_Valentine_Crossbow_Athena.B_Prj_Arrow_Valentine_Crossbow_Athena_C.ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena
// 0x0180 (0x0180 - 0x0000)
struct B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation; // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastWaterSurfaceInfo_WaterDepth;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterVelocity;    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0050(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsOverlap;                           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena) == 0x000008, "Wrong alignment on B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena");
static_assert(sizeof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena) == 0x000180, "Wrong size on B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, EntryPoint) == 0x000000, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation) == 0x000008, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal) == 0x000014, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition) == 0x000020, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterDepth) == 0x00002C, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterDepth' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx) == 0x000030, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_GetLastWaterSurfaceInfo_WaterVelocity) == 0x000034, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_GetLastWaterSurfaceInfo_WaterVelocity' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, K2Node_Event_OtherActor) == 0x000040, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, K2Node_Event_OtherComp) == 0x000048, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, K2Node_Event_HitResult) == 0x000050, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, K2Node_Event_bIsOverlap) == 0x0000DC, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::K2Node_Event_bIsOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E0, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E4, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E5, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_Time) == 0x0000E8, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_Distance) == 0x0000EC, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_Location) == 0x0000F0, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_ImpactPoint) == 0x0000FC, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_Normal) == 0x000108, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_ImpactNormal) == 0x000114, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_ElementIndex) == 0x000144, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_FaceIndex) == 0x000148, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_TraceStart) == 0x00014C, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_BreakHitResult_TraceEnd) == 0x000158, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000164, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000170, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000178, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_ExecuteUbergraph_B_Prj_Arrow_Valentine_Crossbow_Athena::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_Prj_Arrow_Valentine_Crossbow_Athena.B_Prj_Arrow_Valentine_Crossbow_Athena_C.OnTouched
// 0x00A0 (0x00A0 - 0x0000)
struct B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult_0;                                       // 0x0010(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bIsOverlap;                                        // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched) == 0x000008, "Wrong alignment on B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched");
static_assert(sizeof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched) == 0x0000A0, "Wrong size on B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched, OtherActor) == 0x000000, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched::OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched, OtherComp) == 0x000008, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched, HitResult_0) == 0x000010, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched::HitResult_0' has a wrong offset!");
static_assert(offsetof(B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched, bIsOverlap) == 0x00009C, "Member 'B_Prj_Arrow_Valentine_Crossbow_Athena_C_OnTouched::bIsOverlap' has a wrong offset!");

}

