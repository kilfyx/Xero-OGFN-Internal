#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VideoMeshTrigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "MeshNetwork_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VideoMeshTrigger.BP_VideoMeshTrigger_C
// 0x04A0 (0x06C0 - 0x0220)
class ABP_VideoMeshTrigger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMeshNetworkComponent*                  MeshNetwork;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              PlayUTCTime;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         PlayServerTimeSeconds;                             // 0x0240(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         VideoPlayStartTime;                                // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(float PlayStartTime, const class FString& VideoUID, const class FString& ScreenName, bool LIVE, const class FString& RegionData)> onReadyToPlay; // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& VideoScreen, bool LeaveScreen, const class FString& RegionData)> onStopPlayback; // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDateTime                              StopUTCTime;                                       // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MinutesBetweenPlays;                               // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MinBetweenPlays;                                   // 0x0278(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDateTime                              StartWarmingUTCTime;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         StartWarmingServerTimeSeconds;                     // 0x02A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float StartWarmingTime, const class FString& ScreenName, bool SimpleWarming, const class FString& RegionData)> onStartWarming; // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         VideoWarmingStartTime;                             // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopVideo;                                         // 0x02C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& ScreenName, const class FString& RegionData)> onEnableLoopVideo; // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& ScreenName, const class FString& RegionData)> onDisableLoopVideo; // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 VideoUID;                                          // 0x02E8(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ScreenName;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              RootUtcTime;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& VideoScreen, bool SimpleWarming, const class FString& RegionData)> onStopWarming; // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         MaxBandwidth;                                      // 0x0320(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& ScreenName, int32 MaxBW, const class FString& RegionData)> onSetBandwidthLimit; // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& ScreenName, float SeekTime, bool Exact, const class FString& RegionData)> onSeekPlayback; // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& ScreenName, bool Enable, const class FString& RegionData)> onSetMirrorScreen; // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& ScreenName, const class FString& VideoUID, bool Enable, bool LIVE, const class FString& RegionData)> OnStartPiP; // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          LeaveScreen;                                       // 0x0368(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Screen, int64 Counter, const class FString& RegionData)> onForcePiP; // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDateTime                              PiPPlayUTCTIme;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         PiPPlayerServerTimeSeconds;                        // 0x0388(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PiPVideoUID;                                       // 0x0390(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          PiPEnable;                                         // 0x03A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PiPMirrorEnable;                                   // 0x03A1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         PiPForceCounter;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayWithPiP;                                       // 0x03B0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CDNWeights;                                        // 0x03B8(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& Weights, const class FString& RegionData)> onCDNWeights; // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          PIPCDNDistroSet;                                   // 0x03D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLive;                                            // 0x03D9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPIPLive;                                         // 0x03DA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB[0x1];                                      // 0x03DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PIPVersion;                                        // 0x03DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PIPVersionOff;                                     // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SimpleWarming;                                     // 0x03E4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WarmingCDNWeights;                                 // 0x03E8(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         ScreenDistance;                                    // 0x03F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Distance, const class FString& RegionData)> OnScreenPrio;    // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FMeshRegionLockData_Float>      Region_VideoPlayStartTime;                         // 0x0410(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_DateTime>   Region_RootUtcTime;                                // 0x0420(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FMeshRegionLockData_DateTime           Region_PlayUTCTime;                                // 0x0430(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FMeshRegionLockData_Float              Region_PlayServerTimeSeconds;                      // 0x0450(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FMeshRegionLockData_DateTime           Region_StartWarmingUTCTime;                        // 0x0470(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_Bool>       Region_LeaveScreen;                                // 0x0490(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_IsLive;                                     // 0x04A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_String>     Region_VideoUID;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Int>        Region_ScreenDistance;                             // 0x04C0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_String>     Region_WarmingCDNWeights;                          // 0x04D0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_SimpleWarming;                              // 0x04E0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FMeshRegionLockData_Float              Region_StartWarmingServerTimeSeconds;              // 0x04F0(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_Float>      Region_VideoWarmingStartTime;                      // 0x0510(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FMeshRegionLockData_Bool               Region_LoopVideo;                                  // 0x0520(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FMeshRegionLockData_Int                Region_MaxBandwidth;                               // 0x0540(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_Bool>       Region_PlaywithPiP;                                // 0x0560(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Float>      Region_SeekTime;                                   // 0x0570(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Int>        Region_PIPVersion;                                 // 0x0580(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_PiPMirrorEnable;                            // 0x0590(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_PiPEnable;                                  // 0x05A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_IsPIPLive;                                  // 0x05B0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FMeshRegionLockData_DateTime           Region_PiPPlayUTCTime;                             // 0x05C0(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_Int64>      Region_PiPForceCounter;                            // 0x05E0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_PIPCDNDistroSet;                            // 0x05F0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_String>     Region_CDNWeights;                                 // 0x0600(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FMeshRegionLockData_Float              Region_PiPPlayerServerTimeSeconds;                 // 0x0610(0x0020)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FMeshRegionLockData_String>     Region_PiPVideoUID;                                // 0x0630(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_DateTime>   Region_PlayUTCTime_GS;                             // 0x0640(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_DateTime>   Region_WarmingStartUTCTime_GS;                     // 0x0650(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Float>      Region_PlayServerTimeSeconds_GS;                   // 0x0660(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Float>      Region_StartWarmingServerTimeSeconds_GS;           // 0x0670(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Bool>       Region_LoopVideo_GS;                               // 0x0680(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Int>        Region_MaxBandwidth_GS;                            // 0x0690(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_DateTime>   Region_PiPPlayUTCTime_GS;                          // 0x06A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FMeshRegionLockData_Float>      Region_PiPPlayerServerTimeSeconds_GS;              // 0x06B0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)

public:
	void RootStopVideo(const class FString& ScreenName_0, bool LeaveScreen_0, const class FString& RegionData);
	void RootStartWarming(const class FString& ScreenName_0, bool Enable, bool Simple, const class FString& CDNWeights_0, const class FString& RegionData);
	void RootStartPiP(const class FString& ScreenName_0, const class FString& VideoUID_0, bool Enable, bool LIVE, const class FString& RegionData);
	void RootSetScreenPrio(const class FString& ScreenName_0, int32 Distance, const class FString& RegionData);
	void RootSetScreenMirror(const class FString& ScreenName_0, bool Enable, const class FString& RegionData);
	void RootSetMaxBW(const class FString& ScreenName_0, int32 MaxBW, const class FString& RegionData);
	void RootSetCDNWeights(const class FString& ScreenName_0, const class FString& Weights, bool PIPToo, bool Clear, const class FString& RegionData);
	void RootSeekVideo(const class FString& ScreenName_0, float Time, bool Exact, const class FString& RegionData);
	void RootPlayVideo(const class FString& ScreenName_0, const class FString& VideoUID_0, int32 PIP, bool LIVE, int32 Distance, const class FString& RegionData);
	void RootForcePiP(const class FString& ScreenName_0, int64 Counter, const class FString& RegionData);
	void RootEnableLoopVideo(const class FString& ScreenName_0, const class FString& RegionData);
	void RootDisableLoopVideo(const class FString& ScreenName_0, const class FString& RegionData);
	void RootClearAllData(const class FString& ScreeName);
	void ReceiveBeginPlay();
	void PrintIncomingData(const class FString& ScreenName_0, const class FString& VideoUID_0, const class FString& Command);
	void PIPAlso_Version(int32 Version, bool LIVE, const class FString& VUID, bool Enable, const class FString& RegionData);
	void OnRep_StartWarmingUTCTime();
	void OnRep_StartWarmingServerTimeSeconds();
	void OnRep_ScreenName();
	void OnRep_ScreenDistance();
	void OnRep_Region_StartWarmingUTCTime();
	void OnRep_Region_StartWarmingServerTimeSeconds();
	void OnRep_Region_ScreenDistance();
	void OnRep_Region_PlayUTCTime();
	void OnRep_Region_PlayServerTimeSeconds();
	void OnRep_Region_PiPPlayUTCTime();
	void OnRep_Region_PiPPlayerServerTimeSeconds();
	void OnRep_Region_MaxBandwidth();
	void OnRep_Region_LoopVideo();
	void OnRep_PlayUTCTime();
	void OnRep_PlayServerTimeSeconds();
	void OnRep_PiPPlayUTCTIme();
	void OnRep_PiPPlayerServerTimeSeconds();
	void OnRep_MaxBandwidth();
	void OnRep_LoopVideo();
	void ExecuteUbergraph_BP_VideoMeshTrigger(int32 EntryPoint);
	void CheckScreen(const class FString& ScreenName_0, bool* ThisScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VideoMeshTrigger_C">();
	}
	static class ABP_VideoMeshTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VideoMeshTrigger_C>();
	}
};

}

