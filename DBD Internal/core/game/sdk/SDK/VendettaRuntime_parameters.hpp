#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VendettaRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "VendettaRuntime_structs.hpp"


namespace SDK::Params
{

// Function VendettaRuntime.FortChargingSet_Vendetta_MarkTarget.OnRep_CurrentCharge
// 0x0028 (0x0028 - 0x0000)
struct FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge final
{
public:
	struct FFortGameplayAttributeData             OldValue;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge) == 0x000008, "Wrong alignment on FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge");
static_assert(sizeof(FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge) == 0x000028, "Wrong size on FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge");
static_assert(offsetof(FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge, OldValue) == 0x000000, "Member 'FortChargingSet_Vendetta_MarkTarget_OnRep_CurrentCharge::OldValue' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSetPlacementEffectVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility) == 0x000001, "Wrong alignment on FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility) == 0x000001, "Wrong size on FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility, bVisible) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSetPlacementEffectVisibility::bVisible' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSetPuckValueVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSetPuckValueVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSetPuckValueVisibility) == 0x000001, "Wrong alignment on FortCheatManager_Vendetta_VendettaSetPuckValueVisibility");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSetPuckValueVisibility) == 0x000001, "Wrong size on FortCheatManager_Vendetta_VendettaSetPuckValueVisibility");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSetPuckValueVisibility, bVisible) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSetPuckValueVisibility::bVisible' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSpawnCloserAI
// 0x0004 (0x0004 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSpawnCloserAI final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSpawnCloserAI) == 0x000004, "Wrong alignment on FortCheatManager_Vendetta_VendettaSpawnCloserAI");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSpawnCloserAI) == 0x000004, "Wrong size on FortCheatManager_Vendetta_VendettaSpawnCloserAI");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSpawnCloserAI, Distance) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSpawnCloserAI::Distance' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSpawnMasterAI
// 0x0004 (0x0004 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSpawnMasterAI final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSpawnMasterAI) == 0x000004, "Wrong alignment on FortCheatManager_Vendetta_VendettaSpawnMasterAI");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSpawnMasterAI) == 0x000004, "Wrong size on FortCheatManager_Vendetta_VendettaSpawnMasterAI");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSpawnMasterAI, Distance) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSpawnMasterAI::Distance' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSpawnSniperAI
// 0x0004 (0x0004 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSpawnSniperAI final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSpawnSniperAI) == 0x000004, "Wrong alignment on FortCheatManager_Vendetta_VendettaSpawnSniperAI");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSpawnSniperAI) == 0x000004, "Wrong size on FortCheatManager_Vendetta_VendettaSpawnSniperAI");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSpawnSniperAI, Distance) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSpawnSniperAI::Distance' has a wrong offset!");

// Function VendettaRuntime.FortCheatManager_Vendetta.VendettaSpawnTankAI
// 0x0004 (0x0004 - 0x0000)
struct FortCheatManager_Vendetta_VendettaSpawnTankAI final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatManager_Vendetta_VendettaSpawnTankAI) == 0x000004, "Wrong alignment on FortCheatManager_Vendetta_VendettaSpawnTankAI");
static_assert(sizeof(FortCheatManager_Vendetta_VendettaSpawnTankAI) == 0x000004, "Wrong size on FortCheatManager_Vendetta_VendettaSpawnTankAI");
static_assert(offsetof(FortCheatManager_Vendetta_VendettaSpawnTankAI, Distance) == 0x000000, "Member 'FortCheatManager_Vendetta_VendettaSpawnTankAI::Distance' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.MulticastOnHuntersSpawned
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned final
{
public:
	class FName                                   SpawnGroup;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned) == 0x000004, "Wrong alignment on FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned");
static_assert(sizeof(FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned) == 0x000008, "Wrong size on FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned");
static_assert(offsetof(FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned, SpawnGroup) == 0x000000, "Member 'FortAthenaMutator_Vendetta_MulticastOnHuntersSpawned::SpawnGroup' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.MulticastOnMasterHunterDied
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied final
{
public:
	class AFortPlayerStateAthena*                 MasterHuntersKiller;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied) == 0x000008, "Wrong alignment on FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied");
static_assert(sizeof(FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied) == 0x000008, "Wrong size on FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied");
static_assert(offsetof(FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied, MasterHuntersKiller) == 0x000000, "Member 'FortAthenaMutator_Vendetta_MulticastOnMasterHunterDied::MasterHuntersKiller' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.RegisterBountyPuckWeaponComponent
// 0x0018 (0x0018 - 0x0000)
struct FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent final
{
public:
	struct FGuid                                  TrackerGuid;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBountyPuckWeaponComponent*             BountyPuckWeaponComponent;                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent) == 0x000008, "Wrong alignment on FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent");
static_assert(sizeof(FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent) == 0x000018, "Wrong size on FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent");
static_assert(offsetof(FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent, TrackerGuid) == 0x000000, "Member 'FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent::TrackerGuid' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent, BountyPuckWeaponComponent) == 0x000010, "Member 'FortAthenaMutator_Vendetta_RegisterBountyPuckWeaponComponent::BountyPuckWeaponComponent' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.ShowUIMessageToAllClients
// 0x0018 (0x0018 - 0x0000)
struct FortAthenaMutator_Vendetta_ShowUIMessageToAllClients final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_ShowUIMessageToAllClients) == 0x000008, "Wrong alignment on FortAthenaMutator_Vendetta_ShowUIMessageToAllClients");
static_assert(sizeof(FortAthenaMutator_Vendetta_ShowUIMessageToAllClients) == 0x000018, "Wrong size on FortAthenaMutator_Vendetta_ShowUIMessageToAllClients");
static_assert(offsetof(FortAthenaMutator_Vendetta_ShowUIMessageToAllClients, MessageText) == 0x000000, "Member 'FortAthenaMutator_Vendetta_ShowUIMessageToAllClients::MessageText' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.UnregisterBountyPuckWeaponComponent
// 0x0018 (0x0018 - 0x0000)
struct FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent final
{
public:
	struct FGuid                                  TrackerGuid;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBountyPuckWeaponComponent*             BountyPuckWeaponComponent;                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent) == 0x000008, "Wrong alignment on FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent");
static_assert(sizeof(FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent) == 0x000018, "Wrong size on FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent");
static_assert(offsetof(FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent, TrackerGuid) == 0x000000, "Member 'FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent::TrackerGuid' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent, BountyPuckWeaponComponent) == 0x000010, "Member 'FortAthenaMutator_Vendetta_UnregisterBountyPuckWeaponComponent::BountyPuckWeaponComponent' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.GetBountyPuckRarityForGuid
// 0x0014 (0x0014 - 0x0000)
struct FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid final
{
public:
	struct FGuid                                  BountyPuckTrackerGuid;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortRarity                                   ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid) == 0x000004, "Wrong alignment on FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid");
static_assert(sizeof(FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid) == 0x000014, "Wrong size on FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid");
static_assert(offsetof(FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid, BountyPuckTrackerGuid) == 0x000000, "Member 'FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid::BountyPuckTrackerGuid' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid, ReturnValue) == 0x000010, "Member 'FortAthenaMutator_Vendetta_GetBountyPuckRarityForGuid::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.GetBountyPuckTargetDataCopyForGuid
// 0x0050 (0x0050 - 0x0000)
struct FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid final
{
public:
	struct FGuid                                  BountyPuckTrackerGuid;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVendettaBountyPuckTargetData          ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid) == 0x000008, "Wrong alignment on FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid");
static_assert(sizeof(FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid) == 0x000050, "Wrong size on FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid");
static_assert(offsetof(FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid, BountyPuckTrackerGuid) == 0x000000, "Member 'FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid::BountyPuckTrackerGuid' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid, ReturnValue) == 0x000010, "Member 'FortAthenaMutator_Vendetta_GetBountyPuckTargetDataCopyForGuid::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.FortAthenaMutator_Vendetta.HasMasterHunterSpawned
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMutator_Vendetta_HasMasterHunterSpawned final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Vendetta_HasMasterHunterSpawned) == 0x000001, "Wrong alignment on FortAthenaMutator_Vendetta_HasMasterHunterSpawned");
static_assert(sizeof(FortAthenaMutator_Vendetta_HasMasterHunterSpawned) == 0x000001, "Wrong size on FortAthenaMutator_Vendetta_HasMasterHunterSpawned");
static_assert(offsetof(FortAthenaMutator_Vendetta_HasMasterHunterSpawned, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Vendetta_HasMasterHunterSpawned::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.ClientOnBountyPuckReceivedByAlly
// 0x0018 (0x0018 - 0x0000)
struct VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly final
{
public:
	const class AFortPlayerStateAthena*           BountyPuckTargetPlayerState;                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AFortPlayerStateAthena*           ReceiverPlayerState;                               // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BonusRewardValue;                                  // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly) == 0x000008, "Wrong alignment on VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly");
static_assert(sizeof(VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly) == 0x000018, "Wrong size on VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly, BountyPuckTargetPlayerState) == 0x000000, "Member 'VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly::BountyPuckTargetPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly, ReceiverPlayerState) == 0x000008, "Member 'VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly::ReceiverPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly, BonusRewardValue) == 0x000010, "Member 'VendettaPlayerComponent_ClientOnBountyPuckReceivedByAlly::BonusRewardValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.ClientOnBountyPuckTargetDied
// 0x0020 (0x0020 - 0x0000)
struct VendettaPlayerComponent_ClientOnBountyPuckTargetDied final
{
public:
	const class AFortPlayerStateAthena*           VictimPlayerState;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AFortPlayerStateAthena*           KillerPlayerState;                                 // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AFortPlayerStateAthena*           NewTargetPlayerState;                              // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VictimRewardValue;                                 // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VictimBonusValue;                                  // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied) == 0x000008, "Wrong alignment on VendettaPlayerComponent_ClientOnBountyPuckTargetDied");
static_assert(sizeof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied) == 0x000020, "Wrong size on VendettaPlayerComponent_ClientOnBountyPuckTargetDied");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied, VictimPlayerState) == 0x000000, "Member 'VendettaPlayerComponent_ClientOnBountyPuckTargetDied::VictimPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied, KillerPlayerState) == 0x000008, "Member 'VendettaPlayerComponent_ClientOnBountyPuckTargetDied::KillerPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied, NewTargetPlayerState) == 0x000010, "Member 'VendettaPlayerComponent_ClientOnBountyPuckTargetDied::NewTargetPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied, VictimRewardValue) == 0x000018, "Member 'VendettaPlayerComponent_ClientOnBountyPuckTargetDied::VictimRewardValue' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnBountyPuckTargetDied, VictimBonusValue) == 0x00001C, "Member 'VendettaPlayerComponent_ClientOnBountyPuckTargetDied::VictimBonusValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.ClientOnKilledNonTarget
// 0x0010 (0x0010 - 0x0000)
struct VendettaPlayerComponent_ClientOnKilledNonTarget final
{
public:
	const class AFortPlayerStateAthena*           VictimPlayerState;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VictimRewardValue;                                 // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VendettaPlayerComponent_ClientOnKilledNonTarget) == 0x000008, "Wrong alignment on VendettaPlayerComponent_ClientOnKilledNonTarget");
static_assert(sizeof(VendettaPlayerComponent_ClientOnKilledNonTarget) == 0x000010, "Wrong size on VendettaPlayerComponent_ClientOnKilledNonTarget");
static_assert(offsetof(VendettaPlayerComponent_ClientOnKilledNonTarget, VictimPlayerState) == 0x000000, "Member 'VendettaPlayerComponent_ClientOnKilledNonTarget::VictimPlayerState' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_ClientOnKilledNonTarget, VictimRewardValue) == 0x000008, "Member 'VendettaPlayerComponent_ClientOnKilledNonTarget::VictimRewardValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.ClientPlayDeathMusic
// 0x0008 (0x0008 - 0x0000)
struct VendettaPlayerComponent_ClientPlayDeathMusic final
{
public:
	class USoundBase*                             DeathMusic;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_ClientPlayDeathMusic) == 0x000008, "Wrong alignment on VendettaPlayerComponent_ClientPlayDeathMusic");
static_assert(sizeof(VendettaPlayerComponent_ClientPlayDeathMusic) == 0x000008, "Wrong size on VendettaPlayerComponent_ClientPlayDeathMusic");
static_assert(offsetof(VendettaPlayerComponent_ClientPlayDeathMusic, DeathMusic) == 0x000000, "Member 'VendettaPlayerComponent_ClientPlayDeathMusic::DeathMusic' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.HandleBountyPuckRarityChanged
// 0x0014 (0x0014 - 0x0000)
struct VendettaPlayerComponent_HandleBountyPuckRarityChanged final
{
public:
	struct FGuid                                  TrackerGuid;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortRarity                                   NewRarity;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VendettaPlayerComponent_HandleBountyPuckRarityChanged) == 0x000004, "Wrong alignment on VendettaPlayerComponent_HandleBountyPuckRarityChanged");
static_assert(sizeof(VendettaPlayerComponent_HandleBountyPuckRarityChanged) == 0x000014, "Wrong size on VendettaPlayerComponent_HandleBountyPuckRarityChanged");
static_assert(offsetof(VendettaPlayerComponent_HandleBountyPuckRarityChanged, TrackerGuid) == 0x000000, "Member 'VendettaPlayerComponent_HandleBountyPuckRarityChanged::TrackerGuid' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_HandleBountyPuckRarityChanged, NewRarity) == 0x000010, "Member 'VendettaPlayerComponent_HandleBountyPuckRarityChanged::NewRarity' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.HandleClientLandedFromBus
// 0x0008 (0x0008 - 0x0000)
struct VendettaPlayerComponent_HandleClientLandedFromBus final
{
public:
	class AFortPlayerControllerZone*              PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_HandleClientLandedFromBus) == 0x000008, "Wrong alignment on VendettaPlayerComponent_HandleClientLandedFromBus");
static_assert(sizeof(VendettaPlayerComponent_HandleClientLandedFromBus) == 0x000008, "Wrong size on VendettaPlayerComponent_HandleClientLandedFromBus");
static_assert(offsetof(VendettaPlayerComponent_HandleClientLandedFromBus, PlayerController) == 0x000000, "Member 'VendettaPlayerComponent_HandleClientLandedFromBus::PlayerController' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.HandleClientStartedRespawn
// 0x0008 (0x0008 - 0x0000)
struct VendettaPlayerComponent_HandleClientStartedRespawn final
{
public:
	class AFortPlayerControllerZone*              PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_HandleClientStartedRespawn) == 0x000008, "Wrong alignment on VendettaPlayerComponent_HandleClientStartedRespawn");
static_assert(sizeof(VendettaPlayerComponent_HandleClientStartedRespawn) == 0x000008, "Wrong size on VendettaPlayerComponent_HandleClientStartedRespawn");
static_assert(offsetof(VendettaPlayerComponent_HandleClientStartedRespawn, PlayerController) == 0x000000, "Member 'VendettaPlayerComponent_HandleClientStartedRespawn::PlayerController' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.HandleCreditsPickedUp
// 0x0010 (0x0010 - 0x0000)
struct VendettaPlayerComponent_HandleCreditsPickedUp final
{
public:
	class AFortPlayerStateAthena*                 Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VendettaPlayerComponent_HandleCreditsPickedUp) == 0x000008, "Wrong alignment on VendettaPlayerComponent_HandleCreditsPickedUp");
static_assert(sizeof(VendettaPlayerComponent_HandleCreditsPickedUp) == 0x000010, "Wrong size on VendettaPlayerComponent_HandleCreditsPickedUp");
static_assert(offsetof(VendettaPlayerComponent_HandleCreditsPickedUp, Player) == 0x000000, "Member 'VendettaPlayerComponent_HandleCreditsPickedUp::Player' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_HandleCreditsPickedUp, Amount) == 0x000008, "Member 'VendettaPlayerComponent_HandleCreditsPickedUp::Amount' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.SetActiveBountyPuckGuid
// 0x0014 (0x0014 - 0x0000)
struct VendettaPlayerComponent_SetActiveBountyPuckGuid final
{
public:
	struct FGuid                                  InBountyPuckGuid;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreviousBountyWasCompleted;                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VendettaPlayerComponent_SetActiveBountyPuckGuid) == 0x000004, "Wrong alignment on VendettaPlayerComponent_SetActiveBountyPuckGuid");
static_assert(sizeof(VendettaPlayerComponent_SetActiveBountyPuckGuid) == 0x000014, "Wrong size on VendettaPlayerComponent_SetActiveBountyPuckGuid");
static_assert(offsetof(VendettaPlayerComponent_SetActiveBountyPuckGuid, InBountyPuckGuid) == 0x000000, "Member 'VendettaPlayerComponent_SetActiveBountyPuckGuid::InBountyPuckGuid' has a wrong offset!");
static_assert(offsetof(VendettaPlayerComponent_SetActiveBountyPuckGuid, bPreviousBountyWasCompleted) == 0x000010, "Member 'VendettaPlayerComponent_SetActiveBountyPuckGuid::bPreviousBountyWasCompleted' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.GetActiveBountyPuckGuid
// 0x0010 (0x0010 - 0x0000)
struct VendettaPlayerComponent_GetActiveBountyPuckGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_GetActiveBountyPuckGuid) == 0x000004, "Wrong alignment on VendettaPlayerComponent_GetActiveBountyPuckGuid");
static_assert(sizeof(VendettaPlayerComponent_GetActiveBountyPuckGuid) == 0x000010, "Wrong size on VendettaPlayerComponent_GetActiveBountyPuckGuid");
static_assert(offsetof(VendettaPlayerComponent_GetActiveBountyPuckGuid, ReturnValue) == 0x000000, "Member 'VendettaPlayerComponent_GetActiveBountyPuckGuid::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.GetActiveBountyPuckTarget
// 0x0008 (0x0008 - 0x0000)
struct VendettaPlayerComponent_GetActiveBountyPuckTarget final
{
public:
	class AFortPlayerStateAthena*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_GetActiveBountyPuckTarget) == 0x000008, "Wrong alignment on VendettaPlayerComponent_GetActiveBountyPuckTarget");
static_assert(sizeof(VendettaPlayerComponent_GetActiveBountyPuckTarget) == 0x000008, "Wrong size on VendettaPlayerComponent_GetActiveBountyPuckTarget");
static_assert(offsetof(VendettaPlayerComponent_GetActiveBountyPuckTarget, ReturnValue) == 0x000000, "Member 'VendettaPlayerComponent_GetActiveBountyPuckTarget::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.GetManagingMutator
// 0x0008 (0x0008 - 0x0000)
struct VendettaPlayerComponent_GetManagingMutator final
{
public:
	class AFortAthenaMutator_Vendetta*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_GetManagingMutator) == 0x000008, "Wrong alignment on VendettaPlayerComponent_GetManagingMutator");
static_assert(sizeof(VendettaPlayerComponent_GetManagingMutator) == 0x000008, "Wrong size on VendettaPlayerComponent_GetManagingMutator");
static_assert(offsetof(VendettaPlayerComponent_GetManagingMutator, ReturnValue) == 0x000000, "Member 'VendettaPlayerComponent_GetManagingMutator::ReturnValue' has a wrong offset!");

// Function VendettaRuntime.VendettaPlayerComponent.GetMasterHunterCurrentTokens
// 0x0004 (0x0004 - 0x0000)
struct VendettaPlayerComponent_GetMasterHunterCurrentTokens final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VendettaPlayerComponent_GetMasterHunterCurrentTokens) == 0x000004, "Wrong alignment on VendettaPlayerComponent_GetMasterHunterCurrentTokens");
static_assert(sizeof(VendettaPlayerComponent_GetMasterHunterCurrentTokens) == 0x000004, "Wrong size on VendettaPlayerComponent_GetMasterHunterCurrentTokens");
static_assert(offsetof(VendettaPlayerComponent_GetMasterHunterCurrentTokens, ReturnValue) == 0x000000, "Member 'VendettaPlayerComponent_GetMasterHunterCurrentTokens::ReturnValue' has a wrong offset!");

}

