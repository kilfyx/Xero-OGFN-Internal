#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_ShockGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_ShockGrenade.B_Prj_Athena_ShockGrenade_C
// 0x0200 (0x0A78 - 0x0878)
class AB_Prj_Athena_ShockGrenade_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        BeepTimer;                                         // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fuse_Particle;                                     // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShockGrenadeMesh;                                  // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GrenadeFuse_AudioComponent;                        // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Distance;                                   // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_GrenadeFuseSound;                              // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x08D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DC[0x4];                                      // 0x08DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              Target;                                            // 0x08E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_BeepSound;                                     // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x08F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StuckVehicle;                                      // 0x08FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FD[0x3];                                      // 0x08FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemyPawn_Parent_Deimos_C*             DeimosPawn;                                        // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      DestroyObjectTypes;                                // 0x0908(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FScalableFloat                         DestroyDistance;                                   // 0x0918(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ShouldDestroy;                                     // 0x0940(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocity;                                    // 0x0968(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ExplodeDelay;                                      // 0x0990(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EnemiesTakeFallDamage;                             // 0x09B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         AllPlayersTakeFallDamage;                          // 0x09E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             Cue_StopSound;                                     // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ChestLootTableName;                                // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FeedbackCue;                                       // 0x0A18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HitWater;                                          // 0x0A20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Water_Debris_Explosion;                            // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_WaterExplosion;                                  // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     TargetVehicle;                                     // 0x0A38(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_KnockbackStatus;                                // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_BuildingPhysocs;                               // 0x0A48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_PhysicsObjectImpulseMult;                      // 0x0A50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Athena_ShockGrenade(int32 EntryPoint);
	void QuestHitPlayer();
	void LaunchBuldingActors(class AActor* Actor);
	void LaunchPlayerVehicle();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_2_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void LaunchDeimos();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void Stop_Rotation();
	void OnStop(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Handle_Pawn_Detach_RC();
	struct FVector CalculateLaunchVel(class AActor* Target_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_ShockGrenade_C">();
	}
	static class AB_Prj_Athena_ShockGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_ShockGrenade_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_ShockGrenade_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_ShockGrenade_C");
static_assert(sizeof(AB_Prj_Athena_ShockGrenade_C) == 0x000A78, "Wrong size on AB_Prj_Athena_ShockGrenade_C");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, UberGraphFrame) == 0x000878, "Member 'AB_Prj_Athena_ShockGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, BeepTimer) == 0x000880, "Member 'AB_Prj_Athena_ShockGrenade_C::BeepTimer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Fuse_Particle) == 0x000888, "Member 'AB_Prj_Athena_ShockGrenade_C::Fuse_Particle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, ShockGrenadeMesh) == 0x000890, "Member 'AB_Prj_Athena_ShockGrenade_C::ShockGrenadeMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, RotatingMovement) == 0x000898, "Member 'AB_Prj_Athena_ShockGrenade_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, GrenadeFuse_AudioComponent) == 0x0008A0, "Member 'AB_Prj_Athena_ShockGrenade_C::GrenadeFuse_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Effect_Distance) == 0x0008A8, "Member 'AB_Prj_Athena_ShockGrenade_C::Effect_Distance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, P_Explosion) == 0x0008B0, "Member 'AB_Prj_Athena_ShockGrenade_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Cue_DistantSound) == 0x0008B8, "Member 'AB_Prj_Athena_ShockGrenade_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Cue_CloseSound) == 0x0008C0, "Member 'AB_Prj_Athena_ShockGrenade_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Cue_GrenadeFuseSound) == 0x0008C8, "Member 'AB_Prj_Athena_ShockGrenade_C::Cue_GrenadeFuseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, HitLocation) == 0x0008D0, "Member 'AB_Prj_Athena_ShockGrenade_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Target) == 0x0008E0, "Member 'AB_Prj_Athena_ShockGrenade_C::Target' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Cue_BeepSound) == 0x0008E8, "Member 'AB_Prj_Athena_ShockGrenade_C::Cue_BeepSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, HitNormal) == 0x0008F0, "Member 'AB_Prj_Athena_ShockGrenade_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, StuckVehicle) == 0x0008FC, "Member 'AB_Prj_Athena_ShockGrenade_C::StuckVehicle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, DeimosPawn) == 0x000900, "Member 'AB_Prj_Athena_ShockGrenade_C::DeimosPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, DestroyObjectTypes) == 0x000908, "Member 'AB_Prj_Athena_ShockGrenade_C::DestroyObjectTypes' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, DestroyDistance) == 0x000918, "Member 'AB_Prj_Athena_ShockGrenade_C::DestroyDistance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, ShouldDestroy) == 0x000940, "Member 'AB_Prj_Athena_ShockGrenade_C::ShouldDestroy' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, LaunchVelocity) == 0x000968, "Member 'AB_Prj_Athena_ShockGrenade_C::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, ExplodeDelay) == 0x000990, "Member 'AB_Prj_Athena_ShockGrenade_C::ExplodeDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, EnemiesTakeFallDamage) == 0x0009B8, "Member 'AB_Prj_Athena_ShockGrenade_C::EnemiesTakeFallDamage' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, AllPlayersTakeFallDamage) == 0x0009E0, "Member 'AB_Prj_Athena_ShockGrenade_C::AllPlayersTakeFallDamage' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Cue_StopSound) == 0x000A08, "Member 'AB_Prj_Athena_ShockGrenade_C::Cue_StopSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, ChestLootTableName) == 0x000A10, "Member 'AB_Prj_Athena_ShockGrenade_C::ChestLootTableName' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, FeedbackCue) == 0x000A18, "Member 'AB_Prj_Athena_ShockGrenade_C::FeedbackCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, HitWater) == 0x000A20, "Member 'AB_Prj_Athena_ShockGrenade_C::HitWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Water_Debris_Explosion) == 0x000A28, "Member 'AB_Prj_Athena_ShockGrenade_C::Water_Debris_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, P_WaterExplosion) == 0x000A30, "Member 'AB_Prj_Athena_ShockGrenade_C::P_WaterExplosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, TargetVehicle) == 0x000A38, "Member 'AB_Prj_Athena_ShockGrenade_C::TargetVehicle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, GE_KnockbackStatus) == 0x000A40, "Member 'AB_Prj_Athena_ShockGrenade_C::GE_KnockbackStatus' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Tag_BuildingPhysocs) == 0x000A48, "Member 'AB_Prj_Athena_ShockGrenade_C::Tag_BuildingPhysocs' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShockGrenade_C, Row_PhysicsObjectImpulseMult) == 0x000A50, "Member 'AB_Prj_Athena_ShockGrenade_C::Row_PhysicsObjectImpulseMult' has a wrong offset!");

}

