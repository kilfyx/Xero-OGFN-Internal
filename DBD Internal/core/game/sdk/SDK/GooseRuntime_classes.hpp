#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GooseRuntime

#include "Basic.hpp"

#include "GooseRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// Class GooseRuntime.AthenaGoosePickup
// 0x0258 (0x0A20 - 0x07C8)
class AAthenaGoosePickup final : public ABuildingGameplayActor
{
public:
	EGoosePickupState                             PickupState;                                       // 0x07C8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsDespawning;                                     // 0x07C9(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         DeployedLifetime;                                  // 0x07D0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DespawnWarningTime;                                // 0x07F8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InStormLifetime;                                   // 0x0820(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DropGravityScale;                                  // 0x0848(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                         DisplayIndex;                                      // 0x0870(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_874[0xC];                                      // 0x0874(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, TSubclassOf<class UGameplayEffect>> Loot_To_Health_GE_Map;                     // 0x0880(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, TSubclassOf<class UGameplayEffect>> Loot_To_Boost_GE_Map;                      // 0x08D0(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, TSubclassOf<class UGameplayEffect>> Loot_To_Passengers_GE_Map;                 // 0x0920(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, TSubclassOf<class UGameplayEffect>> Loot_to_Driver_GE_Map;                     // 0x0970(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FName                                   ForcedLootTableName;                               // 0x09C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGooseDisplayData>              DisplayData;                                       // 0x09C8(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D8[0x8];                                      // 0x09D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeployHeight;                                      // 0x09E0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9E4[0x3C];                                     // 0x09E4(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeployTimerUp_Client();
	void DeployTimerUp_Server();
	void OnCollide(class AActor* CollidingActor);
	void OnDeployed_Client();
	void OnDeployed_Server();
	void OnFalling_Client();
	void OnFalling_Server();
	void OnImpactedByPlane_Client();
	void OnImpactedByPlane_Server();
	void OnRep_bIsDespawning();
	void OnRep_DisplayIndex();
	void OnRep_PickupState();
	void OnStartDespawnWarning_Client();
	void SetStaticMesh(class UStaticMesh* NewStaticMesh, const TArray<class UMaterialInterface*>& MaterialsToSwap, int32 InDisplayIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaGoosePickup">();
	}
	static class AAthenaGoosePickup* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthenaGoosePickup>();
	}
};
static_assert(alignof(AAthenaGoosePickup) == 0x000008, "Wrong alignment on AAthenaGoosePickup");
static_assert(sizeof(AAthenaGoosePickup) == 0x000A20, "Wrong size on AAthenaGoosePickup");
static_assert(offsetof(AAthenaGoosePickup, PickupState) == 0x0007C8, "Member 'AAthenaGoosePickup::PickupState' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, bIsDespawning) == 0x0007C9, "Member 'AAthenaGoosePickup::bIsDespawning' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DeployedLifetime) == 0x0007D0, "Member 'AAthenaGoosePickup::DeployedLifetime' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DespawnWarningTime) == 0x0007F8, "Member 'AAthenaGoosePickup::DespawnWarningTime' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, InStormLifetime) == 0x000820, "Member 'AAthenaGoosePickup::InStormLifetime' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DropGravityScale) == 0x000848, "Member 'AAthenaGoosePickup::DropGravityScale' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DisplayIndex) == 0x000870, "Member 'AAthenaGoosePickup::DisplayIndex' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, Loot_To_Health_GE_Map) == 0x000880, "Member 'AAthenaGoosePickup::Loot_To_Health_GE_Map' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, Loot_To_Boost_GE_Map) == 0x0008D0, "Member 'AAthenaGoosePickup::Loot_To_Boost_GE_Map' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, Loot_To_Passengers_GE_Map) == 0x000920, "Member 'AAthenaGoosePickup::Loot_To_Passengers_GE_Map' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, Loot_to_Driver_GE_Map) == 0x000970, "Member 'AAthenaGoosePickup::Loot_to_Driver_GE_Map' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, ForcedLootTableName) == 0x0009C0, "Member 'AAthenaGoosePickup::ForcedLootTableName' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DisplayData) == 0x0009C8, "Member 'AAthenaGoosePickup::DisplayData' has a wrong offset!");
static_assert(offsetof(AAthenaGoosePickup, DeployHeight) == 0x0009E0, "Member 'AAthenaGoosePickup::DeployHeight' has a wrong offset!");

// Class GooseRuntime.FortAthenaMutator_Goose
// 0x0500 (0x08D0 - 0x03D0)
class AFortAthenaMutator_Goose final : public AFortAthenaMutator_GameModeBase
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    PlaneStatusEffects;                                // 0x03D0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         AircraftPhaseLength;                               // 0x03E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bHidePlaneAndFriendlyPawnsDuringAimDownSightsForLocalControlledPlayer; // 0x0410(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlaneSpawnZHeight;                                 // 0x0438(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FVector                                PlaneSpawnOffsetFromPreviouslySpawnedPlane;        // 0x0460(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         InitialRadius;                                     // 0x0470(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlaneSpawnHeight;                                  // 0x0498(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlaneSkyCapOffset;                                 // 0x04C0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlaneSpawnPitch;                                   // 0x04E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InitialNumOfSleepingPlanes;                        // 0x0510(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlaneSpawnStormRadiusMultiplier;                   // 0x0538(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         GroundTestValue;                                   // 0x0560(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DriverRespawnScalar;                               // 0x0588(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortAthenaVehicle>         VehicleClass;                                      // 0x05B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            SiphonEffectForPlanes;                             // 0x05B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            ImmuneToStormDamageEffect;                         // 0x05C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C8[0x20];                                     // 0x05C8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NumberOfPlanesPerSquad;                            // 0x05E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bEliminatePassengersAfterPlaneDeath;               // 0x0610(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PassengerEliminationDelay;                         // 0x0638(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bPlayerImmuneToStormDamageEnabled;                 // 0x0660(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_688[0x10];                                     // 0x0688(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlaneLootTypeEntry>            LootTypeEntries;                                   // 0x0698(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HowOftenToUpdatePickupCount;                       // 0x06A8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	class FName                                   DefaultLootTableName;                              // 0x06D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DefaultDeployAltitude;                             // 0x06D8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DefaultPickupSpawnHeight;                          // 0x0700(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AAthenaGoosePickup>         PickupClass;                                       // 0x0728(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxNumOfAlivePickups;                              // 0x0730(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     BoundsXYSplineClass;                               // 0x0758(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPlaneSquadInfoArray                   SquadInfoArray;                                    // 0x0760(0x0130)(Net, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaVehicle*>             SpawnedVehicles;                                   // 0x0890(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AAthenaGoosePickup*>             SpawnedPickups;                                    // 0x08A0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAthenaMutator_ItemPromotion*       ItemPromotionMutator;                              // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8B8[0x10];                                     // 0x08B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  LocalControlledPlayerPawn;                         // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleClientPawnEnteredVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex);
	void HandleClientPawnExitedVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex);
	void HandleClientVehicleDestroyed(class AActor* VehicleActor);
	void KillPlayerPawns(const TArray<TWeakObjectPtr<class AFortPlayerPawn>>& PawnsToKill, const struct FGameplayTagContainer& DeathReasonTags, class AController* EventInstigator, class AActor* DamageCauser);
	void OnPawnDied(class AFortPlayerPawnAthena* PlayerPawn);
	void OnVehicleDied(class AFortAthenaVehicle* DestroyedVehicle, const struct FGameplayTagContainer& InTags, class AController* EventInstigator, class AActor* DamageCauser);
	void OnVehicleStolen(uint8 OldID, uint8 NewID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_Goose">();
	}
	static class AFortAthenaMutator_Goose* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_Goose>();
	}
};
static_assert(alignof(AFortAthenaMutator_Goose) == 0x000008, "Wrong alignment on AFortAthenaMutator_Goose");
static_assert(sizeof(AFortAthenaMutator_Goose) == 0x0008D0, "Wrong size on AFortAthenaMutator_Goose");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneStatusEffects) == 0x0003D0, "Member 'AFortAthenaMutator_Goose::PlaneStatusEffects' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, AircraftPhaseLength) == 0x0003E8, "Member 'AFortAthenaMutator_Goose::AircraftPhaseLength' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, bHidePlaneAndFriendlyPawnsDuringAimDownSightsForLocalControlledPlayer) == 0x000410, "Member 'AFortAthenaMutator_Goose::bHidePlaneAndFriendlyPawnsDuringAimDownSightsForLocalControlledPlayer' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSpawnZHeight) == 0x000438, "Member 'AFortAthenaMutator_Goose::PlaneSpawnZHeight' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSpawnOffsetFromPreviouslySpawnedPlane) == 0x000460, "Member 'AFortAthenaMutator_Goose::PlaneSpawnOffsetFromPreviouslySpawnedPlane' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, InitialRadius) == 0x000470, "Member 'AFortAthenaMutator_Goose::InitialRadius' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSpawnHeight) == 0x000498, "Member 'AFortAthenaMutator_Goose::PlaneSpawnHeight' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSkyCapOffset) == 0x0004C0, "Member 'AFortAthenaMutator_Goose::PlaneSkyCapOffset' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSpawnPitch) == 0x0004E8, "Member 'AFortAthenaMutator_Goose::PlaneSpawnPitch' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, InitialNumOfSleepingPlanes) == 0x000510, "Member 'AFortAthenaMutator_Goose::InitialNumOfSleepingPlanes' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PlaneSpawnStormRadiusMultiplier) == 0x000538, "Member 'AFortAthenaMutator_Goose::PlaneSpawnStormRadiusMultiplier' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, GroundTestValue) == 0x000560, "Member 'AFortAthenaMutator_Goose::GroundTestValue' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, DriverRespawnScalar) == 0x000588, "Member 'AFortAthenaMutator_Goose::DriverRespawnScalar' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, VehicleClass) == 0x0005B0, "Member 'AFortAthenaMutator_Goose::VehicleClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, SiphonEffectForPlanes) == 0x0005B8, "Member 'AFortAthenaMutator_Goose::SiphonEffectForPlanes' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, ImmuneToStormDamageEffect) == 0x0005C0, "Member 'AFortAthenaMutator_Goose::ImmuneToStormDamageEffect' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, NumberOfPlanesPerSquad) == 0x0005E8, "Member 'AFortAthenaMutator_Goose::NumberOfPlanesPerSquad' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, bEliminatePassengersAfterPlaneDeath) == 0x000610, "Member 'AFortAthenaMutator_Goose::bEliminatePassengersAfterPlaneDeath' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PassengerEliminationDelay) == 0x000638, "Member 'AFortAthenaMutator_Goose::PassengerEliminationDelay' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, bPlayerImmuneToStormDamageEnabled) == 0x000660, "Member 'AFortAthenaMutator_Goose::bPlayerImmuneToStormDamageEnabled' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, LootTypeEntries) == 0x000698, "Member 'AFortAthenaMutator_Goose::LootTypeEntries' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, HowOftenToUpdatePickupCount) == 0x0006A8, "Member 'AFortAthenaMutator_Goose::HowOftenToUpdatePickupCount' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, DefaultLootTableName) == 0x0006D0, "Member 'AFortAthenaMutator_Goose::DefaultLootTableName' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, DefaultDeployAltitude) == 0x0006D8, "Member 'AFortAthenaMutator_Goose::DefaultDeployAltitude' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, DefaultPickupSpawnHeight) == 0x000700, "Member 'AFortAthenaMutator_Goose::DefaultPickupSpawnHeight' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, PickupClass) == 0x000728, "Member 'AFortAthenaMutator_Goose::PickupClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, MaxNumOfAlivePickups) == 0x000730, "Member 'AFortAthenaMutator_Goose::MaxNumOfAlivePickups' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, BoundsXYSplineClass) == 0x000758, "Member 'AFortAthenaMutator_Goose::BoundsXYSplineClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, SquadInfoArray) == 0x000760, "Member 'AFortAthenaMutator_Goose::SquadInfoArray' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, SpawnedVehicles) == 0x000890, "Member 'AFortAthenaMutator_Goose::SpawnedVehicles' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, SpawnedPickups) == 0x0008A0, "Member 'AFortAthenaMutator_Goose::SpawnedPickups' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, ItemPromotionMutator) == 0x0008B0, "Member 'AFortAthenaMutator_Goose::ItemPromotionMutator' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Goose, LocalControlledPlayerPawn) == 0x0008C8, "Member 'AFortAthenaMutator_Goose::LocalControlledPlayerPawn' has a wrong offset!");

// Class GooseRuntime.FortCheatManager_Goose
// 0x0000 (0x0038 - 0x0038)
class UFortCheatManager_Goose final : public UFortCheatManager_Coupled
{
public:
	void GooseGivePlaneBoostGE(const int32 Index_0);
	void GooseGivePlaneEffect(const int32 Index_0);
	void GooseGivePlaneHealthGE(const int32 Index_0);
	void GooseKillPlaneSquad();
	void GooseSetPlaneHealthPercent(const float Percent);
	void GooseSetPlaneLives(const int32 NewLives);
	void GooseStealPlane();
	void GooseToggleDrops(const bool bToggleValue);
	void GooseUpgradePlaneGuns(const int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_Goose">();
	}
	static class UFortCheatManager_Goose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_Goose>();
	}
};
static_assert(alignof(UFortCheatManager_Goose) == 0x000008, "Wrong alignment on UFortCheatManager_Goose");
static_assert(sizeof(UFortCheatManager_Goose) == 0x000038, "Wrong size on UFortCheatManager_Goose");

}

