#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicCapsuleCodeRuntime

#include "Basic.hpp"

#include "DynamicCapsuleCodeRuntime_classes.hpp"
#include "DynamicCapsuleCodeRuntime_parameters.hpp"


namespace SDK
{

// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.ApplyDynamicCapsule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleHalfHeight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDynamicCapsuleComponent::ApplyDynamicCapsule(const struct FGameplayTag& tag, float CapsuleRadius, float CapsuleHalfHeight)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplyDynamicCapsule");

	Params::DynamicCapsuleComponent_ApplyDynamicCapsule Parms{};

	Parms.tag = std::move(tag);
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.CapsuleHalfHeight = CapsuleHalfHeight;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.ApplyDynamicCapsuleWithLocationAdjust
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleHalfHeight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  NewRelativeMeshHeight                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDynamicCapsuleComponent::ApplyDynamicCapsuleWithLocationAdjust(const struct FGameplayTag& tag, float CapsuleRadius, float CapsuleHalfHeight, double NewRelativeMeshHeight)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplyDynamicCapsuleWithLocationAdjust");

	Params::DynamicCapsuleComponent_ApplyDynamicCapsuleWithLocationAdjust Parms{};

	Parms.tag = std::move(tag);
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.CapsuleHalfHeight = CapsuleHalfHeight;
	Parms.NewRelativeMeshHeight = NewRelativeMeshHeight;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.OnRep_DynamicCapsuleReplicatedState
// (Final, Native, Private)

void UDynamicCapsuleComponent::OnRep_DynamicCapsuleReplicatedState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_DynamicCapsuleReplicatedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.RemoveDynamicCapsule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDynamicCapsuleComponent::RemoveDynamicCapsule(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveDynamicCapsule");

	Params::DynamicCapsuleComponent_RemoveDynamicCapsule Parms{};

	Parms.tag = std::move(tag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.ServerApplyDynamicCapsule
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleHalfHeight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  NewRelativeMeshHeight                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicCapsuleComponent::ServerApplyDynamicCapsule(const struct FGameplayTag& tag, float CapsuleRadius, float CapsuleHalfHeight, double NewRelativeMeshHeight)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerApplyDynamicCapsule");

	Params::DynamicCapsuleComponent_ServerApplyDynamicCapsule Parms{};

	Parms.tag = std::move(tag);
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.CapsuleHalfHeight = CapsuleHalfHeight;
	Parms.NewRelativeMeshHeight = NewRelativeMeshHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DynamicCapsuleCodeRuntime.DynamicCapsuleComponent.ServerRemoveDynamicCapsule
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicCapsuleComponent::ServerRemoveDynamicCapsule(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRemoveDynamicCapsule");

	Params::DynamicCapsuleComponent_ServerRemoveDynamicCapsule Parms{};

	Parms.tag = std::move(tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DynamicCapsuleCodeRuntime.JumpSlideComponent.OnJumpSlideEnd
// (Event, Public, BlueprintEvent)

void UJumpSlideComponent::OnJumpSlideEnd()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnJumpSlideEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DynamicCapsuleCodeRuntime.JumpSlideComponent.OnJumpSlideStart
// (Event, Public, BlueprintEvent)

void UJumpSlideComponent::OnJumpSlideStart()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnJumpSlideStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DynamicCapsuleCodeRuntime.JumpSlideComponent.OnMovementModeChange
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpSlideComponent::OnMovementModeChange(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMovementModeChange");

	Params::JumpSlideComponent_OnMovementModeChange Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}

}

